// Automatically generated by ifclite express parser from ifc2x3 express file - do not modify

#pragma once

#include "IfcTypeDefinitions.h"
#include "IfcParameterizedProfileDef.h"

namespace ifc2x3
{
   class IfcIShapeProfileDef : public IfcParameterizedProfileDef
   {
   public:
      virtual ~IfcIShapeProfileDef(){}

      explicit IfcIShapeProfileDef() = default;

      explicit IfcIShapeProfileDef(const IfcProfileTypeEnum& _ProfileType, IfcAxis2Placement2D* _Position, const IfcPositiveLengthMeasure& _OverallWidth, const IfcPositiveLengthMeasure& _OverallDepth, const IfcPositiveLengthMeasure& _WebThickness, const IfcPositiveLengthMeasure& _FlangeThickness)
         : IfcParameterizedProfileDef(_ProfileType, _Position), OverallWidth(_OverallWidth), OverallDepth(_OverallDepth), WebThickness(_WebThickness), FlangeThickness(_FlangeThickness) {}

      virtual std::string className() const { return "IfcIShapeProfileDef"; }

      boost::optional<IfcPositiveLengthMeasure> OverallWidth; // required parameter
      boost::optional<IfcPositiveLengthMeasure> OverallDepth; // required parameter
      boost::optional<IfcPositiveLengthMeasure> WebThickness; // required parameter
      boost::optional<IfcPositiveLengthMeasure> FlangeThickness; // required parameter
      boost::optional<IfcPositiveLengthMeasure> FilletRadius; // optional parameter

   protected:
      virtual void serialize(ifc::StepWriter& w) const
      {
         w.beginEntity(this);
         w.writeAttributeValue(IfcProfileTypeEnumStringMap, ProfileType);
         w.writeAttributeValue(ProfileName);
         w.writeAttributeInstance(Position);
         w.writeAttributeValue(OverallWidth);
         w.writeAttributeValue(OverallDepth);
         w.writeAttributeValue(WebThickness);
         w.writeAttributeValue(FlangeThickness);
         w.writeAttributeValue(FilletRadius);
         w.endEntity();
      }

   };

} // namespace ifc2x3

