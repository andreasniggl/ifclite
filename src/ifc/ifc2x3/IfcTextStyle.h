// Automatically generated by ifclite express parser from ifc2x3 express file - do not modify

#pragma once

#include "IfcTypeDefinitions.h"
#include "IfcPresentationStyle.h"
#include "IfcCharacterStyleSelect.h"
#include "IfcTextStyleSelect.h"
#include "IfcTextFontSelect.h"

namespace ifc2x3
{
   class IfcTextStyle : public IfcPresentationStyle
   {
   public:
      virtual ~IfcTextStyle(){}

      explicit IfcTextStyle() = default;

      explicit IfcTextStyle(const IfcTextFontSelect& _TextFontStyle)
         : IfcPresentationStyle(), TextFontStyle(_TextFontStyle) {}

      virtual std::string className() const { return "IfcTextStyle"; }

      boost::optional<IfcCharacterStyleSelect> TextCharacterAppearance; // optional parameter
      boost::optional<IfcTextStyleSelect> TextStyle; // optional parameter
      boost::optional<IfcTextFontSelect> TextFontStyle; // required parameter

   protected:
      virtual void serialize(ifc::StepWriter& w) const
      {
         w.beginEntity(this);
         w.writeAttributeValue(Name);
         w.writeAttributeSelect<IfcCharacterStyleSelectWriterVisitor>(TextCharacterAppearance);
         w.writeAttributeSelect<IfcTextStyleSelectWriterVisitor>(TextStyle);
         w.writeAttributeSelect<IfcTextFontSelectWriterVisitor>(TextFontStyle);
         w.endEntity();
      }

   };

} // namespace ifc2x3

