#ifndef IFC2X3_IFCSECTIONEDSPINE_H_INCLUDED
#define IFC2X3_IFCSECTIONEDSPINE_H_INCLUDED

// Automatically generated by sof_sdai_toolkit from ifc2x3 express file - do not modify

#include "IfcTypeDefinitions.h"
#include "IfcGeometricRepresentationItem.h"
#include "IfcCompositeCurve.h"
#include "IfcProfileDef.h"
#include "IfcAxis2Placement3D.h"

namespace ifc2x3
{
   class IfcSectionedSpine : public IfcGeometricRepresentationItem
   {
   public:
      virtual ~IfcSectionedSpine(){}

      IfcSectionedSpine() = default;

      IfcSectionedSpine(IfcCompositeCurve* _SpineCurve, const std::vector<IfcProfileDef*>& _CrossSections, const std::vector<IfcAxis2Placement3D*>& _CrossSectionPositions)
         : IfcGeometricRepresentationItem(), SpineCurve(_SpineCurve), CrossSections(_CrossSections), CrossSectionPositions(_CrossSectionPositions) {}

      virtual std::string name() const { return "IfcSectionedSpine"; }

      IfcCompositeCurve* SpineCurve; // required parameter
      std::vector<IfcProfileDef*> CrossSections; // required parameter
      std::vector<IfcAxis2Placement3D*> CrossSectionPositions; // required parameter

   protected:
      virtual void serialize(ifc::StepWriter& w) const
      {
         w.beginEntity(this);
         w.writeAttributeInstance(SpineCurve);
         w.writeAttributeInstanceList(CrossSections);
         w.writeAttributeInstanceList(CrossSectionPositions);
         w.endEntity();
      }

   };

} // namespace ifc2x3

#endif
