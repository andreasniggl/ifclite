#ifndef IFC2X3_IFCREINFORCEMENTBARPROPERTIES_H_INCLUDED
#define IFC2X3_IFCREINFORCEMENTBARPROPERTIES_H_INCLUDED

// Automatically generated by sof_sdai_toolkit from ifc2x3 express file - do not modify

#include "IfcTypeDefinitions.h"
#include "Entity.h"

namespace ifc2x3
{
   class IfcReinforcementBarProperties : public ifc::Entity
   {
   public:
      virtual ~IfcReinforcementBarProperties(){}

      IfcReinforcementBarProperties() = default;

      IfcReinforcementBarProperties(const IfcAreaMeasure& _TotalCrossSectionArea, const IfcLabel& _SteelGrade)
         : ifc::Entity(), TotalCrossSectionArea(_TotalCrossSectionArea), SteelGrade(_SteelGrade) {}

      virtual std::string name() const { return "IfcReinforcementBarProperties"; }

      boost::optional<IfcAreaMeasure> TotalCrossSectionArea; // required parameter
      boost::optional<IfcLabel> SteelGrade; // required parameter
      boost::optional<IfcReinforcingBarSurfaceEnum> BarSurface; // optional parameter
      boost::optional<IfcLengthMeasure> EffectiveDepth; // optional parameter
      boost::optional<IfcPositiveLengthMeasure> NominalBarDiameter; // optional parameter
      boost::optional<IfcCountMeasure> BarCount; // optional parameter

   protected:
      virtual void serialize(ifc::StepWriter& w) const
      {
         w.beginEntity(this);
         w.writeAttributeValueScalar(TotalCrossSectionArea);
         w.writeAttributeValueScalar(SteelGrade);
         w.writeAttributeValueEnumeration(IfcReinforcingBarSurfaceEnumStringMap, BarSurface);
         w.writeAttributeValueScalar(EffectiveDepth);
         w.writeAttributeValueScalar(NominalBarDiameter);
         w.writeAttributeValueScalar(BarCount);
         w.endEntity();
      }

   };

} // namespace ifc2x3

#endif
