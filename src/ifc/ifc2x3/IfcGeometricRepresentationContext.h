#ifndef IFC2X3_IFCGEOMETRICREPRESENTATIONCONTEXT_H_INCLUDED
#define IFC2X3_IFCGEOMETRICREPRESENTATIONCONTEXT_H_INCLUDED

// Automatically generated by sof_sdai_toolkit from ifc2x3 express file - do not modify

#include "IfcTypeDefinitions.h"
#include "IfcRepresentationContext.h"
#include "IfcAxis2Placement.h"
#include "IfcDirection.h"

namespace ifc2x3
{
   class IfcGeometricRepresentationContext : public IfcRepresentationContext
   {
   public:
      virtual ~IfcGeometricRepresentationContext(){}

      IfcGeometricRepresentationContext() = default;

      IfcGeometricRepresentationContext(const IfcDimensionCount& _CoordinateSpaceDimension, const IfcAxis2Placement& _WorldCoordinateSystem)
         : IfcRepresentationContext(), CoordinateSpaceDimension(_CoordinateSpaceDimension), WorldCoordinateSystem(_WorldCoordinateSystem) {}

      virtual std::string name() const { return "IfcGeometricRepresentationContext"; }

      boost::optional<IfcDimensionCount> CoordinateSpaceDimension; // required parameter
      boost::optional<double> Precision; // optional parameter
      boost::optional<IfcAxis2Placement> WorldCoordinateSystem; // required parameter
      IfcDirection* TrueNorth; // optional parameter

   protected:
      virtual void serialize(ifc::StepWriter& w) const
      {
         w.beginEntity(this);
         w.writeAttributeValueScalar(ContextIdentifier);
         w.writeAttributeValueScalar(ContextType);
         w.writeAttributeValueScalar(CoordinateSpaceDimension);
         w.writeAttributeValueScalar(Precision);
         w.writeAttributeSelect<IfcAxis2PlacementWriterVisitor>(WorldCoordinateSystem);
         w.writeAttributeInstance(TrueNorth);
         w.endEntity();
      }

   };

} // namespace ifc2x3

#endif
