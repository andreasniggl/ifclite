// Automatically generated by ifclite express parser from ifc2x3 express file - do not modify

#pragma once

#include "IfcTypeDefinitions.h"
#include "IfcRelConnects.h"
#include "IfcSpace.h"
#include "IfcElement.h"
#include "IfcConnectionGeometry.h"

namespace ifc2x3
{
   class IfcRelSpaceBoundary : public IfcRelConnects
   {
   public:
      virtual ~IfcRelSpaceBoundary(){}

      explicit IfcRelSpaceBoundary() = default;

      explicit IfcRelSpaceBoundary(const IfcGloballyUniqueId& _GlobalId, IfcOwnerHistory* _OwnerHistory, IfcSpace* _RelatingSpace, const IfcPhysicalOrVirtualEnum& _PhysicalOrVirtualBoundary, const IfcInternalOrExternalEnum& _InternalOrExternalBoundary)
         : IfcRelConnects(_GlobalId, _OwnerHistory), RelatingSpace(_RelatingSpace), PhysicalOrVirtualBoundary(_PhysicalOrVirtualBoundary), InternalOrExternalBoundary(_InternalOrExternalBoundary) {}

      virtual std::string className() const { return "IfcRelSpaceBoundary"; }

      IfcSpace* RelatingSpace; // required parameter
      IfcElement* RelatedBuildingElement; // optional parameter
      IfcConnectionGeometry* ConnectionGeometry; // optional parameter
      boost::optional<IfcPhysicalOrVirtualEnum> PhysicalOrVirtualBoundary; // required parameter
      boost::optional<IfcInternalOrExternalEnum> InternalOrExternalBoundary; // required parameter

   protected:
      virtual void serialize(ifc::StepWriter& w) const
      {
         w.beginEntity(this);
         w.writeAttributeValue(GlobalId);
         w.writeAttributeInstance(OwnerHistory);
         w.writeAttributeValue(Name);
         w.writeAttributeValue(Description);
         w.writeAttributeInstance(RelatingSpace);
         w.writeAttributeInstance(RelatedBuildingElement);
         w.writeAttributeInstance(ConnectionGeometry);
         w.writeAttributeValue(IfcPhysicalOrVirtualEnumStringMap, PhysicalOrVirtualBoundary);
         w.writeAttributeValue(IfcInternalOrExternalEnumStringMap, InternalOrExternalBoundary);
         w.endEntity();
      }

   };

} // namespace ifc2x3

