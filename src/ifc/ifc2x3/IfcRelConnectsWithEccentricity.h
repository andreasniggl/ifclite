#ifndef IFC2X3_IFCRELCONNECTSWITHECCENTRICITY_H_INCLUDED
#define IFC2X3_IFCRELCONNECTSWITHECCENTRICITY_H_INCLUDED

// Automatically generated by sof_sdai_toolkit from ifc2x3 express file - do not modify

#include "IfcTypeDefinitions.h"
#include "IfcRelConnectsStructuralMember.h"
#include "IfcConnectionGeometry.h"

namespace ifc2x3
{
   class IfcRelConnectsWithEccentricity : public IfcRelConnectsStructuralMember
   {
   public:
      virtual ~IfcRelConnectsWithEccentricity(){}

      IfcRelConnectsWithEccentricity() = default;

      IfcRelConnectsWithEccentricity(const IfcGloballyUniqueId& _GlobalId, IfcOwnerHistory* _OwnerHistory, IfcStructuralMember* _RelatingStructuralMember, IfcStructuralConnection* _RelatedStructuralConnection, IfcConnectionGeometry* _ConnectionConstraint)
         : IfcRelConnectsStructuralMember(_GlobalId, _OwnerHistory, _RelatingStructuralMember, _RelatedStructuralConnection), ConnectionConstraint(_ConnectionConstraint) {}

      virtual std::string name() const { return "IfcRelConnectsWithEccentricity"; }

      IfcConnectionGeometry* ConnectionConstraint; // required parameter

   protected:
      virtual void serialize(ifc::StepWriter& w) const
      {
         w.beginEntity(this);
         w.writeAttributeValueScalar(GlobalId);
         w.writeAttributeInstance(OwnerHistory);
         w.writeAttributeValueScalar(Name);
         w.writeAttributeValueScalar(Description);
         w.writeAttributeInstance(RelatingStructuralMember);
         w.writeAttributeInstance(RelatedStructuralConnection);
         w.writeAttributeInstance(AppliedCondition);
         w.writeAttributeInstance(AdditionalConditions);
         w.writeAttributeValueScalar(SupportedLength);
         w.writeAttributeInstance(ConditionCoordinateSystem);
         w.writeAttributeInstance(ConnectionConstraint);
         w.endEntity();
      }

   };

} // namespace ifc2x3

#endif
