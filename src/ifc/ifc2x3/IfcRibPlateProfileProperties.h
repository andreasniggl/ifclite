// Automatically generated by ifclite express parser from ifc2x3 express file - do not modify

#pragma once

#include "IfcTypeDefinitions.h"
#include "IfcProfileProperties.h"

namespace ifc2x3
{
   class IfcRibPlateProfileProperties : public IfcProfileProperties
   {
   public:
      virtual ~IfcRibPlateProfileProperties(){}

      explicit IfcRibPlateProfileProperties() = default;

      explicit IfcRibPlateProfileProperties(const IfcRibPlateDirectionEnum& _Direction)
         : IfcProfileProperties(), Direction(_Direction) {}

      virtual std::string className() const { return "IfcRibPlateProfileProperties"; }

      boost::optional<IfcPositiveLengthMeasure> Thickness; // optional parameter
      boost::optional<IfcPositiveLengthMeasure> RibHeight; // optional parameter
      boost::optional<IfcPositiveLengthMeasure> RibWidth; // optional parameter
      boost::optional<IfcPositiveLengthMeasure> RibSpacing; // optional parameter
      boost::optional<IfcRibPlateDirectionEnum> Direction; // required parameter

   protected:
      virtual void serialize(ifc::StepWriter& w) const
      {
         w.beginEntity(this);
         w.writeAttributeValue(ProfileName);
         w.writeAttributeInstance(ProfileDefinition);
         w.writeAttributeValue(Thickness);
         w.writeAttributeValue(RibHeight);
         w.writeAttributeValue(RibWidth);
         w.writeAttributeValue(RibSpacing);
         w.writeAttributeValue(IfcRibPlateDirectionEnumStringMap, Direction);
         w.endEntity();
      }

   };

} // namespace ifc2x3

