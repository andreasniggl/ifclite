#ifndef IFC2X3_IFCSOUNDVALUE_H_INCLUDED
#define IFC2X3_IFCSOUNDVALUE_H_INCLUDED

// Automatically generated by sof_sdai_toolkit from ifc2x3 express file - do not modify

#include "IfcTypeDefinitions.h"
#include "IfcPropertySetDefinition.h"
#include "IfcTimeSeries.h"
#include "IfcDerivedMeasureValue.h"

namespace ifc2x3
{
   class IfcSoundValue : public IfcPropertySetDefinition
   {
   public:
      virtual ~IfcSoundValue(){}

      IfcSoundValue() = default;

      IfcSoundValue(const IfcGloballyUniqueId& _GlobalId, IfcOwnerHistory* _OwnerHistory, const IfcFrequencyMeasure& _Frequency)
         : IfcPropertySetDefinition(_GlobalId, _OwnerHistory), Frequency(_Frequency) {}

      virtual std::string name() const { return "IfcSoundValue"; }

      IfcTimeSeries* SoundLevelTimeSeries; // optional parameter
      boost::optional<IfcFrequencyMeasure> Frequency; // required parameter
      boost::optional<IfcDerivedMeasureValue> SoundLevelSingleValue; // optional parameter

   protected:
      virtual void serialize(ifc::StepWriter& w) const
      {
         w.beginEntity(this);
         w.writeAttributeValueScalar(GlobalId);
         w.writeAttributeInstance(OwnerHistory);
         w.writeAttributeValueScalar(Name);
         w.writeAttributeValueScalar(Description);
         w.writeAttributeInstance(SoundLevelTimeSeries);
         w.writeAttributeValueScalar(Frequency);
         w.writeAttributeSelect<IfcDerivedMeasureValueWriterVisitor>(SoundLevelSingleValue);
         w.endEntity();
      }

   };

} // namespace ifc2x3

#endif
