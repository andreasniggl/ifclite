// Automatically generated by ifclite express parser from ifc2x3 express file - do not modify

#pragma once

#include "IfcTypeDefinitions.h"
#include "IfcControl.h"

namespace ifc2x3
{
   class IfcProjectOrder : public IfcControl
   {
   public:
      virtual ~IfcProjectOrder(){}

      explicit IfcProjectOrder() = default;

      explicit IfcProjectOrder(const IfcGloballyUniqueId& _GlobalId, IfcOwnerHistory* _OwnerHistory, const IfcIdentifier& _ID, const IfcProjectOrderTypeEnum& _PredefinedType)
         : IfcControl(_GlobalId, _OwnerHistory), ID(_ID), PredefinedType(_PredefinedType) {}

      virtual std::string className() const { return "IfcProjectOrder"; }

      boost::optional<IfcIdentifier> ID; // required parameter
      boost::optional<IfcProjectOrderTypeEnum> PredefinedType; // required parameter
      boost::optional<IfcLabel> Status; // optional parameter

   protected:
      virtual void serialize(ifc::StepWriter& w) const
      {
         w.beginEntity(this);
         w.writeAttributeValue(GlobalId);
         w.writeAttributeInstance(OwnerHistory);
         w.writeAttributeValue(Name);
         w.writeAttributeValue(Description);
         w.writeAttributeValue(ObjectType);
         w.writeAttributeValue(ID);
         w.writeAttributeValue(IfcProjectOrderTypeEnumStringMap, PredefinedType);
         w.writeAttributeValue(Status);
         w.endEntity();
      }

   };

} // namespace ifc2x3

