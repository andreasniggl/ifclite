#ifndef IFC2X3_IFCBOUNDARYEDGECONDITION_H_INCLUDED
#define IFC2X3_IFCBOUNDARYEDGECONDITION_H_INCLUDED

// Automatically generated by sof_sdai_toolkit from ifc2x3 express file - do not modify

#include "IfcTypeDefinitions.h"
#include "IfcBoundaryCondition.h"

namespace ifc2x3
{
   class IfcBoundaryEdgeCondition : public IfcBoundaryCondition
   {
   public:
      virtual ~IfcBoundaryEdgeCondition(){}

      IfcBoundaryEdgeCondition() = default;

      virtual std::string name() const { return "IfcBoundaryEdgeCondition"; }

      boost::optional<IfcModulusOfLinearSubgradeReactionMeasure> LinearStiffnessByLengthX; // optional parameter
      boost::optional<IfcModulusOfLinearSubgradeReactionMeasure> LinearStiffnessByLengthY; // optional parameter
      boost::optional<IfcModulusOfLinearSubgradeReactionMeasure> LinearStiffnessByLengthZ; // optional parameter
      boost::optional<IfcModulusOfRotationalSubgradeReactionMeasure> RotationalStiffnessByLengthX; // optional parameter
      boost::optional<IfcModulusOfRotationalSubgradeReactionMeasure> RotationalStiffnessByLengthY; // optional parameter
      boost::optional<IfcModulusOfRotationalSubgradeReactionMeasure> RotationalStiffnessByLengthZ; // optional parameter

   protected:
      virtual void serialize(ifc::StepWriter& w) const
      {
         w.beginEntity(this);
         w.writeAttributeValueScalar(Name);
         w.writeAttributeValueScalar(LinearStiffnessByLengthX);
         w.writeAttributeValueScalar(LinearStiffnessByLengthY);
         w.writeAttributeValueScalar(LinearStiffnessByLengthZ);
         w.writeAttributeValueScalar(RotationalStiffnessByLengthX);
         w.writeAttributeValueScalar(RotationalStiffnessByLengthY);
         w.writeAttributeValueScalar(RotationalStiffnessByLengthZ);
         w.endEntity();
      }

   };

} // namespace ifc2x3

#endif
