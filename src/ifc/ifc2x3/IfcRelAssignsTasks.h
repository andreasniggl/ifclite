// Automatically generated by ifclite express parser from ifc2x3 express file - do not modify

#pragma once

#include "IfcTypeDefinitions.h"
#include "IfcRelAssignsToControl.h"
#include "IfcScheduleTimeControl.h"

namespace ifc2x3
{
   class IfcRelAssignsTasks : public IfcRelAssignsToControl
   {
   public:
      virtual ~IfcRelAssignsTasks(){}

      explicit IfcRelAssignsTasks() = default;

      explicit IfcRelAssignsTasks(const IfcGloballyUniqueId& _GlobalId, IfcOwnerHistory* _OwnerHistory, const std::vector<IfcObjectDefinition*>& _RelatedObjects, IfcControl* _RelatingControl)
         : IfcRelAssignsToControl(_GlobalId, _OwnerHistory, _RelatedObjects, _RelatingControl) {}

      virtual std::string className() const { return "IfcRelAssignsTasks"; }

      IfcScheduleTimeControl* TimeForTask; // optional parameter

   protected:
      virtual void serialize(ifc::StepWriter& w) const
      {
         w.beginEntity(this);
         w.writeAttributeValue(GlobalId);
         w.writeAttributeInstance(OwnerHistory);
         w.writeAttributeValue(Name);
         w.writeAttributeValue(Description);
         w.writeAttributeInstance(RelatedObjects);
         w.writeAttributeValue(IfcObjectTypeEnumStringMap, RelatedObjectsType);
         w.writeAttributeInstance(RelatingControl);
         w.writeAttributeInstance(TimeForTask);
         w.endEntity();
      }

   };

} // namespace ifc2x3

