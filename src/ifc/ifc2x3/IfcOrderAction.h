// Automatically generated by ifclite express parser from ifc2x3 express file - do not modify

#pragma once

#include "IfcTypeDefinitions.h"
#include "IfcTask.h"

namespace ifc2x3
{
   class IfcOrderAction : public IfcTask
   {
   public:
      virtual ~IfcOrderAction(){}

      explicit IfcOrderAction() = default;

      explicit IfcOrderAction(const IfcGloballyUniqueId& _GlobalId, IfcOwnerHistory* _OwnerHistory, const IfcIdentifier& _TaskId, const bool& _IsMilestone, const IfcIdentifier& _ActionID)
         : IfcTask(_GlobalId, _OwnerHistory, _TaskId, _IsMilestone), ActionID(_ActionID) {}

      virtual std::string className() const { return "IfcOrderAction"; }

      boost::optional<IfcIdentifier> ActionID; // required parameter

   protected:
      virtual void serialize(ifc::StepWriter& w) const
      {
         w.beginEntity(this);
         w.writeAttributeValue(GlobalId);
         w.writeAttributeInstance(OwnerHistory);
         w.writeAttributeValue(Name);
         w.writeAttributeValue(Description);
         w.writeAttributeValue(ObjectType);
         w.writeAttributeValue(TaskId);
         w.writeAttributeValue(Status);
         w.writeAttributeValue(WorkMethod);
         w.writeAttributeValue(IsMilestone);
         w.writeAttributeValue(Priority);
         w.writeAttributeValue(ActionID);
         w.endEntity();
      }

   };

} // namespace ifc2x3

