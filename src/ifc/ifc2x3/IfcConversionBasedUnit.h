// Automatically generated by ifclite express parser from ifc2x3 express file - do not modify

#pragma once

#include "IfcTypeDefinitions.h"
#include "IfcNamedUnit.h"
#include "IfcMeasureWithUnit.h"

namespace ifc2x3
{
   class IfcConversionBasedUnit : public IfcNamedUnit
   {
   public:
      virtual ~IfcConversionBasedUnit(){}

      explicit IfcConversionBasedUnit() = default;

      explicit IfcConversionBasedUnit(IfcDimensionalExponents* _Dimensions, const IfcUnitEnum& _UnitType, const IfcLabel& _Name, IfcMeasureWithUnit* _ConversionFactor)
         : IfcNamedUnit(_Dimensions, _UnitType), Name(_Name), ConversionFactor(_ConversionFactor) {}

      virtual std::string className() const { return "IfcConversionBasedUnit"; }

      boost::optional<IfcLabel> Name; // required parameter
      IfcMeasureWithUnit* ConversionFactor; // required parameter

   protected:
      virtual void serialize(ifc::StepWriter& w) const
      {
         w.beginEntity(this);
         w.writeAttributeInstance(Dimensions,true);
         w.writeAttributeValue(IfcUnitEnumStringMap, UnitType);
         w.writeAttributeValue(Name);
         w.writeAttributeInstance(ConversionFactor);
         w.endEntity();
      }

   };

} // namespace ifc2x3

