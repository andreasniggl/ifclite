// Automatically generated by ifclite express parser from ifc2x3 express file - do not modify

#pragma once

#include "IfcTypeDefinitions.h"
#include "IfcWorkControl.h"

namespace ifc2x3
{
   class IfcWorkPlan : public IfcWorkControl
   {
   public:
      virtual ~IfcWorkPlan(){}

      explicit IfcWorkPlan() = default;

      explicit IfcWorkPlan(const IfcGloballyUniqueId& _GlobalId, IfcOwnerHistory* _OwnerHistory, const IfcIdentifier& _Identifier, const IfcDateTimeSelect& _CreationDate, const IfcDateTimeSelect& _StartTime)
         : IfcWorkControl(_GlobalId, _OwnerHistory, _Identifier, _CreationDate, _StartTime) {}

      virtual std::string className() const { return "IfcWorkPlan"; }


   protected:
      virtual void serialize(ifc::StepWriter& w) const
      {
         w.beginEntity(this);
         w.writeAttributeValue(GlobalId);
         w.writeAttributeInstance(OwnerHistory);
         w.writeAttributeValue(Name);
         w.writeAttributeValue(Description);
         w.writeAttributeValue(ObjectType);
         w.writeAttributeValue(Identifier);
         w.writeAttributeSelect<IfcDateTimeSelectWriterVisitor>(CreationDate);
         w.writeAttributeInstance(Creators);
         w.writeAttributeValue(Purpose);
         w.writeAttributeValue(Duration);
         w.writeAttributeValue(TotalFloat);
         w.writeAttributeSelect<IfcDateTimeSelectWriterVisitor>(StartTime);
         w.writeAttributeSelect<IfcDateTimeSelectWriterVisitor>(FinishTime);
         w.writeAttributeValue(IfcWorkControlTypeEnumStringMap, WorkControlType);
         w.writeAttributeValue(UserDefinedControlType);
         w.endEntity();
      }

   };

} // namespace ifc2x3

