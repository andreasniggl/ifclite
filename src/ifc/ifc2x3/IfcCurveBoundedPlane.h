// Automatically generated by ifclite express parser from ifc2x3 express file - do not modify

#pragma once

#include "IfcTypeDefinitions.h"
#include "IfcBoundedSurface.h"
#include "IfcPlane.h"
#include "IfcCurve.h"
#include "IfcCurve.h"

namespace ifc2x3
{
   class IfcCurveBoundedPlane : public IfcBoundedSurface
   {
   public:
      virtual ~IfcCurveBoundedPlane(){}

      explicit IfcCurveBoundedPlane() = default;

      explicit IfcCurveBoundedPlane(IfcPlane* _BasisSurface, IfcCurve* _OuterBoundary, const std::vector<IfcCurve*>& _InnerBoundaries)
         : IfcBoundedSurface(), BasisSurface(_BasisSurface), OuterBoundary(_OuterBoundary), InnerBoundaries(_InnerBoundaries) {}

      virtual std::string className() const { return "IfcCurveBoundedPlane"; }

      IfcPlane* BasisSurface; // required parameter
      IfcCurve* OuterBoundary; // required parameter
      std::vector<IfcCurve*> InnerBoundaries; // required parameter

   protected:
      virtual void serialize(ifc::StepWriter& w) const
      {
         w.beginEntity(this);
         w.writeAttributeInstance(BasisSurface);
         w.writeAttributeInstance(OuterBoundary);
         w.writeAttributeInstance(InnerBoundaries);
         w.endEntity();
      }

   };

} // namespace ifc2x3

