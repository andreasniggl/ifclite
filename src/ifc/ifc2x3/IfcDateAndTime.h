// Automatically generated by ifclite express parser from ifc2x3 express file - do not modify

#pragma once

#include "IfcTypeDefinitions.h"
#include "Entity.h"
#include "IfcCalendarDate.h"
#include "IfcLocalTime.h"

namespace ifc2x3
{
   class IfcDateAndTime : public ifc::Entity
   {
   public:
      virtual ~IfcDateAndTime(){}

      explicit IfcDateAndTime() = default;

      explicit IfcDateAndTime(IfcCalendarDate* _DateComponent, IfcLocalTime* _TimeComponent)
         : ifc::Entity(), DateComponent(_DateComponent), TimeComponent(_TimeComponent) {}

      virtual std::string className() const { return "IfcDateAndTime"; }

      IfcCalendarDate* DateComponent; // required parameter
      IfcLocalTime* TimeComponent; // required parameter

   protected:
      virtual void serialize(ifc::StepWriter& w) const
      {
         w.beginEntity(this);
         w.writeAttributeInstance(DateComponent);
         w.writeAttributeInstance(TimeComponent);
         w.endEntity();
      }

   };

} // namespace ifc2x3

