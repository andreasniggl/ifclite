#ifndef IFC2X3_IFCRIGHTCIRCULARCYLINDER_H_INCLUDED
#define IFC2X3_IFCRIGHTCIRCULARCYLINDER_H_INCLUDED

// Automatically generated by sof_sdai_toolkit from ifc2x3 express file - do not modify

#include "IfcTypeDefinitions.h"
#include "IfcCsgPrimitive3D.h"

namespace ifc2x3
{
   class IfcRightCircularCylinder : public IfcCsgPrimitive3D
   {
   public:
      virtual ~IfcRightCircularCylinder(){}

      IfcRightCircularCylinder() = default;

      IfcRightCircularCylinder(IfcAxis2Placement3D* _Position, const IfcPositiveLengthMeasure& _Height, const IfcPositiveLengthMeasure& _Radius)
         : IfcCsgPrimitive3D(_Position), Height(_Height), Radius(_Radius) {}

      virtual std::string name() const { return "IfcRightCircularCylinder"; }

      boost::optional<IfcPositiveLengthMeasure> Height; // required parameter
      boost::optional<IfcPositiveLengthMeasure> Radius; // required parameter

   protected:
      virtual void serialize(ifc::StepWriter& w) const
      {
         w.beginEntity(this);
         w.writeAttributeInstance(Position);
         w.writeAttributeValueScalar(Height);
         w.writeAttributeValueScalar(Radius);
         w.endEntity();
      }

   };

} // namespace ifc2x3

#endif
