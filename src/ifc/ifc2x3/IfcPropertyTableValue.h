#ifndef IFC2X3_IFCPROPERTYTABLEVALUE_H_INCLUDED
#define IFC2X3_IFCPROPERTYTABLEVALUE_H_INCLUDED

// Automatically generated by sof_sdai_toolkit from ifc2x3 express file - do not modify

#include "IfcTypeDefinitions.h"
#include "IfcSimpleProperty.h"
#include "IfcValue.h"
#include "IfcValue.h"
#include "IfcUnit.h"
#include "IfcUnit.h"

namespace ifc2x3
{
   class IfcPropertyTableValue : public IfcSimpleProperty
   {
   public:
      virtual ~IfcPropertyTableValue(){}

      IfcPropertyTableValue() = default;

      IfcPropertyTableValue(const IfcIdentifier& _Name, const std::vector<boost::optional<IfcValue>>& _DefiningValues, const std::vector<boost::optional<IfcValue>>& _DefinedValues)
         : IfcSimpleProperty(_Name), DefiningValues(_DefiningValues), DefinedValues(_DefinedValues) {}

      virtual std::string name() const { return "IfcPropertyTableValue"; }

      std::vector<boost::optional<IfcValue>> DefiningValues; // required parameter
      std::vector<boost::optional<IfcValue>> DefinedValues; // required parameter
      boost::optional<IfcText> Expression; // optional parameter
      boost::optional<IfcUnit> DefiningUnit; // optional parameter
      boost::optional<IfcUnit> DefinedUnit; // optional parameter

   protected:
      virtual void serialize(ifc::StepWriter& w) const
      {
         w.beginEntity(this);
         w.writeAttributeValueScalar(Name);
         w.writeAttributeValueScalar(Description);
         w.writeAttributeSelectList<IfcValueWriterVisitor>(DefiningValues);
         w.writeAttributeSelectList<IfcValueWriterVisitor>(DefinedValues);
         w.writeAttributeValueScalar(Expression);
         w.writeAttributeSelect<IfcUnitWriterVisitor>(DefiningUnit);
         w.writeAttributeSelect<IfcUnitWriterVisitor>(DefinedUnit);
         w.endEntity();
      }

   };

} // namespace ifc2x3

#endif
