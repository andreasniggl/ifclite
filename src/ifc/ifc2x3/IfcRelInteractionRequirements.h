// Automatically generated by ifclite express parser from ifc2x3 express file - do not modify

#pragma once

#include "IfcTypeDefinitions.h"
#include "IfcRelConnects.h"
#include "IfcSpatialStructureElement.h"
#include "IfcSpaceProgram.h"
#include "IfcSpaceProgram.h"

namespace ifc2x3
{
   class IfcRelInteractionRequirements : public IfcRelConnects
   {
   public:
      virtual ~IfcRelInteractionRequirements(){}

      explicit IfcRelInteractionRequirements() = default;

      explicit IfcRelInteractionRequirements(const IfcGloballyUniqueId& _GlobalId, IfcOwnerHistory* _OwnerHistory, IfcSpaceProgram* _RelatedSpaceProgram, IfcSpaceProgram* _RelatingSpaceProgram)
         : IfcRelConnects(_GlobalId, _OwnerHistory), RelatedSpaceProgram(_RelatedSpaceProgram), RelatingSpaceProgram(_RelatingSpaceProgram) {}

      virtual std::string className() const { return "IfcRelInteractionRequirements"; }

      boost::optional<IfcCountMeasure> DailyInteraction; // optional parameter
      boost::optional<IfcNormalisedRatioMeasure> ImportanceRating; // optional parameter
      IfcSpatialStructureElement* LocationOfInteraction; // optional parameter
      IfcSpaceProgram* RelatedSpaceProgram; // required parameter
      IfcSpaceProgram* RelatingSpaceProgram; // required parameter

   protected:
      virtual void serialize(ifc::StepWriter& w) const
      {
         w.beginEntity(this);
         w.writeAttributeValue(GlobalId);
         w.writeAttributeInstance(OwnerHistory);
         w.writeAttributeValue(Name);
         w.writeAttributeValue(Description);
         w.writeAttributeValue(DailyInteraction);
         w.writeAttributeValue(ImportanceRating);
         w.writeAttributeInstance(LocationOfInteraction);
         w.writeAttributeInstance(RelatedSpaceProgram);
         w.writeAttributeInstance(RelatingSpaceProgram);
         w.endEntity();
      }

   };

} // namespace ifc2x3

