#ifndef IFC2X3_IFCRECTANGLEHOLLOWPROFILEDEF_H_INCLUDED
#define IFC2X3_IFCRECTANGLEHOLLOWPROFILEDEF_H_INCLUDED

// Automatically generated by sof_sdai_toolkit from ifc2x3 express file - do not modify

#include "IfcTypeDefinitions.h"
#include "IfcRectangleProfileDef.h"

namespace ifc2x3
{
   class IfcRectangleHollowProfileDef : public IfcRectangleProfileDef
   {
   public:
      virtual ~IfcRectangleHollowProfileDef(){}

      IfcRectangleHollowProfileDef() = default;

      IfcRectangleHollowProfileDef(const IfcProfileTypeEnum& _ProfileType, IfcAxis2Placement2D* _Position, const IfcPositiveLengthMeasure& _XDim, const IfcPositiveLengthMeasure& _YDim, const IfcPositiveLengthMeasure& _WallThickness)
         : IfcRectangleProfileDef(_ProfileType, _Position, _XDim, _YDim), WallThickness(_WallThickness) {}

      virtual std::string name() const { return "IfcRectangleHollowProfileDef"; }

      boost::optional<IfcPositiveLengthMeasure> WallThickness; // required parameter
      boost::optional<IfcPositiveLengthMeasure> InnerFilletRadius; // optional parameter
      boost::optional<IfcPositiveLengthMeasure> OuterFilletRadius; // optional parameter

   protected:
      virtual void serialize(ifc::StepWriter& w) const
      {
         w.beginEntity(this);
         w.writeAttributeValueEnumeration(IfcProfileTypeEnumStringMap, ProfileType);
         w.writeAttributeValueScalar(ProfileName);
         w.writeAttributeInstance(Position);
         w.writeAttributeValueScalar(XDim);
         w.writeAttributeValueScalar(YDim);
         w.writeAttributeValueScalar(WallThickness);
         w.writeAttributeValueScalar(InnerFilletRadius);
         w.writeAttributeValueScalar(OuterFilletRadius);
         w.endEntity();
      }

   };

} // namespace ifc2x3

#endif
