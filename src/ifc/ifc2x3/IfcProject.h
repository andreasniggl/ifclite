// Automatically generated by ifclite express parser from ifc2x3 express file - do not modify

#pragma once

#include "IfcTypeDefinitions.h"
#include "IfcObject.h"
#include "IfcRepresentationContext.h"
#include "IfcUnitAssignment.h"

namespace ifc2x3
{
   class IfcProject : public IfcObject
   {
   public:
      virtual ~IfcProject(){}

      explicit IfcProject() = default;

      explicit IfcProject(const IfcGloballyUniqueId& _GlobalId, IfcOwnerHistory* _OwnerHistory, const std::vector<IfcRepresentationContext*>& _RepresentationContexts, IfcUnitAssignment* _UnitsInContext)
         : IfcObject(_GlobalId, _OwnerHistory), RepresentationContexts(_RepresentationContexts), UnitsInContext(_UnitsInContext) {}

      virtual std::string className() const { return "IfcProject"; }

      boost::optional<IfcLabel> LongName; // optional parameter
      boost::optional<IfcLabel> Phase; // optional parameter
      std::vector<IfcRepresentationContext*> RepresentationContexts; // required parameter
      IfcUnitAssignment* UnitsInContext; // required parameter

   protected:
      virtual void serialize(ifc::StepWriter& w) const
      {
         w.beginEntity(this);
         w.writeAttributeValue(GlobalId);
         w.writeAttributeInstance(OwnerHistory);
         w.writeAttributeValue(Name);
         w.writeAttributeValue(Description);
         w.writeAttributeValue(ObjectType);
         w.writeAttributeValue(LongName);
         w.writeAttributeValue(Phase);
         w.writeAttributeInstance(RepresentationContexts);
         w.writeAttributeInstance(UnitsInContext);
         w.endEntity();
      }

   };

} // namespace ifc2x3

