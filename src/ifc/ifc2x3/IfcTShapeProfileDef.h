#ifndef IFC2X3_IFCTSHAPEPROFILEDEF_H_INCLUDED
#define IFC2X3_IFCTSHAPEPROFILEDEF_H_INCLUDED

// Automatically generated by sof_sdai_toolkit from ifc2x3 express file - do not modify

#include "IfcTypeDefinitions.h"
#include "IfcParameterizedProfileDef.h"

namespace ifc2x3
{
   class IfcTShapeProfileDef : public IfcParameterizedProfileDef
   {
   public:
      virtual ~IfcTShapeProfileDef(){}

      IfcTShapeProfileDef() = default;

      IfcTShapeProfileDef(const IfcProfileTypeEnum& _ProfileType, IfcAxis2Placement2D* _Position, const IfcPositiveLengthMeasure& _Depth, const IfcPositiveLengthMeasure& _FlangeWidth, const IfcPositiveLengthMeasure& _WebThickness, const IfcPositiveLengthMeasure& _FlangeThickness)
         : IfcParameterizedProfileDef(_ProfileType, _Position), Depth(_Depth), FlangeWidth(_FlangeWidth), WebThickness(_WebThickness), FlangeThickness(_FlangeThickness) {}

      virtual std::string name() const { return "IfcTShapeProfileDef"; }

      boost::optional<IfcPositiveLengthMeasure> Depth; // required parameter
      boost::optional<IfcPositiveLengthMeasure> FlangeWidth; // required parameter
      boost::optional<IfcPositiveLengthMeasure> WebThickness; // required parameter
      boost::optional<IfcPositiveLengthMeasure> FlangeThickness; // required parameter
      boost::optional<IfcPositiveLengthMeasure> FilletRadius; // optional parameter
      boost::optional<IfcPositiveLengthMeasure> FlangeEdgeRadius; // optional parameter
      boost::optional<IfcPositiveLengthMeasure> WebEdgeRadius; // optional parameter
      boost::optional<IfcPlaneAngleMeasure> WebSlope; // optional parameter
      boost::optional<IfcPlaneAngleMeasure> FlangeSlope; // optional parameter
      boost::optional<IfcPositiveLengthMeasure> CentreOfGravityInY; // optional parameter

   protected:
      virtual void serialize(ifc::StepWriter& w) const
      {
         w.beginEntity(this);
         w.writeAttributeValueEnumeration(IfcProfileTypeEnumStringMap, ProfileType);
         w.writeAttributeValueScalar(ProfileName);
         w.writeAttributeInstance(Position);
         w.writeAttributeValueScalar(Depth);
         w.writeAttributeValueScalar(FlangeWidth);
         w.writeAttributeValueScalar(WebThickness);
         w.writeAttributeValueScalar(FlangeThickness);
         w.writeAttributeValueScalar(FilletRadius);
         w.writeAttributeValueScalar(FlangeEdgeRadius);
         w.writeAttributeValueScalar(WebEdgeRadius);
         w.writeAttributeValueScalar(WebSlope);
         w.writeAttributeValueScalar(FlangeSlope);
         w.writeAttributeValueScalar(CentreOfGravityInY);
         w.endEntity();
      }

   };

} // namespace ifc2x3

#endif
