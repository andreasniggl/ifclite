#ifndef IFC2X3_IFCRATIONALBEZIERCURVE_H_INCLUDED
#define IFC2X3_IFCRATIONALBEZIERCURVE_H_INCLUDED

// Automatically generated by sof_sdai_toolkit from ifc2x3 express file - do not modify

#include "IfcTypeDefinitions.h"
#include "IfcBezierCurve.h"

namespace ifc2x3
{
   class IfcRationalBezierCurve : public IfcBezierCurve
   {
   public:
      virtual ~IfcRationalBezierCurve(){}

      IfcRationalBezierCurve() = default;

      IfcRationalBezierCurve(const int& _Degree, const std::vector<IfcCartesianPoint*>& _ControlPointsList, const IfcBSplineCurveForm& _CurveForm, const bool& _ClosedCurve, const bool& _SelfIntersect, const std::vector<double>& _WeightsData)
         : IfcBezierCurve(_Degree, _ControlPointsList, _CurveForm, _ClosedCurve, _SelfIntersect), WeightsData(_WeightsData) {}

      virtual std::string name() const { return "IfcRationalBezierCurve"; }

      std::vector<double> WeightsData; // required parameter

   protected:
      virtual void serialize(ifc::StepWriter& w) const
      {
         w.beginEntity(this);
         w.writeAttributeValueScalar(Degree);
         w.writeAttributeInstanceList(ControlPointsList);
         w.writeAttributeValueEnumeration(IfcBSplineCurveFormStringMap, CurveForm);
         w.writeAttributeValueScalar(ClosedCurve);
         w.writeAttributeValueScalar(SelfIntersect);
         w.writeAttributeValueList(WeightsData);
         w.endEntity();
      }

   };

} // namespace ifc2x3

#endif
