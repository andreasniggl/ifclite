// Automatically generated by ifclite express parser from ifc2x3 express file - do not modify

#pragma once

#include "IfcTypeDefinitions.h"
#include "IfcBezierCurve.h"

namespace ifc2x3
{
   class IfcRationalBezierCurve : public IfcBezierCurve
   {
   public:
      virtual ~IfcRationalBezierCurve(){}

      explicit IfcRationalBezierCurve() = default;

      explicit IfcRationalBezierCurve(const int& _Degree, const std::vector<IfcCartesianPoint*>& _ControlPointsList, const IfcBSplineCurveForm& _CurveForm, const bool& _ClosedCurve, const bool& _SelfIntersect, const std::vector<double>& _WeightsData)
         : IfcBezierCurve(_Degree, _ControlPointsList, _CurveForm, _ClosedCurve, _SelfIntersect), WeightsData(_WeightsData) {}

      virtual std::string className() const { return "IfcRationalBezierCurve"; }

      std::vector<double> WeightsData; // required parameter

   protected:
      virtual void serialize(ifc::StepWriter& w) const
      {
         w.beginEntity(this);
         w.writeAttributeValue(Degree);
         w.writeAttributeInstance(ControlPointsList);
         w.writeAttributeValue(IfcBSplineCurveFormStringMap, CurveForm);
         w.writeAttributeValue(ClosedCurve);
         w.writeAttributeValue(SelfIntersect);
         w.writeAttributeValue(WeightsData);
         w.endEntity();
      }

   };

} // namespace ifc2x3

