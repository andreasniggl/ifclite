#ifndef IFC2X3_IFCSURFACESTYLELIGHTING_H_INCLUDED
#define IFC2X3_IFCSURFACESTYLELIGHTING_H_INCLUDED

// Automatically generated by sof_sdai_toolkit from ifc2x3 express file - do not modify

#include "IfcTypeDefinitions.h"
#include "Entity.h"
#include "IfcColourRgb.h"
#include "IfcColourRgb.h"
#include "IfcColourRgb.h"
#include "IfcColourRgb.h"

namespace ifc2x3
{
   class IfcSurfaceStyleLighting : public ifc::Entity
   {
   public:
      virtual ~IfcSurfaceStyleLighting(){}

      IfcSurfaceStyleLighting() = default;

      IfcSurfaceStyleLighting(IfcColourRgb* _DiffuseTransmissionColour, IfcColourRgb* _DiffuseReflectionColour, IfcColourRgb* _TransmissionColour, IfcColourRgb* _ReflectanceColour)
         : ifc::Entity(), DiffuseTransmissionColour(_DiffuseTransmissionColour), DiffuseReflectionColour(_DiffuseReflectionColour), TransmissionColour(_TransmissionColour), ReflectanceColour(_ReflectanceColour) {}

      virtual std::string name() const { return "IfcSurfaceStyleLighting"; }

      IfcColourRgb* DiffuseTransmissionColour; // required parameter
      IfcColourRgb* DiffuseReflectionColour; // required parameter
      IfcColourRgb* TransmissionColour; // required parameter
      IfcColourRgb* ReflectanceColour; // required parameter

   protected:
      virtual void serialize(ifc::StepWriter& w) const
      {
         w.beginEntity(this);
         w.writeAttributeInstance(DiffuseTransmissionColour);
         w.writeAttributeInstance(DiffuseReflectionColour);
         w.writeAttributeInstance(TransmissionColour);
         w.writeAttributeInstance(ReflectanceColour);
         w.endEntity();
      }

   };

} // namespace ifc2x3

#endif
