#ifndef IFC2X3_IFCRELASSIGNSTOPROCESS_H_INCLUDED
#define IFC2X3_IFCRELASSIGNSTOPROCESS_H_INCLUDED

// Automatically generated by sof_sdai_toolkit from ifc2x3 express file - do not modify

#include "IfcTypeDefinitions.h"
#include "IfcRelAssigns.h"
#include "IfcProcess.h"
#include "IfcMeasureWithUnit.h"

namespace ifc2x3
{
   class IfcRelAssignsToProcess : public IfcRelAssigns
   {
   public:
      virtual ~IfcRelAssignsToProcess(){}

      IfcRelAssignsToProcess() = default;

      IfcRelAssignsToProcess(const IfcGloballyUniqueId& _GlobalId, IfcOwnerHistory* _OwnerHistory, const std::vector<IfcObjectDefinition*>& _RelatedObjects, IfcProcess* _RelatingProcess)
         : IfcRelAssigns(_GlobalId, _OwnerHistory, _RelatedObjects), RelatingProcess(_RelatingProcess) {}

      virtual std::string name() const { return "IfcRelAssignsToProcess"; }

      IfcProcess* RelatingProcess; // required parameter
      IfcMeasureWithUnit* QuantityInProcess; // optional parameter

   protected:
      virtual void serialize(ifc::StepWriter& w) const
      {
         w.beginEntity(this);
         w.writeAttributeValueScalar(GlobalId);
         w.writeAttributeInstance(OwnerHistory);
         w.writeAttributeValueScalar(Name);
         w.writeAttributeValueScalar(Description);
         w.writeAttributeInstanceList(RelatedObjects);
         w.writeAttributeValueEnumeration(IfcObjectTypeEnumStringMap, RelatedObjectsType);
         w.writeAttributeInstance(RelatingProcess);
         w.writeAttributeInstance(QuantityInProcess);
         w.endEntity();
      }

   };

} // namespace ifc2x3

#endif
