#ifndef IFC2X3_IFCTEXTSTYLETEXTMODEL_H_INCLUDED
#define IFC2X3_IFCTEXTSTYLETEXTMODEL_H_INCLUDED

// Automatically generated by sof_sdai_toolkit from ifc2x3 express file - do not modify

#include "IfcTypeDefinitions.h"
#include "Entity.h"
#include "IfcSizeSelect.h"
#include "IfcSizeSelect.h"
#include "IfcSizeSelect.h"
#include "IfcSizeSelect.h"

namespace ifc2x3
{
   class IfcTextStyleTextModel : public ifc::Entity
   {
   public:
      virtual ~IfcTextStyleTextModel(){}

      IfcTextStyleTextModel() = default;

      virtual std::string name() const { return "IfcTextStyleTextModel"; }

      boost::optional<IfcSizeSelect> TextIndent; // optional parameter
      boost::optional<IfcTextAlignment> TextAlign; // optional parameter
      boost::optional<IfcTextDecoration> TextDecoration; // optional parameter
      boost::optional<IfcSizeSelect> LetterSpacing; // optional parameter
      boost::optional<IfcSizeSelect> WordSpacing; // optional parameter
      boost::optional<IfcTextTransformation> TextTransform; // optional parameter
      boost::optional<IfcSizeSelect> LineHeight; // optional parameter

   protected:
      virtual void serialize(ifc::StepWriter& w) const
      {
         w.beginEntity(this);
         w.writeAttributeSelect<IfcSizeSelectWriterVisitor>(TextIndent);
         w.writeAttributeValueScalar(TextAlign);
         w.writeAttributeValueScalar(TextDecoration);
         w.writeAttributeSelect<IfcSizeSelectWriterVisitor>(LetterSpacing);
         w.writeAttributeSelect<IfcSizeSelectWriterVisitor>(WordSpacing);
         w.writeAttributeValueScalar(TextTransform);
         w.writeAttributeSelect<IfcSizeSelectWriterVisitor>(LineHeight);
         w.endEntity();
      }

   };

} // namespace ifc2x3

#endif
