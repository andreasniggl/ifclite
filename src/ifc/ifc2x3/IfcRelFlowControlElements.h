#ifndef IFC2X3_IFCRELFLOWCONTROLELEMENTS_H_INCLUDED
#define IFC2X3_IFCRELFLOWCONTROLELEMENTS_H_INCLUDED

// Automatically generated by sof_sdai_toolkit from ifc2x3 express file - do not modify

#include "IfcTypeDefinitions.h"
#include "IfcRelConnects.h"
#include "IfcDistributionControlElement.h"
#include "IfcDistributionFlowElement.h"

namespace ifc2x3
{
   class IfcRelFlowControlElements : public IfcRelConnects
   {
   public:
      virtual ~IfcRelFlowControlElements(){}

      IfcRelFlowControlElements() = default;

      IfcRelFlowControlElements(const IfcGloballyUniqueId& _GlobalId, IfcOwnerHistory* _OwnerHistory, const std::vector<IfcDistributionControlElement*>& _RelatedControlElements, IfcDistributionFlowElement* _RelatingFlowElement)
         : IfcRelConnects(_GlobalId, _OwnerHistory), RelatedControlElements(_RelatedControlElements), RelatingFlowElement(_RelatingFlowElement) {}

      virtual std::string name() const { return "IfcRelFlowControlElements"; }

      std::vector<IfcDistributionControlElement*> RelatedControlElements; // required parameter
      IfcDistributionFlowElement* RelatingFlowElement; // required parameter

   protected:
      virtual void serialize(ifc::StepWriter& w) const
      {
         w.beginEntity(this);
         w.writeAttributeValueScalar(GlobalId);
         w.writeAttributeInstance(OwnerHistory);
         w.writeAttributeValueScalar(Name);
         w.writeAttributeValueScalar(Description);
         w.writeAttributeInstanceList(RelatedControlElements);
         w.writeAttributeInstance(RelatingFlowElement);
         w.endEntity();
      }

   };

} // namespace ifc2x3

#endif
