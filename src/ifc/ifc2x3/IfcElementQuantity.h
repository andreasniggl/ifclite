#ifndef IFC2X3_IFCELEMENTQUANTITY_H_INCLUDED
#define IFC2X3_IFCELEMENTQUANTITY_H_INCLUDED

// Automatically generated by sof_sdai_toolkit from ifc2x3 express file - do not modify

#include "IfcTypeDefinitions.h"
#include "IfcPropertySetDefinition.h"
#include "IfcPhysicalQuantity.h"

namespace ifc2x3
{
   class IfcElementQuantity : public IfcPropertySetDefinition
   {
   public:
      virtual ~IfcElementQuantity(){}

      IfcElementQuantity() = default;

      IfcElementQuantity(const IfcGloballyUniqueId& _GlobalId, IfcOwnerHistory* _OwnerHistory, const std::vector<IfcPhysicalQuantity*>& _Quantities)
         : IfcPropertySetDefinition(_GlobalId, _OwnerHistory), Quantities(_Quantities) {}

      virtual std::string name() const { return "IfcElementQuantity"; }

      boost::optional<IfcLabel> MethodOfMeasurement; // optional parameter
      std::vector<IfcPhysicalQuantity*> Quantities; // required parameter

   protected:
      virtual void serialize(ifc::StepWriter& w) const
      {
         w.beginEntity(this);
         w.writeAttributeValueScalar(GlobalId);
         w.writeAttributeInstance(OwnerHistory);
         w.writeAttributeValueScalar(Name);
         w.writeAttributeValueScalar(Description);
         w.writeAttributeValueScalar(MethodOfMeasurement);
         w.writeAttributeInstanceList(Quantities);
         w.endEntity();
      }

   };

} // namespace ifc2x3

#endif
