// Automatically generated by ifclite express parser from ifc2x3 express file - do not modify

#pragma once

#include "IfcTypeDefinitions.h"
#include "IfcPropertySetDefinition.h"
#include "IfcPhysicalQuantity.h"

namespace ifc2x3
{
   class IfcElementQuantity : public IfcPropertySetDefinition
   {
   public:
      virtual ~IfcElementQuantity(){}

      explicit IfcElementQuantity() = default;

      explicit IfcElementQuantity(const IfcGloballyUniqueId& _GlobalId, IfcOwnerHistory* _OwnerHistory, const std::vector<IfcPhysicalQuantity*>& _Quantities)
         : IfcPropertySetDefinition(_GlobalId, _OwnerHistory), Quantities(_Quantities) {}

      virtual std::string className() const { return "IfcElementQuantity"; }

      boost::optional<IfcLabel> MethodOfMeasurement; // optional parameter
      std::vector<IfcPhysicalQuantity*> Quantities; // required parameter

   protected:
      virtual void serialize(ifc::StepWriter& w) const
      {
         w.beginEntity(this);
         w.writeAttributeValue(GlobalId);
         w.writeAttributeInstance(OwnerHistory);
         w.writeAttributeValue(Name);
         w.writeAttributeValue(Description);
         w.writeAttributeValue(MethodOfMeasurement);
         w.writeAttributeInstance(Quantities);
         w.endEntity();
      }

   };

} // namespace ifc2x3

