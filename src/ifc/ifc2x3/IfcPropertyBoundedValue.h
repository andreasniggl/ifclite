// Automatically generated by ifclite express parser from ifc2x3 express file - do not modify

#pragma once

#include "IfcTypeDefinitions.h"
#include "IfcSimpleProperty.h"
#include "IfcValue.h"
#include "IfcValue.h"
#include "IfcUnit.h"

namespace ifc2x3
{
   class IfcPropertyBoundedValue : public IfcSimpleProperty
   {
   public:
      virtual ~IfcPropertyBoundedValue(){}

      explicit IfcPropertyBoundedValue() = default;

      explicit IfcPropertyBoundedValue(const IfcIdentifier& _Name)
         : IfcSimpleProperty(_Name) {}

      virtual std::string className() const { return "IfcPropertyBoundedValue"; }

      boost::optional<IfcValue> UpperBoundValue; // optional parameter
      boost::optional<IfcValue> LowerBoundValue; // optional parameter
      boost::optional<IfcUnit> Unit; // optional parameter

   protected:
      virtual void serialize(ifc::StepWriter& w) const
      {
         w.beginEntity(this);
         w.writeAttributeValue(Name);
         w.writeAttributeValue(Description);
         w.writeAttributeSelect<IfcValueWriterVisitor>(UpperBoundValue);
         w.writeAttributeSelect<IfcValueWriterVisitor>(LowerBoundValue);
         w.writeAttributeSelect<IfcUnitWriterVisitor>(Unit);
         w.endEntity();
      }

   };

} // namespace ifc2x3

