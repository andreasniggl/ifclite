// Automatically generated by ifclite express parser from ifc2x3 express file - do not modify

#pragma once

#include "IfcTypeDefinitions.h"
#include "IfcMechanicalMaterialProperties.h"
#include "IfcRelaxation.h"

namespace ifc2x3
{
   class IfcMechanicalSteelMaterialProperties : public IfcMechanicalMaterialProperties
   {
   public:
      virtual ~IfcMechanicalSteelMaterialProperties(){}

      explicit IfcMechanicalSteelMaterialProperties() = default;

      explicit IfcMechanicalSteelMaterialProperties(IfcMaterial* _Material)
         : IfcMechanicalMaterialProperties(_Material) {}

      virtual std::string className() const { return "IfcMechanicalSteelMaterialProperties"; }

      boost::optional<IfcPressureMeasure> YieldStress; // optional parameter
      boost::optional<IfcPressureMeasure> UltimateStress; // optional parameter
      boost::optional<IfcPositiveRatioMeasure> UltimateStrain; // optional parameter
      boost::optional<IfcModulusOfElasticityMeasure> HardeningModule; // optional parameter
      boost::optional<IfcPressureMeasure> ProportionalStress; // optional parameter
      boost::optional<IfcPositiveRatioMeasure> PlasticStrain; // optional parameter
      std::vector<IfcRelaxation*> Relaxations; // optional parameter

   protected:
      virtual void serialize(ifc::StepWriter& w) const
      {
         w.beginEntity(this);
         w.writeAttributeInstance(Material);
         w.writeAttributeValue(DynamicViscosity);
         w.writeAttributeValue(YoungModulus);
         w.writeAttributeValue(ShearModulus);
         w.writeAttributeValue(PoissonRatio);
         w.writeAttributeValue(ThermalExpansionCoefficient);
         w.writeAttributeValue(YieldStress);
         w.writeAttributeValue(UltimateStress);
         w.writeAttributeValue(UltimateStrain);
         w.writeAttributeValue(HardeningModule);
         w.writeAttributeValue(ProportionalStress);
         w.writeAttributeValue(PlasticStrain);
         w.writeAttributeInstance(Relaxations);
         w.endEntity();
      }

   };

} // namespace ifc2x3

