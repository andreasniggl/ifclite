#ifndef IFC2X3_IFCBUILDING_H_INCLUDED
#define IFC2X3_IFCBUILDING_H_INCLUDED

// Automatically generated by sof_sdai_toolkit from ifc2x3 express file - do not modify

#include "IfcTypeDefinitions.h"
#include "IfcSpatialStructureElement.h"
#include "IfcPostalAddress.h"

namespace ifc2x3
{
   class IfcBuilding : public IfcSpatialStructureElement
   {
   public:
      virtual ~IfcBuilding(){}

      IfcBuilding() = default;

      IfcBuilding(const IfcGloballyUniqueId& _GlobalId, IfcOwnerHistory* _OwnerHistory, const IfcElementCompositionEnum& _CompositionType)
         : IfcSpatialStructureElement(_GlobalId, _OwnerHistory, _CompositionType) {}

      virtual std::string name() const { return "IfcBuilding"; }

      boost::optional<IfcLengthMeasure> ElevationOfRefHeight; // optional parameter
      boost::optional<IfcLengthMeasure> ElevationOfTerrain; // optional parameter
      IfcPostalAddress* BuildingAddress; // optional parameter

   protected:
      virtual void serialize(ifc::StepWriter& w) const
      {
         w.beginEntity(this);
         w.writeAttributeValueScalar(GlobalId);
         w.writeAttributeInstance(OwnerHistory);
         w.writeAttributeValueScalar(Name);
         w.writeAttributeValueScalar(Description);
         w.writeAttributeValueScalar(ObjectType);
         w.writeAttributeInstance(ObjectPlacement);
         w.writeAttributeInstance(Representation);
         w.writeAttributeValueScalar(LongName);
         w.writeAttributeValueEnumeration(IfcElementCompositionEnumStringMap, CompositionType);
         w.writeAttributeValueScalar(ElevationOfRefHeight);
         w.writeAttributeValueScalar(ElevationOfTerrain);
         w.writeAttributeInstance(BuildingAddress);
         w.endEntity();
      }

   };

} // namespace ifc2x3

#endif
