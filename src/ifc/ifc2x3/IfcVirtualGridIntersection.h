// Automatically generated by ifclite express parser from ifc2x3 express file - do not modify

#pragma once

#include "IfcTypeDefinitions.h"
#include "Entity.h"
#include "IfcGridAxis.h"

namespace ifc2x3
{
   class IfcVirtualGridIntersection : public ifc::Entity
   {
   public:
      virtual ~IfcVirtualGridIntersection(){}

      explicit IfcVirtualGridIntersection() = default;

      explicit IfcVirtualGridIntersection(const std::vector<IfcGridAxis*>& _IntersectingAxes, const std::vector<IfcLengthMeasure>& _OffsetDistances)
         : ifc::Entity(), IntersectingAxes(_IntersectingAxes), OffsetDistances(_OffsetDistances) {}

      virtual std::string className() const { return "IfcVirtualGridIntersection"; }

      std::vector<IfcGridAxis*> IntersectingAxes; // required parameter
      std::vector<IfcLengthMeasure> OffsetDistances; // required parameter

   protected:
      virtual void serialize(ifc::StepWriter& w) const
      {
         w.beginEntity(this);
         w.writeAttributeInstance(IntersectingAxes);
         w.writeAttributeValue(OffsetDistances);
         w.endEntity();
      }

   };

} // namespace ifc2x3

