// Automatically generated by ifclite express parser from ifc2x3 express file - do not modify

#pragma once

#include "IfcTypeDefinitions.h"
#include "IfcMaterialProperties.h"

namespace ifc2x3
{
   class IfcHygroscopicMaterialProperties : public IfcMaterialProperties
   {
   public:
      virtual ~IfcHygroscopicMaterialProperties(){}

      explicit IfcHygroscopicMaterialProperties() = default;

      explicit IfcHygroscopicMaterialProperties(IfcMaterial* _Material)
         : IfcMaterialProperties(_Material) {}

      virtual std::string className() const { return "IfcHygroscopicMaterialProperties"; }

      boost::optional<IfcPositiveRatioMeasure> UpperVaporResistanceFactor; // optional parameter
      boost::optional<IfcPositiveRatioMeasure> LowerVaporResistanceFactor; // optional parameter
      boost::optional<IfcIsothermalMoistureCapacityMeasure> IsothermalMoistureCapacity; // optional parameter
      boost::optional<IfcVaporPermeabilityMeasure> VaporPermeability; // optional parameter
      boost::optional<IfcMoistureDiffusivityMeasure> MoistureDiffusivity; // optional parameter

   protected:
      virtual void serialize(ifc::StepWriter& w) const
      {
         w.beginEntity(this);
         w.writeAttributeInstance(Material);
         w.writeAttributeValue(UpperVaporResistanceFactor);
         w.writeAttributeValue(LowerVaporResistanceFactor);
         w.writeAttributeValue(IsothermalMoistureCapacity);
         w.writeAttributeValue(VaporPermeability);
         w.writeAttributeValue(MoistureDiffusivity);
         w.endEntity();
      }

   };

} // namespace ifc2x3

