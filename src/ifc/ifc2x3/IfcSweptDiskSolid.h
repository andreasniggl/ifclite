#ifndef IFC2X3_IFCSWEPTDISKSOLID_H_INCLUDED
#define IFC2X3_IFCSWEPTDISKSOLID_H_INCLUDED

// Automatically generated by sof_sdai_toolkit from ifc2x3 express file - do not modify

#include "IfcTypeDefinitions.h"
#include "IfcSolidModel.h"
#include "IfcCurve.h"

namespace ifc2x3
{
   class IfcSweptDiskSolid : public IfcSolidModel
   {
   public:
      virtual ~IfcSweptDiskSolid(){}

      IfcSweptDiskSolid() = default;

      IfcSweptDiskSolid(IfcCurve* _Directrix, const IfcPositiveLengthMeasure& _Radius, const IfcParameterValue& _StartParam, const IfcParameterValue& _EndParam)
         : IfcSolidModel(), Directrix(_Directrix), Radius(_Radius), StartParam(_StartParam), EndParam(_EndParam) {}

      virtual std::string name() const { return "IfcSweptDiskSolid"; }

      IfcCurve* Directrix; // required parameter
      boost::optional<IfcPositiveLengthMeasure> Radius; // required parameter
      boost::optional<IfcPositiveLengthMeasure> InnerRadius; // optional parameter
      boost::optional<IfcParameterValue> StartParam; // required parameter
      boost::optional<IfcParameterValue> EndParam; // required parameter

   protected:
      virtual void serialize(ifc::StepWriter& w) const
      {
         w.beginEntity(this);
         w.writeAttributeInstance(Directrix);
         w.writeAttributeValueScalar(Radius);
         w.writeAttributeValueScalar(InnerRadius);
         w.writeAttributeValueScalar(StartParam);
         w.writeAttributeValueScalar(EndParam);
         w.endEntity();
      }

   };

} // namespace ifc2x3

#endif
