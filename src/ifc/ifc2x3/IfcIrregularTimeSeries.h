#ifndef IFC2X3_IFCIRREGULARTIMESERIES_H_INCLUDED
#define IFC2X3_IFCIRREGULARTIMESERIES_H_INCLUDED

// Automatically generated by sof_sdai_toolkit from ifc2x3 express file - do not modify

#include "IfcTypeDefinitions.h"
#include "IfcTimeSeries.h"
#include "IfcIrregularTimeSeriesValue.h"

namespace ifc2x3
{
   class IfcIrregularTimeSeries : public IfcTimeSeries
   {
   public:
      virtual ~IfcIrregularTimeSeries(){}

      IfcIrregularTimeSeries() = default;

      IfcIrregularTimeSeries(const IfcLabel& _Name, const IfcDateTimeSelect& _StartTime, const IfcDateTimeSelect& _EndTime, const IfcTimeSeriesDataTypeEnum& _TimeSeriesDataType, const IfcDataOriginEnum& _DataOrigin, const std::vector<IfcIrregularTimeSeriesValue*>& _Values)
         : IfcTimeSeries(_Name, _StartTime, _EndTime, _TimeSeriesDataType, _DataOrigin), Values(_Values) {}

      virtual std::string name() const { return "IfcIrregularTimeSeries"; }

      std::vector<IfcIrregularTimeSeriesValue*> Values; // required parameter

   protected:
      virtual void serialize(ifc::StepWriter& w) const
      {
         w.beginEntity(this);
         w.writeAttributeValueScalar(Name);
         w.writeAttributeValueScalar(Description);
         w.writeAttributeSelect<IfcDateTimeSelectWriterVisitor>(StartTime);
         w.writeAttributeSelect<IfcDateTimeSelectWriterVisitor>(EndTime);
         w.writeAttributeValueEnumeration(IfcTimeSeriesDataTypeEnumStringMap, TimeSeriesDataType);
         w.writeAttributeValueEnumeration(IfcDataOriginEnumStringMap, DataOrigin);
         w.writeAttributeValueScalar(UserDefinedDataOrigin);
         w.writeAttributeSelect<IfcUnitWriterVisitor>(Unit);
         w.writeAttributeInstanceList(Values);
         w.endEntity();
      }

   };

} // namespace ifc2x3

#endif
