#ifndef IFC2X3_IFCBOUNDINGBOX_H_INCLUDED
#define IFC2X3_IFCBOUNDINGBOX_H_INCLUDED

// Automatically generated by sof_sdai_toolkit from ifc2x3 express file - do not modify

#include "IfcTypeDefinitions.h"
#include "IfcGeometricRepresentationItem.h"
#include "IfcCartesianPoint.h"

namespace ifc2x3
{
   class IfcBoundingBox : public IfcGeometricRepresentationItem
   {
   public:
      virtual ~IfcBoundingBox(){}

      IfcBoundingBox() = default;

      IfcBoundingBox(IfcCartesianPoint* _Corner, const IfcPositiveLengthMeasure& _XDim, const IfcPositiveLengthMeasure& _YDim, const IfcPositiveLengthMeasure& _ZDim)
         : IfcGeometricRepresentationItem(), Corner(_Corner), XDim(_XDim), YDim(_YDim), ZDim(_ZDim) {}

      virtual std::string name() const { return "IfcBoundingBox"; }

      IfcCartesianPoint* Corner; // required parameter
      boost::optional<IfcPositiveLengthMeasure> XDim; // required parameter
      boost::optional<IfcPositiveLengthMeasure> YDim; // required parameter
      boost::optional<IfcPositiveLengthMeasure> ZDim; // required parameter

   protected:
      virtual void serialize(ifc::StepWriter& w) const
      {
         w.beginEntity(this);
         w.writeAttributeInstance(Corner);
         w.writeAttributeValueScalar(XDim);
         w.writeAttributeValueScalar(YDim);
         w.writeAttributeValueScalar(ZDim);
         w.endEntity();
      }

   };

} // namespace ifc2x3

#endif
