// Automatically generated by ifclite express parser from ifc2x3 express file - do not modify

#pragma once

#include "IfcTypeDefinitions.h"
#include "IfcGeometricRepresentationItem.h"
#include "IfcDirection.h"
#include "IfcDirection.h"
#include "IfcCartesianPoint.h"

namespace ifc2x3
{
   class IfcCartesianTransformationOperator : public IfcGeometricRepresentationItem
   {
   public:
      virtual ~IfcCartesianTransformationOperator(){}

      explicit IfcCartesianTransformationOperator() = default;

      explicit IfcCartesianTransformationOperator(IfcCartesianPoint* _LocalOrigin)
         : IfcGeometricRepresentationItem(), LocalOrigin(_LocalOrigin) {}

      virtual std::string className() const { return "IfcCartesianTransformationOperator"; }

      IfcDirection* Axis1; // optional parameter
      IfcDirection* Axis2; // optional parameter
      IfcCartesianPoint* LocalOrigin; // required parameter
      boost::optional<double> Scale; // optional parameter

   protected:
      virtual void serialize(ifc::StepWriter& w) const
      {
         w.beginEntity(this);
         w.writeAttributeInstance(Axis1);
         w.writeAttributeInstance(Axis2);
         w.writeAttributeInstance(LocalOrigin);
         w.writeAttributeValue(Scale);
         w.endEntity();
      }

   };

} // namespace ifc2x3

