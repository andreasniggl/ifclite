#ifndef IFC2X3_IFCLIGHTDISTRIBUTIONDATA_H_INCLUDED
#define IFC2X3_IFCLIGHTDISTRIBUTIONDATA_H_INCLUDED

// Automatically generated by sof_sdai_toolkit from ifc2x3 express file - do not modify

#include "IfcTypeDefinitions.h"
#include "Entity.h"

namespace ifc2x3
{
   class IfcLightDistributionData : public ifc::Entity
   {
   public:
      virtual ~IfcLightDistributionData(){}

      IfcLightDistributionData() = default;

      IfcLightDistributionData(const IfcPlaneAngleMeasure& _MainPlaneAngle, const std::vector<IfcPlaneAngleMeasure>& _SecondaryPlaneAngle, const std::vector<IfcLuminousIntensityDistributionMeasure>& _LuminousIntensity)
         : ifc::Entity(), MainPlaneAngle(_MainPlaneAngle), SecondaryPlaneAngle(_SecondaryPlaneAngle), LuminousIntensity(_LuminousIntensity) {}

      virtual std::string name() const { return "IfcLightDistributionData"; }

      boost::optional<IfcPlaneAngleMeasure> MainPlaneAngle; // required parameter
      std::vector<IfcPlaneAngleMeasure> SecondaryPlaneAngle; // required parameter
      std::vector<IfcLuminousIntensityDistributionMeasure> LuminousIntensity; // required parameter

   protected:
      virtual void serialize(ifc::StepWriter& w) const
      {
         w.beginEntity(this);
         w.writeAttributeValueScalar(MainPlaneAngle);
         w.writeAttributeValueList(SecondaryPlaneAngle);
         w.writeAttributeValueList(LuminousIntensity);
         w.endEntity();
      }

   };

} // namespace ifc2x3

#endif
