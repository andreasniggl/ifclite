// Automatically generated by ifclite express parser from ifc2x3 express file - do not modify

#pragma once

#include "IfcTypeDefinitions.h"
#include "IfcPropertySetDefinition.h"
#include "IfcShapeAspect.h"

namespace ifc2x3
{
   class IfcDoorLiningProperties : public IfcPropertySetDefinition
   {
   public:
      virtual ~IfcDoorLiningProperties(){}

      explicit IfcDoorLiningProperties() = default;

      explicit IfcDoorLiningProperties(const IfcGloballyUniqueId& _GlobalId, IfcOwnerHistory* _OwnerHistory)
         : IfcPropertySetDefinition(_GlobalId, _OwnerHistory) {}

      virtual std::string className() const { return "IfcDoorLiningProperties"; }

      boost::optional<IfcPositiveLengthMeasure> LiningDepth; // optional parameter
      boost::optional<IfcPositiveLengthMeasure> LiningThickness; // optional parameter
      boost::optional<IfcPositiveLengthMeasure> ThresholdDepth; // optional parameter
      boost::optional<IfcPositiveLengthMeasure> ThresholdThickness; // optional parameter
      boost::optional<IfcPositiveLengthMeasure> TransomThickness; // optional parameter
      boost::optional<IfcLengthMeasure> TransomOffset; // optional parameter
      boost::optional<IfcLengthMeasure> LiningOffset; // optional parameter
      boost::optional<IfcLengthMeasure> ThresholdOffset; // optional parameter
      boost::optional<IfcPositiveLengthMeasure> CasingThickness; // optional parameter
      boost::optional<IfcPositiveLengthMeasure> CasingDepth; // optional parameter
      IfcShapeAspect* ShapeAspectStyle; // optional parameter

   protected:
      virtual void serialize(ifc::StepWriter& w) const
      {
         w.beginEntity(this);
         w.writeAttributeValue(GlobalId);
         w.writeAttributeInstance(OwnerHistory);
         w.writeAttributeValue(Name);
         w.writeAttributeValue(Description);
         w.writeAttributeValue(LiningDepth);
         w.writeAttributeValue(LiningThickness);
         w.writeAttributeValue(ThresholdDepth);
         w.writeAttributeValue(ThresholdThickness);
         w.writeAttributeValue(TransomThickness);
         w.writeAttributeValue(TransomOffset);
         w.writeAttributeValue(LiningOffset);
         w.writeAttributeValue(ThresholdOffset);
         w.writeAttributeValue(CasingThickness);
         w.writeAttributeValue(CasingDepth);
         w.writeAttributeInstance(ShapeAspectStyle);
         w.endEntity();
      }

   };

} // namespace ifc2x3

