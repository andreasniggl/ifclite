#ifndef IFC2X3_IFCOBJECTIVE_H_INCLUDED
#define IFC2X3_IFCOBJECTIVE_H_INCLUDED

// Automatically generated by sof_sdai_toolkit from ifc2x3 express file - do not modify

#include "IfcTypeDefinitions.h"
#include "IfcConstraint.h"
#include "IfcMetric.h"
#include "IfcMetric.h"

namespace ifc2x3
{
   class IfcObjective : public IfcConstraint
   {
   public:
      virtual ~IfcObjective(){}

      IfcObjective() = default;

      IfcObjective(const IfcLabel& _Name, const IfcConstraintEnum& _ConstraintGrade, const IfcObjectiveEnum& _ObjectiveQualifier)
         : IfcConstraint(_Name, _ConstraintGrade), ObjectiveQualifier(_ObjectiveQualifier) {}

      virtual std::string name() const { return "IfcObjective"; }

      IfcMetric* BenchmarkValues; // optional parameter
      IfcMetric* ResultValues; // optional parameter
      boost::optional<IfcObjectiveEnum> ObjectiveQualifier; // required parameter
      boost::optional<IfcLabel> UserDefinedQualifier; // optional parameter

   protected:
      virtual void serialize(ifc::StepWriter& w) const
      {
         w.beginEntity(this);
         w.writeAttributeValueScalar(Name);
         w.writeAttributeValueScalar(Description);
         w.writeAttributeValueEnumeration(IfcConstraintEnumStringMap, ConstraintGrade);
         w.writeAttributeValueScalar(ConstraintSource);
         w.writeAttributeSelect<IfcActorSelectWriterVisitor>(CreatingActor);
         w.writeAttributeSelect<IfcDateTimeSelectWriterVisitor>(CreationTime);
         w.writeAttributeValueScalar(UserDefinedGrade);
         w.writeAttributeInstance(BenchmarkValues);
         w.writeAttributeInstance(ResultValues);
         w.writeAttributeValueEnumeration(IfcObjectiveEnumStringMap, ObjectiveQualifier);
         w.writeAttributeValueScalar(UserDefinedQualifier);
         w.endEntity();
      }

   };

} // namespace ifc2x3

#endif
