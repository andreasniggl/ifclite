#ifndef IFC2X3_IFCSTRUCTURALSURFACEMEMBERVARYING_H_INCLUDED
#define IFC2X3_IFCSTRUCTURALSURFACEMEMBERVARYING_H_INCLUDED

// Automatically generated by sof_sdai_toolkit from ifc2x3 express file - do not modify

#include "IfcTypeDefinitions.h"
#include "IfcStructuralSurfaceMember.h"
#include "IfcShapeAspect.h"

namespace ifc2x3
{
   class IfcStructuralSurfaceMemberVarying : public IfcStructuralSurfaceMember
   {
   public:
      virtual ~IfcStructuralSurfaceMemberVarying(){}

      IfcStructuralSurfaceMemberVarying() = default;

      IfcStructuralSurfaceMemberVarying(const IfcGloballyUniqueId& _GlobalId, IfcOwnerHistory* _OwnerHistory, const IfcStructuralSurfaceTypeEnum& _PredefinedType, const std::vector<IfcPositiveLengthMeasure>& _SubsequentThickness, IfcShapeAspect* _VaryingThicknessLocation)
         : IfcStructuralSurfaceMember(_GlobalId, _OwnerHistory, _PredefinedType), SubsequentThickness(_SubsequentThickness), VaryingThicknessLocation(_VaryingThicknessLocation) {}

      virtual std::string name() const { return "IfcStructuralSurfaceMemberVarying"; }

      std::vector<IfcPositiveLengthMeasure> SubsequentThickness; // required parameter
      IfcShapeAspect* VaryingThicknessLocation; // required parameter

   protected:
      virtual void serialize(ifc::StepWriter& w) const
      {
         w.beginEntity(this);
         w.writeAttributeValueScalar(GlobalId);
         w.writeAttributeInstance(OwnerHistory);
         w.writeAttributeValueScalar(Name);
         w.writeAttributeValueScalar(Description);
         w.writeAttributeValueScalar(ObjectType);
         w.writeAttributeInstance(ObjectPlacement);
         w.writeAttributeInstance(Representation);
         w.writeAttributeValueEnumeration(IfcStructuralSurfaceTypeEnumStringMap, PredefinedType);
         w.writeAttributeValueScalar(Thickness);
         w.writeAttributeValueList(SubsequentThickness);
         w.writeAttributeInstance(VaryingThicknessLocation);
         w.endEntity();
      }

   };

} // namespace ifc2x3

#endif
