#ifndef IFC2X3_IFCSTRUCTURALLINEARACTIONVARYING_H_INCLUDED
#define IFC2X3_IFCSTRUCTURALLINEARACTIONVARYING_H_INCLUDED

// Automatically generated by sof_sdai_toolkit from ifc2x3 express file - do not modify

#include "IfcTypeDefinitions.h"
#include "IfcStructuralLinearAction.h"
#include "IfcShapeAspect.h"
#include "IfcStructuralLoad.h"

namespace ifc2x3
{
   class IfcStructuralLinearActionVarying : public IfcStructuralLinearAction
   {
   public:
      virtual ~IfcStructuralLinearActionVarying(){}

      IfcStructuralLinearActionVarying() = default;

      IfcStructuralLinearActionVarying(const IfcGloballyUniqueId& _GlobalId, IfcOwnerHistory* _OwnerHistory, IfcStructuralLoad* _AppliedLoad, const IfcGlobalOrLocalEnum& _GlobalOrLocal, const bool& _DestabilizingLoad, const IfcProjectedOrTrueLengthEnum& _ProjectedOrTrue, IfcShapeAspect* _VaryingAppliedLoadLocation, const std::vector<IfcStructuralLoad*>& _SubsequentAppliedLoads)
         : IfcStructuralLinearAction(_GlobalId, _OwnerHistory, _AppliedLoad, _GlobalOrLocal, _DestabilizingLoad, _ProjectedOrTrue), VaryingAppliedLoadLocation(_VaryingAppliedLoadLocation), SubsequentAppliedLoads(_SubsequentAppliedLoads) {}

      virtual std::string name() const { return "IfcStructuralLinearActionVarying"; }

      IfcShapeAspect* VaryingAppliedLoadLocation; // required parameter
      std::vector<IfcStructuralLoad*> SubsequentAppliedLoads; // required parameter

   protected:
      virtual void serialize(ifc::StepWriter& w) const
      {
         w.beginEntity(this);
         w.writeAttributeValueScalar(GlobalId);
         w.writeAttributeInstance(OwnerHistory);
         w.writeAttributeValueScalar(Name);
         w.writeAttributeValueScalar(Description);
         w.writeAttributeValueScalar(ObjectType);
         w.writeAttributeInstance(ObjectPlacement);
         w.writeAttributeInstance(Representation);
         w.writeAttributeInstance(AppliedLoad);
         w.writeAttributeValueEnumeration(IfcGlobalOrLocalEnumStringMap, GlobalOrLocal);
         w.writeAttributeValueScalar(DestabilizingLoad);
         w.writeAttributeInstance(CausedBy);
         w.writeAttributeValueEnumeration(IfcProjectedOrTrueLengthEnumStringMap, ProjectedOrTrue);
         w.writeAttributeInstance(VaryingAppliedLoadLocation);
         w.writeAttributeInstanceList(SubsequentAppliedLoads);
         w.endEntity();
      }

   };

} // namespace ifc2x3

#endif
