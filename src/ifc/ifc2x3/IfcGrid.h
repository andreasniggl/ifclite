#ifndef IFC2X3_IFCGRID_H_INCLUDED
#define IFC2X3_IFCGRID_H_INCLUDED

// Automatically generated by sof_sdai_toolkit from ifc2x3 express file - do not modify

#include "IfcTypeDefinitions.h"
#include "IfcProduct.h"
#include "IfcGridAxis.h"
#include "IfcGridAxis.h"
#include "IfcGridAxis.h"

namespace ifc2x3
{
   class IfcGrid : public IfcProduct
   {
   public:
      virtual ~IfcGrid(){}

      IfcGrid() = default;

      IfcGrid(const IfcGloballyUniqueId& _GlobalId, IfcOwnerHistory* _OwnerHistory, const std::vector<IfcGridAxis*>& _UAxes, const std::vector<IfcGridAxis*>& _VAxes)
         : IfcProduct(_GlobalId, _OwnerHistory), UAxes(_UAxes), VAxes(_VAxes) {}

      virtual std::string name() const { return "IfcGrid"; }

      std::vector<IfcGridAxis*> UAxes; // required parameter
      std::vector<IfcGridAxis*> VAxes; // required parameter
      std::vector<IfcGridAxis*> WAxes; // optional parameter

   protected:
      virtual void serialize(ifc::StepWriter& w) const
      {
         w.beginEntity(this);
         w.writeAttributeValueScalar(GlobalId);
         w.writeAttributeInstance(OwnerHistory);
         w.writeAttributeValueScalar(Name);
         w.writeAttributeValueScalar(Description);
         w.writeAttributeValueScalar(ObjectType);
         w.writeAttributeInstance(ObjectPlacement);
         w.writeAttributeInstance(Representation);
         w.writeAttributeInstanceList(UAxes);
         w.writeAttributeInstanceList(VAxes);
         w.writeAttributeInstanceList(WAxes);
         w.endEntity();
      }

   };

} // namespace ifc2x3

#endif
