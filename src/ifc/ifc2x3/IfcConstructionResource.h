// Automatically generated by ifclite express parser from ifc2x3 express file - do not modify

#pragma once

#include "IfcTypeDefinitions.h"
#include "IfcResource.h"
#include "IfcMeasureWithUnit.h"

namespace ifc2x3
{
   class IfcConstructionResource : public IfcResource
   {
   public:
      virtual ~IfcConstructionResource(){}

      explicit IfcConstructionResource() = default;

      explicit IfcConstructionResource(const IfcGloballyUniqueId& _GlobalId, IfcOwnerHistory* _OwnerHistory)
         : IfcResource(_GlobalId, _OwnerHistory) {}

      virtual std::string className() const { return "IfcConstructionResource"; }

      boost::optional<IfcIdentifier> ResourceIdentifier; // optional parameter
      boost::optional<IfcLabel> ResourceGroup; // optional parameter
      boost::optional<IfcResourceConsumptionEnum> ResourceConsumption; // optional parameter
      IfcMeasureWithUnit* BaseQuantity; // optional parameter

   protected:
      virtual void serialize(ifc::StepWriter& w) const
      {
         w.beginEntity(this);
         w.writeAttributeValue(GlobalId);
         w.writeAttributeInstance(OwnerHistory);
         w.writeAttributeValue(Name);
         w.writeAttributeValue(Description);
         w.writeAttributeValue(ObjectType);
         w.writeAttributeValue(ResourceIdentifier);
         w.writeAttributeValue(ResourceGroup);
         w.writeAttributeValue(IfcResourceConsumptionEnumStringMap, ResourceConsumption);
         w.writeAttributeInstance(BaseQuantity);
         w.endEntity();
      }

   };

} // namespace ifc2x3

