// Automatically generated by ifclite express parser from ifc2x3 express file - do not modify

#pragma once

#include "IfcTypeDefinitions.h"
#include "IfcRectangleProfileDef.h"

namespace ifc2x3
{
   class IfcRoundedRectangleProfileDef : public IfcRectangleProfileDef
   {
   public:
      virtual ~IfcRoundedRectangleProfileDef(){}

      explicit IfcRoundedRectangleProfileDef() = default;

      explicit IfcRoundedRectangleProfileDef(const IfcProfileTypeEnum& _ProfileType, IfcAxis2Placement2D* _Position, const IfcPositiveLengthMeasure& _XDim, const IfcPositiveLengthMeasure& _YDim, const IfcPositiveLengthMeasure& _RoundingRadius)
         : IfcRectangleProfileDef(_ProfileType, _Position, _XDim, _YDim), RoundingRadius(_RoundingRadius) {}

      virtual std::string className() const { return "IfcRoundedRectangleProfileDef"; }

      boost::optional<IfcPositiveLengthMeasure> RoundingRadius; // required parameter

   protected:
      virtual void serialize(ifc::StepWriter& w) const
      {
         w.beginEntity(this);
         w.writeAttributeValue(IfcProfileTypeEnumStringMap, ProfileType);
         w.writeAttributeValue(ProfileName);
         w.writeAttributeInstance(Position);
         w.writeAttributeValue(XDim);
         w.writeAttributeValue(YDim);
         w.writeAttributeValue(RoundingRadius);
         w.endEntity();
      }

   };

} // namespace ifc2x3

