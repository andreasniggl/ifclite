// Automatically generated by ifclite express parser from ifc2x3 express file - do not modify

#pragma once

#include "IfcTypeDefinitions.h"
#include "IfcMaterialProperties.h"

namespace ifc2x3
{
   class IfcWaterProperties : public IfcMaterialProperties
   {
   public:
      virtual ~IfcWaterProperties(){}

      explicit IfcWaterProperties() = default;

      explicit IfcWaterProperties(IfcMaterial* _Material)
         : IfcMaterialProperties(_Material) {}

      virtual std::string className() const { return "IfcWaterProperties"; }

      boost::optional<bool> IsPotable; // optional parameter
      boost::optional<IfcIonConcentrationMeasure> Hardness; // optional parameter
      boost::optional<IfcIonConcentrationMeasure> AlkalinityConcentration; // optional parameter
      boost::optional<IfcIonConcentrationMeasure> AcidityConcentration; // optional parameter
      boost::optional<IfcNormalisedRatioMeasure> ImpuritiesContent; // optional parameter
      boost::optional<IfcPHMeasure> PHLevel; // optional parameter
      boost::optional<IfcNormalisedRatioMeasure> DissolvedSolidsContent; // optional parameter

   protected:
      virtual void serialize(ifc::StepWriter& w) const
      {
         w.beginEntity(this);
         w.writeAttributeInstance(Material);
         w.writeAttributeValue(IsPotable);
         w.writeAttributeValue(Hardness);
         w.writeAttributeValue(AlkalinityConcentration);
         w.writeAttributeValue(AcidityConcentration);
         w.writeAttributeValue(ImpuritiesContent);
         w.writeAttributeValue(PHLevel);
         w.writeAttributeValue(DissolvedSolidsContent);
         w.endEntity();
      }

   };

} // namespace ifc2x3

