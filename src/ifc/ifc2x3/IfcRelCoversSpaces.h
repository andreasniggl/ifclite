// Automatically generated by ifclite express parser from ifc2x3 express file - do not modify

#pragma once

#include "IfcTypeDefinitions.h"
#include "IfcRelConnects.h"
#include "IfcSpace.h"
#include "IfcCovering.h"

namespace ifc2x3
{
   class IfcRelCoversSpaces : public IfcRelConnects
   {
   public:
      virtual ~IfcRelCoversSpaces(){}

      explicit IfcRelCoversSpaces() = default;

      explicit IfcRelCoversSpaces(const IfcGloballyUniqueId& _GlobalId, IfcOwnerHistory* _OwnerHistory, IfcSpace* _RelatedSpace, const std::vector<IfcCovering*>& _RelatedCoverings)
         : IfcRelConnects(_GlobalId, _OwnerHistory), RelatedSpace(_RelatedSpace), RelatedCoverings(_RelatedCoverings) {}

      virtual std::string className() const { return "IfcRelCoversSpaces"; }

      IfcSpace* RelatedSpace; // required parameter
      std::vector<IfcCovering*> RelatedCoverings; // required parameter

   protected:
      virtual void serialize(ifc::StepWriter& w) const
      {
         w.beginEntity(this);
         w.writeAttributeValue(GlobalId);
         w.writeAttributeInstance(OwnerHistory);
         w.writeAttributeValue(Name);
         w.writeAttributeValue(Description);
         w.writeAttributeInstance(RelatedSpace);
         w.writeAttributeInstance(RelatedCoverings);
         w.endEntity();
      }

   };

} // namespace ifc2x3

