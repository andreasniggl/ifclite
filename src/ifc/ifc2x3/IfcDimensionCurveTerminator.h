// Automatically generated by ifclite express parser from ifc2x3 express file - do not modify

#pragma once

#include "IfcTypeDefinitions.h"
#include "IfcTerminatorSymbol.h"

namespace ifc2x3
{
   class IfcDimensionCurveTerminator : public IfcTerminatorSymbol
   {
   public:
      virtual ~IfcDimensionCurveTerminator(){}

      explicit IfcDimensionCurveTerminator() = default;

      explicit IfcDimensionCurveTerminator(const std::vector<IfcPresentationStyleAssignment*>& _Styles, IfcAnnotationCurveOccurrence* _AnnotatedCurve, const IfcDimensionExtentUsage& _Role)
         : IfcTerminatorSymbol(_Styles, _AnnotatedCurve), Role(_Role) {}

      virtual std::string className() const { return "IfcDimensionCurveTerminator"; }

      boost::optional<IfcDimensionExtentUsage> Role; // required parameter

   protected:
      virtual void serialize(ifc::StepWriter& w) const
      {
         w.beginEntity(this);
         w.writeAttributeInstance(Item);
         w.writeAttributeInstance(Styles);
         w.writeAttributeValue(Name);
         w.writeAttributeInstance(AnnotatedCurve);
         w.writeAttributeValue(IfcDimensionExtentUsageStringMap, Role);
         w.endEntity();
      }

   };

} // namespace ifc2x3

