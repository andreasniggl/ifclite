// Automatically generated by ifclite express parser from ifc2x3 express file - do not modify

#pragma once

#include "IfcTypeDefinitions.h"
#include "IfcBSplineCurve.h"

namespace ifc2x3
{
   class IfcBezierCurve : public IfcBSplineCurve
   {
   public:
      virtual ~IfcBezierCurve(){}

      explicit IfcBezierCurve() = default;

      explicit IfcBezierCurve(const int& _Degree, const std::vector<IfcCartesianPoint*>& _ControlPointsList, const IfcBSplineCurveForm& _CurveForm, const bool& _ClosedCurve, const bool& _SelfIntersect)
         : IfcBSplineCurve(_Degree, _ControlPointsList, _CurveForm, _ClosedCurve, _SelfIntersect) {}

      virtual std::string className() const { return "IfcBezierCurve"; }


   protected:
      virtual void serialize(ifc::StepWriter& w) const
      {
         w.beginEntity(this);
         w.writeAttributeValue(Degree);
         w.writeAttributeInstance(ControlPointsList);
         w.writeAttributeValue(IfcBSplineCurveFormStringMap, CurveForm);
         w.writeAttributeValue(ClosedCurve);
         w.writeAttributeValue(SelfIntersect);
         w.endEntity();
      }

   };

} // namespace ifc2x3

