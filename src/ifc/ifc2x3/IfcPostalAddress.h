// Automatically generated by ifclite express parser from ifc2x3 express file - do not modify

#pragma once

#include "IfcTypeDefinitions.h"
#include "IfcAddress.h"

namespace ifc2x3
{
   class IfcPostalAddress : public IfcAddress
   {
   public:
      virtual ~IfcPostalAddress(){}

      explicit IfcPostalAddress() = default;

      virtual std::string className() const { return "IfcPostalAddress"; }

      boost::optional<IfcLabel> InternalLocation; // optional parameter
      std::vector<IfcLabel> AddressLines; // optional parameter
      boost::optional<IfcLabel> PostalBox; // optional parameter
      boost::optional<IfcLabel> Town; // optional parameter
      boost::optional<IfcLabel> Region; // optional parameter
      boost::optional<IfcLabel> PostalCode; // optional parameter
      boost::optional<IfcLabel> Country; // optional parameter

   protected:
      virtual void serialize(ifc::StepWriter& w) const
      {
         w.beginEntity(this);
         w.writeAttributeValue(IfcAddressTypeEnumStringMap, Purpose);
         w.writeAttributeValue(Description);
         w.writeAttributeValue(UserDefinedPurpose);
         w.writeAttributeValue(InternalLocation);
         w.writeAttributeValue(AddressLines);
         w.writeAttributeValue(PostalBox);
         w.writeAttributeValue(Town);
         w.writeAttributeValue(Region);
         w.writeAttributeValue(PostalCode);
         w.writeAttributeValue(Country);
         w.endEntity();
      }

   };

} // namespace ifc2x3

