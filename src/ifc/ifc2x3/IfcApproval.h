#ifndef IFC2X3_IFCAPPROVAL_H_INCLUDED
#define IFC2X3_IFCAPPROVAL_H_INCLUDED

// Automatically generated by sof_sdai_toolkit from ifc2x3 express file - do not modify

#include "IfcTypeDefinitions.h"
#include "Entity.h"
#include "IfcDateTimeSelect.h"

namespace ifc2x3
{
   class IfcApproval : public ifc::Entity
   {
   public:
      virtual ~IfcApproval(){}

      IfcApproval() = default;

      IfcApproval(const IfcDateTimeSelect& _ApprovalDateTime, const IfcLabel& _Name, const IfcIdentifier& _Identifier)
         : ifc::Entity(), ApprovalDateTime(_ApprovalDateTime), Name(_Name), Identifier(_Identifier) {}

      virtual std::string name() const { return "IfcApproval"; }

      boost::optional<IfcText> Description; // optional parameter
      boost::optional<IfcDateTimeSelect> ApprovalDateTime; // required parameter
      boost::optional<IfcLabel> ApprovalStatus; // optional parameter
      boost::optional<IfcLabel> ApprovalLevel; // optional parameter
      boost::optional<IfcText> ApprovalQualifier; // optional parameter
      boost::optional<IfcLabel> Name; // required parameter
      boost::optional<IfcIdentifier> Identifier; // required parameter

   protected:
      virtual void serialize(ifc::StepWriter& w) const
      {
         w.beginEntity(this);
         w.writeAttributeValueScalar(Description);
         w.writeAttributeSelect<IfcDateTimeSelectWriterVisitor>(ApprovalDateTime);
         w.writeAttributeValueScalar(ApprovalStatus);
         w.writeAttributeValueScalar(ApprovalLevel);
         w.writeAttributeValueScalar(ApprovalQualifier);
         w.writeAttributeValueScalar(Name);
         w.writeAttributeValueScalar(Identifier);
         w.endEntity();
      }

   };

} // namespace ifc2x3

#endif
