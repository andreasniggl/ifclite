// Automatically generated by ifclite express parser from ifc4 express file - do not modify

#pragma once

#include "IfcTypeDefinitions.h"
#include "IfcRelConnects.h"
#include "IfcProcess.h"
#include "IfcProcess.h"
#include "IfcLagTime.h"

namespace ifc4
{
   class IfcRelSequence : public IfcRelConnects
   {
   public:
      virtual ~IfcRelSequence(){}

      explicit IfcRelSequence() = default;

      explicit IfcRelSequence(const IfcGloballyUniqueId& _GlobalId, IfcProcess* _RelatingProcess, IfcProcess* _RelatedProcess)
         : IfcRelConnects(_GlobalId), RelatingProcess(_RelatingProcess), RelatedProcess(_RelatedProcess) {}

      virtual std::string className() const { return "IfcRelSequence"; }

      IfcProcess* RelatingProcess; // required parameter
      IfcProcess* RelatedProcess; // required parameter
      IfcLagTime* TimeLag; // optional parameter
      boost::optional<IfcSequenceEnum> SequenceType; // optional parameter
      boost::optional<IfcLabel> UserDefinedSequenceType; // optional parameter

   protected:
      virtual void serialize(ifc::StepWriter& w) const
      {
         w.beginEntity(this);
         w.writeAttributeValue(GlobalId);
         w.writeAttributeInstance(OwnerHistory);
         w.writeAttributeValue(Name);
         w.writeAttributeValue(Description);
         w.writeAttributeInstance(RelatingProcess);
         w.writeAttributeInstance(RelatedProcess);
         w.writeAttributeInstance(TimeLag);
         w.writeAttributeValue(IfcSequenceEnumStringMap, SequenceType);
         w.writeAttributeValue(UserDefinedSequenceType);
         w.endEntity();
      }

   };

} // namespace ifc4

