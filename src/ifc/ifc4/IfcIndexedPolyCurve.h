// Automatically generated by ifclite express parser from ifc4 express file - do not modify

#pragma once

#include "IfcTypeDefinitions.h"
#include "IfcBoundedCurve.h"
#include "IfcCartesianPointList.h"
#include "IfcSegmentIndexSelect.h"

namespace ifc4
{
   class IfcIndexedPolyCurve : public IfcBoundedCurve
   {
   public:
      virtual ~IfcIndexedPolyCurve(){}

      explicit IfcIndexedPolyCurve() = default;

      explicit IfcIndexedPolyCurve(IfcCartesianPointList* _Points)
         : IfcBoundedCurve(), Points(_Points) {}

      virtual std::string className() const { return "IfcIndexedPolyCurve"; }

      IfcCartesianPointList* Points; // required parameter
      std::vector< boost::optional<IfcSegmentIndexSelect> > Segments; // optional parameter
      boost::optional<IfcBoolean> SelfIntersect; // optional parameter

   protected:
      virtual void serialize(ifc::StepWriter& w) const
      {
         w.beginEntity(this);
         w.writeAttributeInstance(Points);
         w.writeAttributeSelect<IfcSegmentIndexSelectWriterVisitor>(Segments);
         w.writeAttributeValue(SelfIntersect);
         w.endEntity();
      }

   };

} // namespace ifc4

