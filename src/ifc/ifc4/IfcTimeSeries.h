// Automatically generated by ifclite express parser from ifc4 express file - do not modify

#pragma once

#include "IfcTypeDefinitions.h"
#include "Entity.h"
#include "IfcUnit.h"

namespace ifc4
{
   class IfcTimeSeries : public ifc::Entity
   {
   public:
      virtual ~IfcTimeSeries(){}

      explicit IfcTimeSeries() = default;

      explicit IfcTimeSeries(const IfcLabel& _Name, const IfcDateTime& _StartTime, const IfcDateTime& _EndTime, const IfcTimeSeriesDataTypeEnum& _TimeSeriesDataType, const IfcDataOriginEnum& _DataOrigin)
         : ifc::Entity(), Name(_Name), StartTime(_StartTime), EndTime(_EndTime), TimeSeriesDataType(_TimeSeriesDataType), DataOrigin(_DataOrigin) {}

      virtual std::string className() const { return "IfcTimeSeries"; }

      boost::optional<IfcLabel> Name; // required parameter
      boost::optional<IfcText> Description; // optional parameter
      boost::optional<IfcDateTime> StartTime; // required parameter
      boost::optional<IfcDateTime> EndTime; // required parameter
      boost::optional<IfcTimeSeriesDataTypeEnum> TimeSeriesDataType; // required parameter
      boost::optional<IfcDataOriginEnum> DataOrigin; // required parameter
      boost::optional<IfcLabel> UserDefinedDataOrigin; // optional parameter
      boost::optional<IfcUnit> Unit; // optional parameter

   protected:
      virtual void serialize(ifc::StepWriter& w) const
      {
         w.beginEntity(this);
         w.writeAttributeValue(Name);
         w.writeAttributeValue(Description);
         w.writeAttributeValue(StartTime);
         w.writeAttributeValue(EndTime);
         w.writeAttributeValue(IfcTimeSeriesDataTypeEnumStringMap, TimeSeriesDataType);
         w.writeAttributeValue(IfcDataOriginEnumStringMap, DataOrigin);
         w.writeAttributeValue(UserDefinedDataOrigin);
         w.writeAttributeSelect<IfcUnitWriterVisitor>(Unit);
         w.endEntity();
      }

   };

} // namespace ifc4

