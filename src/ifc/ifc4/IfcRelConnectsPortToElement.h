// Automatically generated by ifclite express parser from ifc4 express file - do not modify

#pragma once

#include "IfcTypeDefinitions.h"
#include "IfcRelConnects.h"
#include "IfcPort.h"
#include "IfcDistributionElement.h"

namespace ifc4
{
   class IfcRelConnectsPortToElement : public IfcRelConnects
   {
   public:
      virtual ~IfcRelConnectsPortToElement(){}

      explicit IfcRelConnectsPortToElement() = default;

      explicit IfcRelConnectsPortToElement(const IfcGloballyUniqueId& _GlobalId, IfcPort* _RelatingPort, IfcDistributionElement* _RelatedElement)
         : IfcRelConnects(_GlobalId), RelatingPort(_RelatingPort), RelatedElement(_RelatedElement) {}

      virtual std::string className() const { return "IfcRelConnectsPortToElement"; }

      IfcPort* RelatingPort; // required parameter
      IfcDistributionElement* RelatedElement; // required parameter

   protected:
      virtual void serialize(ifc::StepWriter& w) const
      {
         w.beginEntity(this);
         w.writeAttributeValue(GlobalId);
         w.writeAttributeInstance(OwnerHistory);
         w.writeAttributeValue(Name);
         w.writeAttributeValue(Description);
         w.writeAttributeInstance(RelatingPort);
         w.writeAttributeInstance(RelatedElement);
         w.endEntity();
      }

   };

} // namespace ifc4

