// Automatically generated by ifclite express parser from ifc4 express file - do not modify

#pragma once

#include "IfcTypeDefinitions.h"
#include "IfcCsgPrimitive3D.h"

namespace ifc4
{
   class IfcBlock : public IfcCsgPrimitive3D
   {
   public:
      virtual ~IfcBlock(){}

      explicit IfcBlock() = default;

      explicit IfcBlock(IfcAxis2Placement3D* _Position, const IfcPositiveLengthMeasure& _XLength, const IfcPositiveLengthMeasure& _YLength, const IfcPositiveLengthMeasure& _ZLength)
         : IfcCsgPrimitive3D(_Position), XLength(_XLength), YLength(_YLength), ZLength(_ZLength) {}

      virtual std::string className() const { return "IfcBlock"; }

      boost::optional<IfcPositiveLengthMeasure> XLength; // required parameter
      boost::optional<IfcPositiveLengthMeasure> YLength; // required parameter
      boost::optional<IfcPositiveLengthMeasure> ZLength; // required parameter

   protected:
      virtual void serialize(ifc::StepWriter& w) const
      {
         w.beginEntity(this);
         w.writeAttributeInstance(Position);
         w.writeAttributeValue(XLength);
         w.writeAttributeValue(YLength);
         w.writeAttributeValue(ZLength);
         w.endEntity();
      }

   };

} // namespace ifc4

