// Automatically generated by ifclite express parser from ifc4 express file - do not modify

#pragma once

#include "IfcTypeDefinitions.h"
#include "IfcPreDefinedPropertySet.h"
#include "IfcShapeAspect.h"

namespace ifc4
{
   class IfcWindowPanelProperties : public IfcPreDefinedPropertySet
   {
   public:
      virtual ~IfcWindowPanelProperties(){}

      explicit IfcWindowPanelProperties() = default;

      explicit IfcWindowPanelProperties(const IfcGloballyUniqueId& _GlobalId, const IfcWindowPanelOperationEnum& _OperationType, const IfcWindowPanelPositionEnum& _PanelPosition)
         : IfcPreDefinedPropertySet(_GlobalId), OperationType(_OperationType), PanelPosition(_PanelPosition) {}

      virtual std::string className() const { return "IfcWindowPanelProperties"; }

      boost::optional<IfcWindowPanelOperationEnum> OperationType; // required parameter
      boost::optional<IfcWindowPanelPositionEnum> PanelPosition; // required parameter
      boost::optional<IfcPositiveLengthMeasure> FrameDepth; // optional parameter
      boost::optional<IfcPositiveLengthMeasure> FrameThickness; // optional parameter
      IfcShapeAspect* ShapeAspectStyle; // optional parameter

   protected:
      virtual void serialize(ifc::StepWriter& w) const
      {
         w.beginEntity(this);
         w.writeAttributeValue(GlobalId);
         w.writeAttributeInstance(OwnerHistory);
         w.writeAttributeValue(Name);
         w.writeAttributeValue(Description);
         w.writeAttributeValue(IfcWindowPanelOperationEnumStringMap, OperationType);
         w.writeAttributeValue(IfcWindowPanelPositionEnumStringMap, PanelPosition);
         w.writeAttributeValue(FrameDepth);
         w.writeAttributeValue(FrameThickness);
         w.writeAttributeInstance(ShapeAspectStyle);
         w.endEntity();
      }

   };

} // namespace ifc4

