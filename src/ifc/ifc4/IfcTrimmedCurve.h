// Automatically generated by ifclite express parser from ifc4 express file - do not modify

#pragma once

#include "IfcTypeDefinitions.h"
#include "IfcBoundedCurve.h"
#include "IfcCurve.h"
#include "IfcTrimmingSelect.h"
#include "IfcTrimmingSelect.h"

namespace ifc4
{
   class IfcTrimmedCurve : public IfcBoundedCurve
   {
   public:
      virtual ~IfcTrimmedCurve(){}

      explicit IfcTrimmedCurve() = default;

      explicit IfcTrimmedCurve(IfcCurve* _BasisCurve, const std::vector< boost::optional<IfcTrimmingSelect> >& _Trim1, const std::vector< boost::optional<IfcTrimmingSelect> >& _Trim2, const IfcBoolean& _SenseAgreement, const IfcTrimmingPreference& _MasterRepresentation)
         : IfcBoundedCurve(), BasisCurve(_BasisCurve), Trim1(_Trim1), Trim2(_Trim2), SenseAgreement(_SenseAgreement), MasterRepresentation(_MasterRepresentation) {}

      virtual std::string className() const { return "IfcTrimmedCurve"; }

      IfcCurve* BasisCurve; // required parameter
      std::vector< boost::optional<IfcTrimmingSelect> > Trim1; // required parameter
      std::vector< boost::optional<IfcTrimmingSelect> > Trim2; // required parameter
      boost::optional<IfcBoolean> SenseAgreement; // required parameter
      boost::optional<IfcTrimmingPreference> MasterRepresentation; // required parameter

   protected:
      virtual void serialize(ifc::StepWriter& w) const
      {
         w.beginEntity(this);
         w.writeAttributeInstance(BasisCurve);
         w.writeAttributeSelect<IfcTrimmingSelectWriterVisitor>(Trim1);
         w.writeAttributeSelect<IfcTrimmingSelectWriterVisitor>(Trim2);
         w.writeAttributeValue(SenseAgreement);
         w.writeAttributeValue(IfcTrimmingPreferenceStringMap, MasterRepresentation);
         w.endEntity();
      }

   };

} // namespace ifc4

