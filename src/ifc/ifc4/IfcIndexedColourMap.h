// Automatically generated by ifclite express parser from ifc4 express file - do not modify

#pragma once

#include "IfcTypeDefinitions.h"
#include "IfcPresentationItem.h"
#include "IfcTessellatedFaceSet.h"
#include "IfcColourRgbList.h"

namespace ifc4
{
   class IfcIndexedColourMap : public IfcPresentationItem
   {
   public:
      virtual ~IfcIndexedColourMap(){}

      explicit IfcIndexedColourMap() = default;

      explicit IfcIndexedColourMap(IfcTessellatedFaceSet* _MappedTo, IfcColourRgbList* _Colours, const std::vector<IfcPositiveInteger>& _ColourIndex)
         : IfcPresentationItem(), MappedTo(_MappedTo), Colours(_Colours), ColourIndex(_ColourIndex) {}

      virtual std::string className() const { return "IfcIndexedColourMap"; }

      IfcTessellatedFaceSet* MappedTo; // required parameter
      boost::optional<IfcNormalisedRatioMeasure> Opacity; // optional parameter
      IfcColourRgbList* Colours; // required parameter
      std::vector<IfcPositiveInteger> ColourIndex; // required parameter

   protected:
      virtual void serialize(ifc::StepWriter& w) const
      {
         w.beginEntity(this);
         w.writeAttributeInstance(MappedTo);
         w.writeAttributeValue(Opacity);
         w.writeAttributeInstance(Colours);
         w.writeAttributeValue(ColourIndex);
         w.endEntity();
      }

   };

} // namespace ifc4

