// Automatically generated by ifclite express parser from ifc4 express file - do not modify

#pragma once

#include "IfcTypeDefinitions.h"
#include "IfcBoundaryCondition.h"
#include "IfcTranslationalStiffnessSelect.h"
#include "IfcTranslationalStiffnessSelect.h"
#include "IfcTranslationalStiffnessSelect.h"
#include "IfcRotationalStiffnessSelect.h"
#include "IfcRotationalStiffnessSelect.h"
#include "IfcRotationalStiffnessSelect.h"

namespace ifc4
{
   class IfcBoundaryNodeCondition : public IfcBoundaryCondition
   {
   public:
      virtual ~IfcBoundaryNodeCondition(){}

      explicit IfcBoundaryNodeCondition() = default;

      virtual std::string className() const { return "IfcBoundaryNodeCondition"; }

      boost::optional<IfcTranslationalStiffnessSelect> TranslationalStiffnessX; // optional parameter
      boost::optional<IfcTranslationalStiffnessSelect> TranslationalStiffnessY; // optional parameter
      boost::optional<IfcTranslationalStiffnessSelect> TranslationalStiffnessZ; // optional parameter
      boost::optional<IfcRotationalStiffnessSelect> RotationalStiffnessX; // optional parameter
      boost::optional<IfcRotationalStiffnessSelect> RotationalStiffnessY; // optional parameter
      boost::optional<IfcRotationalStiffnessSelect> RotationalStiffnessZ; // optional parameter

   protected:
      virtual void serialize(ifc::StepWriter& w) const
      {
         w.beginEntity(this);
         w.writeAttributeValue(Name);
         w.writeAttributeSelect<IfcTranslationalStiffnessSelectWriterVisitor>(TranslationalStiffnessX);
         w.writeAttributeSelect<IfcTranslationalStiffnessSelectWriterVisitor>(TranslationalStiffnessY);
         w.writeAttributeSelect<IfcTranslationalStiffnessSelectWriterVisitor>(TranslationalStiffnessZ);
         w.writeAttributeSelect<IfcRotationalStiffnessSelectWriterVisitor>(RotationalStiffnessX);
         w.writeAttributeSelect<IfcRotationalStiffnessSelectWriterVisitor>(RotationalStiffnessY);
         w.writeAttributeSelect<IfcRotationalStiffnessSelectWriterVisitor>(RotationalStiffnessZ);
         w.endEntity();
      }

   };

} // namespace ifc4

