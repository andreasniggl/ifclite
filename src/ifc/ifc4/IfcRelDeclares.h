// Automatically generated by ifclite express parser from ifc4 express file - do not modify

#pragma once

#include "IfcTypeDefinitions.h"
#include "IfcRelationship.h"
#include "IfcContext.h"
#include "IfcDefinitionSelect.h"

namespace ifc4
{
   class IfcRelDeclares : public IfcRelationship
   {
   public:
      virtual ~IfcRelDeclares(){}

      explicit IfcRelDeclares() = default;

      explicit IfcRelDeclares(const IfcGloballyUniqueId& _GlobalId, IfcContext* _RelatingContext, const std::vector< boost::optional<IfcDefinitionSelect> >& _RelatedDefinitions)
         : IfcRelationship(_GlobalId), RelatingContext(_RelatingContext), RelatedDefinitions(_RelatedDefinitions) {}

      virtual std::string className() const { return "IfcRelDeclares"; }

      IfcContext* RelatingContext; // required parameter
      std::vector< boost::optional<IfcDefinitionSelect> > RelatedDefinitions; // required parameter

   protected:
      virtual void serialize(ifc::StepWriter& w) const
      {
         w.beginEntity(this);
         w.writeAttributeValue(GlobalId);
         w.writeAttributeInstance(OwnerHistory);
         w.writeAttributeValue(Name);
         w.writeAttributeValue(Description);
         w.writeAttributeInstance(RelatingContext);
         w.writeAttributeSelect<IfcDefinitionSelectWriterVisitor>(RelatedDefinitions);
         w.endEntity();
      }

   };

} // namespace ifc4

