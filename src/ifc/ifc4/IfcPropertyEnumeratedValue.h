// Automatically generated by ifclite express parser from ifc4 express file - do not modify

#pragma once

#include "IfcTypeDefinitions.h"
#include "IfcSimpleProperty.h"
#include "IfcValue.h"
#include "IfcPropertyEnumeration.h"

namespace ifc4
{
   class IfcPropertyEnumeratedValue : public IfcSimpleProperty
   {
   public:
      virtual ~IfcPropertyEnumeratedValue(){}

      explicit IfcPropertyEnumeratedValue() = default;

      explicit IfcPropertyEnumeratedValue(const IfcIdentifier& _Name)
         : IfcSimpleProperty(_Name) {}

      virtual std::string className() const { return "IfcPropertyEnumeratedValue"; }

      std::vector< boost::optional<IfcValue> > EnumerationValues; // optional parameter
      IfcPropertyEnumeration* EnumerationReference; // optional parameter

   protected:
      virtual void serialize(ifc::StepWriter& w) const
      {
         w.beginEntity(this);
         w.writeAttributeValue(Name);
         w.writeAttributeValue(Description);
         w.writeAttributeSelect<IfcValueWriterVisitor>(EnumerationValues);
         w.writeAttributeInstance(EnumerationReference);
         w.endEntity();
      }

   };

} // namespace ifc4

