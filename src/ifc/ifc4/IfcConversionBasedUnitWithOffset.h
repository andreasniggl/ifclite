// Automatically generated by ifclite express parser from ifc4 express file - do not modify

#pragma once

#include "IfcTypeDefinitions.h"
#include "IfcConversionBasedUnit.h"

namespace ifc4
{
   class IfcConversionBasedUnitWithOffset : public IfcConversionBasedUnit
   {
   public:
      virtual ~IfcConversionBasedUnitWithOffset(){}

      explicit IfcConversionBasedUnitWithOffset() = default;

      explicit IfcConversionBasedUnitWithOffset(IfcDimensionalExponents* _Dimensions, const IfcUnitEnum& _UnitType, const IfcLabel& _Name, IfcMeasureWithUnit* _ConversionFactor, const IfcReal& _ConversionOffset)
         : IfcConversionBasedUnit(_Dimensions, _UnitType, _Name, _ConversionFactor), ConversionOffset(_ConversionOffset) {}

      virtual std::string className() const { return "IfcConversionBasedUnitWithOffset"; }

      boost::optional<IfcReal> ConversionOffset; // required parameter

   protected:
      virtual void serialize(ifc::StepWriter& w) const
      {
         w.beginEntity(this);
         w.writeAttributeInstance(Dimensions,true);
         w.writeAttributeValue(IfcUnitEnumStringMap, UnitType);
         w.writeAttributeValue(Name);
         w.writeAttributeInstance(ConversionFactor);
         w.writeAttributeValue(ConversionOffset);
         w.endEntity();
      }

   };

} // namespace ifc4

