// Automatically generated by ifclite express parser from ifc4 express file - do not modify

#pragma once

#include "IfcTypeDefinitions.h"
#include "IfcPresentationLayerAssignment.h"
#include "IfcPresentationStyle.h"

namespace ifc4
{
   class IfcPresentationLayerWithStyle : public IfcPresentationLayerAssignment
   {
   public:
      virtual ~IfcPresentationLayerWithStyle(){}

      explicit IfcPresentationLayerWithStyle() = default;

      explicit IfcPresentationLayerWithStyle(const IfcLabel& _Name, const std::vector< boost::optional<IfcLayeredItem> >& _AssignedItems, const IfcLogical& _LayerOn, const IfcLogical& _LayerFrozen, const IfcLogical& _LayerBlocked, const std::vector<IfcPresentationStyle*>& _LayerStyles)
         : IfcPresentationLayerAssignment(_Name, _AssignedItems), LayerOn(_LayerOn), LayerFrozen(_LayerFrozen), LayerBlocked(_LayerBlocked), LayerStyles(_LayerStyles) {}

      virtual std::string className() const { return "IfcPresentationLayerWithStyle"; }

      boost::optional<IfcLogical> LayerOn; // required parameter
      boost::optional<IfcLogical> LayerFrozen; // required parameter
      boost::optional<IfcLogical> LayerBlocked; // required parameter
      std::vector<IfcPresentationStyle*> LayerStyles; // required parameter

   protected:
      virtual void serialize(ifc::StepWriter& w) const
      {
         w.beginEntity(this);
         w.writeAttributeValue(Name);
         w.writeAttributeValue(Description);
         w.writeAttributeSelect<IfcLayeredItemWriterVisitor>(AssignedItems);
         w.writeAttributeValue(Identifier);
         w.writeAttributeValue(LayerOn);
         w.writeAttributeValue(LayerFrozen);
         w.writeAttributeValue(LayerBlocked);
         w.writeAttributeInstance(LayerStyles);
         w.endEntity();
      }

   };

} // namespace ifc4

