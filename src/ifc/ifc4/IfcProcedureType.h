// Automatically generated by ifclite express parser from ifc4 express file - do not modify

#pragma once

#include "IfcTypeDefinitions.h"
#include "IfcTypeProcess.h"

namespace ifc4
{
   class IfcProcedureType : public IfcTypeProcess
   {
   public:
      virtual ~IfcProcedureType(){}

      explicit IfcProcedureType() = default;

      explicit IfcProcedureType(const IfcGloballyUniqueId& _GlobalId, const IfcProcedureTypeEnum& _PredefinedType)
         : IfcTypeProcess(_GlobalId), PredefinedType(_PredefinedType) {}

      virtual std::string className() const { return "IfcProcedureType"; }

      boost::optional<IfcProcedureTypeEnum> PredefinedType; // required parameter

   protected:
      virtual void serialize(ifc::StepWriter& w) const
      {
         w.beginEntity(this);
         w.writeAttributeValue(GlobalId);
         w.writeAttributeInstance(OwnerHistory);
         w.writeAttributeValue(Name);
         w.writeAttributeValue(Description);
         w.writeAttributeValue(ApplicableOccurrence);
         w.writeAttributeInstance(HasPropertySets);
         w.writeAttributeValue(Identification);
         w.writeAttributeValue(LongDescription);
         w.writeAttributeValue(ProcessType);
         w.writeAttributeValue(IfcProcedureTypeEnumStringMap, PredefinedType);
         w.endEntity();
      }

   };

} // namespace ifc4

