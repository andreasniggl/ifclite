// Automatically generated by ifclite express parser from ifc4 express file - do not modify

#pragma once

#include "IfcTypeDefinitions.h"
#include "IfcRelConnectsElements.h"
#include "IfcElement.h"

namespace ifc4
{
   class IfcRelConnectsWithRealizingElements : public IfcRelConnectsElements
   {
   public:
      virtual ~IfcRelConnectsWithRealizingElements(){}

      explicit IfcRelConnectsWithRealizingElements() = default;

      explicit IfcRelConnectsWithRealizingElements(const IfcGloballyUniqueId& _GlobalId, IfcElement* _RelatingElement, IfcElement* _RelatedElement, const std::vector<IfcElement*>& _RealizingElements)
         : IfcRelConnectsElements(_GlobalId, _RelatingElement, _RelatedElement), RealizingElements(_RealizingElements) {}

      virtual std::string className() const { return "IfcRelConnectsWithRealizingElements"; }

      std::vector<IfcElement*> RealizingElements; // required parameter
      boost::optional<IfcLabel> ConnectionType; // optional parameter

   protected:
      virtual void serialize(ifc::StepWriter& w) const
      {
         w.beginEntity(this);
         w.writeAttributeValue(GlobalId);
         w.writeAttributeInstance(OwnerHistory);
         w.writeAttributeValue(Name);
         w.writeAttributeValue(Description);
         w.writeAttributeInstance(ConnectionGeometry);
         w.writeAttributeInstance(RelatingElement);
         w.writeAttributeInstance(RelatedElement);
         w.writeAttributeInstance(RealizingElements);
         w.writeAttributeValue(ConnectionType);
         w.endEntity();
      }

   };

} // namespace ifc4

