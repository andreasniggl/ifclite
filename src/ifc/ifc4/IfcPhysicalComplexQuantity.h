// Automatically generated by ifclite express parser from ifc4 express file - do not modify

#pragma once

#include "IfcTypeDefinitions.h"
#include "IfcPhysicalQuantity.h"
#include "IfcPhysicalQuantity.h"

namespace ifc4
{
   class IfcPhysicalComplexQuantity : public IfcPhysicalQuantity
   {
   public:
      virtual ~IfcPhysicalComplexQuantity(){}

      explicit IfcPhysicalComplexQuantity() = default;

      explicit IfcPhysicalComplexQuantity(const IfcLabel& _Name, const std::vector<IfcPhysicalQuantity*>& _HasQuantities, const IfcLabel& _Discrimination)
         : IfcPhysicalQuantity(_Name), HasQuantities(_HasQuantities), Discrimination(_Discrimination) {}

      virtual std::string className() const { return "IfcPhysicalComplexQuantity"; }

      std::vector<IfcPhysicalQuantity*> HasQuantities; // required parameter
      boost::optional<IfcLabel> Discrimination; // required parameter
      boost::optional<IfcLabel> Quality; // optional parameter
      boost::optional<IfcLabel> Usage; // optional parameter

   protected:
      virtual void serialize(ifc::StepWriter& w) const
      {
         w.beginEntity(this);
         w.writeAttributeValue(Name);
         w.writeAttributeValue(Description);
         w.writeAttributeInstance(HasQuantities);
         w.writeAttributeValue(Discrimination);
         w.writeAttributeValue(Quality);
         w.writeAttributeValue(Usage);
         w.endEntity();
      }

   };

} // namespace ifc4

