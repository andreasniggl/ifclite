// Automatically generated by ifclite express parser from ifc4 express file - do not modify

#pragma once

#include "IfcTypeDefinitions.h"
#include "IfcStructuralLoadStatic.h"

namespace ifc4
{
   class IfcStructuralLoadSingleDisplacement : public IfcStructuralLoadStatic
   {
   public:
      virtual ~IfcStructuralLoadSingleDisplacement(){}

      explicit IfcStructuralLoadSingleDisplacement() = default;

      virtual std::string className() const { return "IfcStructuralLoadSingleDisplacement"; }

      boost::optional<IfcLengthMeasure> DisplacementX; // optional parameter
      boost::optional<IfcLengthMeasure> DisplacementY; // optional parameter
      boost::optional<IfcLengthMeasure> DisplacementZ; // optional parameter
      boost::optional<IfcPlaneAngleMeasure> RotationalDisplacementRX; // optional parameter
      boost::optional<IfcPlaneAngleMeasure> RotationalDisplacementRY; // optional parameter
      boost::optional<IfcPlaneAngleMeasure> RotationalDisplacementRZ; // optional parameter

   protected:
      virtual void serialize(ifc::StepWriter& w) const
      {
         w.beginEntity(this);
         w.writeAttributeValue(Name);
         w.writeAttributeValue(DisplacementX);
         w.writeAttributeValue(DisplacementY);
         w.writeAttributeValue(DisplacementZ);
         w.writeAttributeValue(RotationalDisplacementRX);
         w.writeAttributeValue(RotationalDisplacementRY);
         w.writeAttributeValue(RotationalDisplacementRZ);
         w.endEntity();
      }

   };

} // namespace ifc4

