// Automatically generated by ifclite express parser from ifc4 express file - do not modify

#pragma once

#include "IfcTypeDefinitions.h"
#include "IfcProfileDef.h"
#include "IfcProfileDef.h"

namespace ifc4
{
   class IfcCompositeProfileDef : public IfcProfileDef
   {
   public:
      virtual ~IfcCompositeProfileDef(){}

      explicit IfcCompositeProfileDef() = default;

      explicit IfcCompositeProfileDef(const IfcProfileTypeEnum& _ProfileType, const std::vector<IfcProfileDef*>& _Profiles)
         : IfcProfileDef(_ProfileType), Profiles(_Profiles) {}

      virtual std::string className() const { return "IfcCompositeProfileDef"; }

      std::vector<IfcProfileDef*> Profiles; // required parameter
      boost::optional<IfcLabel> Label; // optional parameter

   protected:
      virtual void serialize(ifc::StepWriter& w) const
      {
         w.beginEntity(this);
         w.writeAttributeValue(IfcProfileTypeEnumStringMap, ProfileType);
         w.writeAttributeValue(ProfileName);
         w.writeAttributeInstance(Profiles);
         w.writeAttributeValue(Label);
         w.endEntity();
      }

   };

} // namespace ifc4

