// Automatically generated by ifclite express parser from ifc4 express file - do not modify

#pragma once

#include "IfcTypeDefinitions.h"
#include "IfcAddress.h"

namespace ifc4
{
   class IfcTelecomAddress : public IfcAddress
   {
   public:
      virtual ~IfcTelecomAddress(){}

      explicit IfcTelecomAddress() = default;

      virtual std::string className() const { return "IfcTelecomAddress"; }

      std::vector<IfcLabel> TelephoneNumbers; // optional parameter
      std::vector<IfcLabel> FacsimileNumbers; // optional parameter
      boost::optional<IfcLabel> PagerNumber; // optional parameter
      std::vector<IfcLabel> ElectronicMailAddresses; // optional parameter
      boost::optional<IfcURIReference> WWWHomePageURL; // optional parameter
      std::vector<IfcURIReference> MessagingIDs; // optional parameter

   protected:
      virtual void serialize(ifc::StepWriter& w) const
      {
         w.beginEntity(this);
         w.writeAttributeValue(IfcAddressTypeEnumStringMap, Purpose);
         w.writeAttributeValue(Description);
         w.writeAttributeValue(UserDefinedPurpose);
         w.writeAttributeValue(TelephoneNumbers);
         w.writeAttributeValue(FacsimileNumbers);
         w.writeAttributeValue(PagerNumber);
         w.writeAttributeValue(ElectronicMailAddresses);
         w.writeAttributeValue(WWWHomePageURL);
         w.writeAttributeValue(MessagingIDs);
         w.endEntity();
      }

   };

} // namespace ifc4

