// Automatically generated by ifclite express parser from ifc4 express file - do not modify

#pragma once

#include "IfcTypeDefinitions.h"
#include "IfcPreDefinedPropertySet.h"
#include "IfcShapeAspect.h"

namespace ifc4
{
   class IfcWindowLiningProperties : public IfcPreDefinedPropertySet
   {
   public:
      virtual ~IfcWindowLiningProperties(){}

      explicit IfcWindowLiningProperties() = default;

      explicit IfcWindowLiningProperties(const IfcGloballyUniqueId& _GlobalId)
         : IfcPreDefinedPropertySet(_GlobalId) {}

      virtual std::string className() const { return "IfcWindowLiningProperties"; }

      boost::optional<IfcPositiveLengthMeasure> LiningDepth; // optional parameter
      boost::optional<IfcNonNegativeLengthMeasure> LiningThickness; // optional parameter
      boost::optional<IfcNonNegativeLengthMeasure> TransomThickness; // optional parameter
      boost::optional<IfcNonNegativeLengthMeasure> MullionThickness; // optional parameter
      boost::optional<IfcNormalisedRatioMeasure> FirstTransomOffset; // optional parameter
      boost::optional<IfcNormalisedRatioMeasure> SecondTransomOffset; // optional parameter
      boost::optional<IfcNormalisedRatioMeasure> FirstMullionOffset; // optional parameter
      boost::optional<IfcNormalisedRatioMeasure> SecondMullionOffset; // optional parameter
      IfcShapeAspect* ShapeAspectStyle; // optional parameter
      boost::optional<IfcLengthMeasure> LiningOffset; // optional parameter
      boost::optional<IfcLengthMeasure> LiningToPanelOffsetX; // optional parameter
      boost::optional<IfcLengthMeasure> LiningToPanelOffsetY; // optional parameter

   protected:
      virtual void serialize(ifc::StepWriter& w) const
      {
         w.beginEntity(this);
         w.writeAttributeValue(GlobalId);
         w.writeAttributeInstance(OwnerHistory);
         w.writeAttributeValue(Name);
         w.writeAttributeValue(Description);
         w.writeAttributeValue(LiningDepth);
         w.writeAttributeValue(LiningThickness);
         w.writeAttributeValue(TransomThickness);
         w.writeAttributeValue(MullionThickness);
         w.writeAttributeValue(FirstTransomOffset);
         w.writeAttributeValue(SecondTransomOffset);
         w.writeAttributeValue(FirstMullionOffset);
         w.writeAttributeValue(SecondMullionOffset);
         w.writeAttributeInstance(ShapeAspectStyle);
         w.writeAttributeValue(LiningOffset);
         w.writeAttributeValue(LiningToPanelOffsetX);
         w.writeAttributeValue(LiningToPanelOffsetY);
         w.endEntity();
      }

   };

} // namespace ifc4

