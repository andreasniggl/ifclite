// Automatically generated by ifclite express parser from ifc4 express file - do not modify

#pragma once

#include "IfcTypeDefinitions.h"
#include "IfcProperty.h"
#include "IfcProperty.h"

namespace ifc4
{
   class IfcComplexProperty : public IfcProperty
   {
   public:
      virtual ~IfcComplexProperty(){}

      explicit IfcComplexProperty() = default;

      explicit IfcComplexProperty(const IfcIdentifier& _Name, const IfcIdentifier& _UsageName, const std::vector<IfcProperty*>& _HasProperties)
         : IfcProperty(_Name), UsageName(_UsageName), HasProperties(_HasProperties) {}

      virtual std::string className() const { return "IfcComplexProperty"; }

      boost::optional<IfcIdentifier> UsageName; // required parameter
      std::vector<IfcProperty*> HasProperties; // required parameter

   protected:
      virtual void serialize(ifc::StepWriter& w) const
      {
         w.beginEntity(this);
         w.writeAttributeValue(Name);
         w.writeAttributeValue(Description);
         w.writeAttributeValue(UsageName);
         w.writeAttributeInstance(HasProperties);
         w.endEntity();
      }

   };

} // namespace ifc4

