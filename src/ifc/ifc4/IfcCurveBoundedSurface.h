// Automatically generated by ifclite express parser from ifc4 express file - do not modify

#pragma once

#include "IfcTypeDefinitions.h"
#include "IfcBoundedSurface.h"
#include "IfcSurface.h"
#include "IfcBoundaryCurve.h"

namespace ifc4
{
   class IfcCurveBoundedSurface : public IfcBoundedSurface
   {
   public:
      virtual ~IfcCurveBoundedSurface(){}

      explicit IfcCurveBoundedSurface() = default;

      explicit IfcCurveBoundedSurface(IfcSurface* _BasisSurface, const std::vector<IfcBoundaryCurve*>& _Boundaries, const IfcBoolean& _ImplicitOuter)
         : IfcBoundedSurface(), BasisSurface(_BasisSurface), Boundaries(_Boundaries), ImplicitOuter(_ImplicitOuter) {}

      virtual std::string className() const { return "IfcCurveBoundedSurface"; }

      IfcSurface* BasisSurface; // required parameter
      std::vector<IfcBoundaryCurve*> Boundaries; // required parameter
      boost::optional<IfcBoolean> ImplicitOuter; // required parameter

   protected:
      virtual void serialize(ifc::StepWriter& w) const
      {
         w.beginEntity(this);
         w.writeAttributeInstance(BasisSurface);
         w.writeAttributeInstance(Boundaries);
         w.writeAttributeValue(ImplicitOuter);
         w.endEntity();
      }

   };

} // namespace ifc4

