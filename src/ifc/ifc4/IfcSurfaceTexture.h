// Automatically generated by ifclite express parser from ifc4 express file - do not modify

#pragma once

#include "IfcTypeDefinitions.h"
#include "IfcPresentationItem.h"
#include "IfcCartesianTransformationOperator2D.h"

namespace ifc4
{
   class IfcSurfaceTexture : public IfcPresentationItem
   {
   public:
      virtual ~IfcSurfaceTexture(){}

      explicit IfcSurfaceTexture() = default;

      explicit IfcSurfaceTexture(const IfcBoolean& _RepeatS, const IfcBoolean& _RepeatT)
         : IfcPresentationItem(), RepeatS(_RepeatS), RepeatT(_RepeatT) {}

      virtual std::string className() const { return "IfcSurfaceTexture"; }

      boost::optional<IfcBoolean> RepeatS; // required parameter
      boost::optional<IfcBoolean> RepeatT; // required parameter
      boost::optional<IfcIdentifier> Mode; // optional parameter
      IfcCartesianTransformationOperator2D* TextureTransform; // optional parameter
      std::vector<IfcIdentifier> Parameter; // optional parameter

   protected:
      virtual void serialize(ifc::StepWriter& w) const
      {
         w.beginEntity(this);
         w.writeAttributeValue(RepeatS);
         w.writeAttributeValue(RepeatT);
         w.writeAttributeValue(Mode);
         w.writeAttributeInstance(TextureTransform);
         w.writeAttributeValue(Parameter);
         w.endEntity();
      }

   };

} // namespace ifc4

