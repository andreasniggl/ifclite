// Automatically generated by ifclite express parser from ifc4 express file - do not modify

#pragma once

#include "IfcTypeDefinitions.h"
#include "IfcPoint.h"
#include "IfcSurface.h"

namespace ifc4
{
   class IfcPointOnSurface : public IfcPoint
   {
   public:
      virtual ~IfcPointOnSurface(){}

      explicit IfcPointOnSurface() = default;

      explicit IfcPointOnSurface(IfcSurface* _BasisSurface, const IfcParameterValue& _PointParameterU, const IfcParameterValue& _PointParameterV)
         : IfcPoint(), BasisSurface(_BasisSurface), PointParameterU(_PointParameterU), PointParameterV(_PointParameterV) {}

      virtual std::string className() const { return "IfcPointOnSurface"; }

      IfcSurface* BasisSurface; // required parameter
      boost::optional<IfcParameterValue> PointParameterU; // required parameter
      boost::optional<IfcParameterValue> PointParameterV; // required parameter

   protected:
      virtual void serialize(ifc::StepWriter& w) const
      {
         w.beginEntity(this);
         w.writeAttributeInstance(BasisSurface);
         w.writeAttributeValue(PointParameterU);
         w.writeAttributeValue(PointParameterV);
         w.endEntity();
      }

   };

} // namespace ifc4

