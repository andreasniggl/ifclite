// Automatically generated by ifclite express parser from ifc4 express file - do not modify

#pragma once

#include "IfcTypeDefinitions.h"
#include "Entity.h"
#include "IfcActorSelect.h"
#include "IfcActorSelect.h"

namespace ifc4
{
   class IfcApproval : public ifc::Entity
   {
   public:
      virtual ~IfcApproval(){}

      explicit IfcApproval() = default;

      virtual std::string className() const { return "IfcApproval"; }

      boost::optional<IfcIdentifier> Identifier; // optional parameter
      boost::optional<IfcLabel> Name; // optional parameter
      boost::optional<IfcText> Description; // optional parameter
      boost::optional<IfcDateTime> TimeOfApproval; // optional parameter
      boost::optional<IfcLabel> Status; // optional parameter
      boost::optional<IfcLabel> Level; // optional parameter
      boost::optional<IfcText> Qualifier; // optional parameter
      boost::optional<IfcActorSelect> RequestingApproval; // optional parameter
      boost::optional<IfcActorSelect> GivingApproval; // optional parameter

   protected:
      virtual void serialize(ifc::StepWriter& w) const
      {
         w.beginEntity(this);
         w.writeAttributeValue(Identifier);
         w.writeAttributeValue(Name);
         w.writeAttributeValue(Description);
         w.writeAttributeValue(TimeOfApproval);
         w.writeAttributeValue(Status);
         w.writeAttributeValue(Level);
         w.writeAttributeValue(Qualifier);
         w.writeAttributeSelect<IfcActorSelectWriterVisitor>(RequestingApproval);
         w.writeAttributeSelect<IfcActorSelectWriterVisitor>(GivingApproval);
         w.endEntity();
      }

   };

} // namespace ifc4

