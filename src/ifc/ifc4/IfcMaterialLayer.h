// Automatically generated by ifclite express parser from ifc4 express file - do not modify

#pragma once

#include "IfcTypeDefinitions.h"
#include "IfcMaterialDefinition.h"
#include "IfcMaterial.h"

namespace ifc4
{
   class IfcMaterialLayer : public IfcMaterialDefinition
   {
   public:
      virtual ~IfcMaterialLayer(){}

      explicit IfcMaterialLayer() = default;

      explicit IfcMaterialLayer(const IfcNonNegativeLengthMeasure& _LayerThickness)
         : IfcMaterialDefinition(), LayerThickness(_LayerThickness) {}

      virtual std::string className() const { return "IfcMaterialLayer"; }

      IfcMaterial* Material; // optional parameter
      boost::optional<IfcNonNegativeLengthMeasure> LayerThickness; // required parameter
      boost::optional<IfcLogical> IsVentilated; // optional parameter
      boost::optional<IfcLabel> Name; // optional parameter
      boost::optional<IfcText> Description; // optional parameter
      boost::optional<IfcLabel> Category; // optional parameter
      boost::optional<IfcInteger> Priority; // optional parameter

   protected:
      virtual void serialize(ifc::StepWriter& w) const
      {
         w.beginEntity(this);
         w.writeAttributeInstance(Material);
         w.writeAttributeValue(LayerThickness);
         w.writeAttributeValue(IsVentilated);
         w.writeAttributeValue(Name);
         w.writeAttributeValue(Description);
         w.writeAttributeValue(Category);
         w.writeAttributeValue(Priority);
         w.endEntity();
      }

   };

} // namespace ifc4

