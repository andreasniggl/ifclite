// Automatically generated by ifclite express parser from ifc4 express file - do not modify

#pragma once

#include "IfcTypeDefinitions.h"
#include "IfcCompositeCurveSegment.h"

namespace ifc4
{
   class IfcReparametrisedCompositeCurveSegment : public IfcCompositeCurveSegment
   {
   public:
      virtual ~IfcReparametrisedCompositeCurveSegment(){}

      explicit IfcReparametrisedCompositeCurveSegment() = default;

      explicit IfcReparametrisedCompositeCurveSegment(const IfcTransitionCode& _Transition, const IfcBoolean& _SameSense, IfcCurve* _ParentCurve, const IfcParameterValue& _ParamLength)
         : IfcCompositeCurveSegment(_Transition, _SameSense, _ParentCurve), ParamLength(_ParamLength) {}

      virtual std::string className() const { return "IfcReparametrisedCompositeCurveSegment"; }

      boost::optional<IfcParameterValue> ParamLength; // required parameter

   protected:
      virtual void serialize(ifc::StepWriter& w) const
      {
         w.beginEntity(this);
         w.writeAttributeValue(IfcTransitionCodeStringMap, Transition);
         w.writeAttributeValue(SameSense);
         w.writeAttributeInstance(ParentCurve);
         w.writeAttributeValue(ParamLength);
         w.endEntity();
      }

   };

} // namespace ifc4

