// Automatically generated by ifclite express parser from ifc4 express file - do not modify

#pragma once

#include <array>
#include <vector>
#include <string>

namespace ifc4
{
   const char SCHEMA_NAME[] = "IFC4";

   typedef bool IfcStrippedOptional;
   typedef double IfcAbsorbedDoseMeasure;
   typedef double IfcAccelerationMeasure;
   typedef double IfcAmountOfSubstanceMeasure;
   typedef double IfcAngularVelocityMeasure;
   typedef int IfcInteger;
   typedef IfcInteger IfcPositiveInteger;
   typedef std::array<IfcPositiveInteger,3> IfcArcIndex;
   typedef double IfcAreaDensityMeasure;
   typedef double IfcAreaMeasure;
   typedef int IfcBinary;
   typedef bool IfcBoolean;
   typedef std::string IfcLabel;
   typedef IfcLabel IfcBoxAlignment;
   typedef int IfcCardinalPointReference;
   typedef std::array<double,2> IfcComplexNumber;
   typedef std::array<int,4> IfcCompoundPlaneAngleMeasure;
   typedef double IfcContextDependentMeasure;
   typedef int IfcCountMeasure;
   typedef double IfcCurvatureMeasure;
   typedef std::string IfcDate;
   typedef std::string IfcDateTime;
   typedef int IfcDayInMonthNumber;
   typedef int IfcDayInWeekNumber;
   typedef std::string IfcDescriptiveMeasure;
   typedef int IfcDimensionCount;
   typedef double IfcDoseEquivalentMeasure;
   typedef std::string IfcDuration;
   typedef double IfcDynamicViscosityMeasure;
   typedef double IfcElectricCapacitanceMeasure;
   typedef double IfcElectricChargeMeasure;
   typedef double IfcElectricConductanceMeasure;
   typedef double IfcElectricCurrentMeasure;
   typedef double IfcElectricResistanceMeasure;
   typedef double IfcElectricVoltageMeasure;
   typedef double IfcEnergyMeasure;
   typedef std::string IfcFontStyle;
   typedef std::string IfcFontVariant;
   typedef std::string IfcFontWeight;
   typedef double IfcForceMeasure;
   typedef double IfcFrequencyMeasure;
   typedef std::string IfcGloballyUniqueId;
   typedef double IfcHeatFluxDensityMeasure;
   typedef double IfcHeatingValueMeasure;
   typedef std::string IfcIdentifier;
   typedef double IfcIlluminanceMeasure;
   typedef double IfcInductanceMeasure;
   typedef int IfcIntegerCountRateMeasure;
   typedef double IfcIonConcentrationMeasure;
   typedef double IfcIsothermalMoistureCapacityMeasure;
   typedef double IfcKinematicViscosityMeasure;
   typedef IfcIdentifier IfcLanguageId;
   typedef double IfcLengthMeasure;
   typedef std::vector<IfcPositiveInteger> IfcLineIndex;
   typedef double IfcLinearForceMeasure;
   typedef double IfcLinearMomentMeasure;
   typedef double IfcLinearStiffnessMeasure;
   typedef double IfcLinearVelocityMeasure;
   typedef bool IfcLogical;
   typedef double IfcLuminousFluxMeasure;
   typedef double IfcLuminousIntensityDistributionMeasure;
   typedef double IfcLuminousIntensityMeasure;
   typedef double IfcMagneticFluxDensityMeasure;
   typedef double IfcMagneticFluxMeasure;
   typedef double IfcMassDensityMeasure;
   typedef double IfcMassFlowRateMeasure;
   typedef double IfcMassMeasure;
   typedef double IfcMassPerLengthMeasure;
   typedef double IfcModulusOfElasticityMeasure;
   typedef double IfcModulusOfLinearSubgradeReactionMeasure;
   typedef double IfcModulusOfRotationalSubgradeReactionMeasure;
   typedef double IfcModulusOfSubgradeReactionMeasure;
   typedef double IfcMoistureDiffusivityMeasure;
   typedef double IfcMolecularWeightMeasure;
   typedef double IfcMomentOfInertiaMeasure;
   typedef double IfcMonetaryMeasure;
   typedef int IfcMonthInYearNumber;
   typedef IfcLengthMeasure IfcNonNegativeLengthMeasure;
   typedef double IfcRatioMeasure;
   typedef IfcRatioMeasure IfcNormalisedRatioMeasure;
   typedef int IfcNumericMeasure;
   typedef double IfcPHMeasure;
   typedef double IfcParameterValue;
   typedef double IfcPlanarForceMeasure;
   typedef double IfcPlaneAngleMeasure;
   typedef IfcLengthMeasure IfcPositiveLengthMeasure;
   typedef IfcPlaneAngleMeasure IfcPositivePlaneAngleMeasure;
   typedef IfcRatioMeasure IfcPositiveRatioMeasure;
   typedef double IfcPowerMeasure;
   typedef std::string IfcPresentableText;
   typedef double IfcPressureMeasure;
   typedef double IfcRadioActivityMeasure;
   typedef double IfcReal;
   typedef double IfcRotationalFrequencyMeasure;
   typedef double IfcRotationalMassMeasure;
   typedef double IfcRotationalStiffnessMeasure;
   typedef double IfcSectionModulusMeasure;
   typedef double IfcSectionalAreaIntegralMeasure;
   typedef double IfcShearModulusMeasure;
   typedef double IfcSolidAngleMeasure;
   typedef double IfcSoundPowerLevelMeasure;
   typedef double IfcSoundPowerMeasure;
   typedef double IfcSoundPressureLevelMeasure;
   typedef double IfcSoundPressureMeasure;
   typedef double IfcSpecificHeatCapacityMeasure;
   typedef double IfcSpecularExponent;
   typedef double IfcSpecularRoughness;
   typedef double IfcTemperatureGradientMeasure;
   typedef double IfcTemperatureRateOfChangeMeasure;
   typedef std::string IfcText;
   typedef std::string IfcTextAlignment;
   typedef std::string IfcTextDecoration;
   typedef std::string IfcTextFontName;
   typedef std::string IfcTextTransformation;
   typedef double IfcThermalAdmittanceMeasure;
   typedef double IfcThermalConductivityMeasure;
   typedef double IfcThermalExpansionCoefficientMeasure;
   typedef double IfcThermalResistanceMeasure;
   typedef double IfcThermalTransmittanceMeasure;
   typedef double IfcThermodynamicTemperatureMeasure;
   typedef std::string IfcTime;
   typedef double IfcTimeMeasure;
   typedef int IfcTimeStamp;
   typedef double IfcTorqueMeasure;
   typedef std::string IfcURIReference;
   typedef double IfcVaporPermeabilityMeasure;
   typedef double IfcVolumeMeasure;
   typedef double IfcVolumetricFlowRateMeasure;
   typedef double IfcWarpingConstantMeasure;
   typedef double IfcWarpingMomentMeasure;

   enum struct IfcActionRequestTypeEnum {
      EMAIL,
      FAX,
      PHONE,
      POST,
      VERBAL,
      USERDEFINED,
      NOTDEFINED
   };

   const char * IfcActionRequestTypeEnumStringMap[] = {
      "EMAIL",
      "FAX",
      "PHONE",
      "POST",
      "VERBAL",
      "USERDEFINED",
      "NOTDEFINED"
   };

   enum struct IfcActionSourceTypeEnum {
      DEAD_LOAD_G,
      COMPLETION_G1,
      LIVE_LOAD_Q,
      SNOW_S,
      WIND_W,
      PRESTRESSING_P,
      SETTLEMENT_U,
      TEMPERATURE_T,
      EARTHQUAKE_E,
      FIRE,
      IMPULSE,
      IMPACT,
      TRANSPORT,
      ERECTION,
      PROPPING,
      SYSTEM_IMPERFECTION,
      SHRINKAGE,
      CREEP,
      LACK_OF_FIT,
      BUOYANCY,
      ICE,
      CURRENT,
      WAVE,
      RAIN,
      BRAKES,
      USERDEFINED,
      NOTDEFINED
   };

   const char * IfcActionSourceTypeEnumStringMap[] = {
      "DEAD_LOAD_G",
      "COMPLETION_G1",
      "LIVE_LOAD_Q",
      "SNOW_S",
      "WIND_W",
      "PRESTRESSING_P",
      "SETTLEMENT_U",
      "TEMPERATURE_T",
      "EARTHQUAKE_E",
      "FIRE",
      "IMPULSE",
      "IMPACT",
      "TRANSPORT",
      "ERECTION",
      "PROPPING",
      "SYSTEM_IMPERFECTION",
      "SHRINKAGE",
      "CREEP",
      "LACK_OF_FIT",
      "BUOYANCY",
      "ICE",
      "CURRENT",
      "WAVE",
      "RAIN",
      "BRAKES",
      "USERDEFINED",
      "NOTDEFINED"
   };

   enum struct IfcActionTypeEnum {
      PERMANENT_G,
      VARIABLE_Q,
      EXTRAORDINARY_A,
      USERDEFINED,
      NOTDEFINED
   };

   const char * IfcActionTypeEnumStringMap[] = {
      "PERMANENT_G",
      "VARIABLE_Q",
      "EXTRAORDINARY_A",
      "USERDEFINED",
      "NOTDEFINED"
   };

   enum struct IfcActuatorTypeEnum {
      ELECTRICACTUATOR,
      HANDOPERATEDACTUATOR,
      HYDRAULICACTUATOR,
      PNEUMATICACTUATOR,
      THERMOSTATICACTUATOR,
      USERDEFINED,
      NOTDEFINED
   };

   const char * IfcActuatorTypeEnumStringMap[] = {
      "ELECTRICACTUATOR",
      "HANDOPERATEDACTUATOR",
      "HYDRAULICACTUATOR",
      "PNEUMATICACTUATOR",
      "THERMOSTATICACTUATOR",
      "USERDEFINED",
      "NOTDEFINED"
   };

   enum struct IfcAddressTypeEnum {
      OFFICE,
      SITE,
      HOME,
      DISTRIBUTIONPOINT,
      USERDEFINED
   };

   const char * IfcAddressTypeEnumStringMap[] = {
      "OFFICE",
      "SITE",
      "HOME",
      "DISTRIBUTIONPOINT",
      "USERDEFINED"
   };

   enum struct IfcAirTerminalBoxTypeEnum {
      CONSTANTFLOW,
      VARIABLEFLOWPRESSUREDEPENDANT,
      VARIABLEFLOWPRESSUREINDEPENDANT,
      USERDEFINED,
      NOTDEFINED
   };

   const char * IfcAirTerminalBoxTypeEnumStringMap[] = {
      "CONSTANTFLOW",
      "VARIABLEFLOWPRESSUREDEPENDANT",
      "VARIABLEFLOWPRESSUREINDEPENDANT",
      "USERDEFINED",
      "NOTDEFINED"
   };

   enum struct IfcAirTerminalTypeEnum {
      DIFFUSER,
      GRILLE,
      LOUVRE,
      REGISTER,
      USERDEFINED,
      NOTDEFINED
   };

   const char * IfcAirTerminalTypeEnumStringMap[] = {
      "DIFFUSER",
      "GRILLE",
      "LOUVRE",
      "REGISTER",
      "USERDEFINED",
      "NOTDEFINED"
   };

   enum struct IfcAirToAirHeatRecoveryTypeEnum {
      FIXEDPLATECOUNTERFLOWEXCHANGER,
      FIXEDPLATECROSSFLOWEXCHANGER,
      FIXEDPLATEPARALLELFLOWEXCHANGER,
      ROTARYWHEEL,
      RUNAROUNDCOILLOOP,
      HEATPIPE,
      TWINTOWERENTHALPYRECOVERYLOOPS,
      THERMOSIPHONSEALEDTUBEHEATEXCHANGERS,
      THERMOSIPHONCOILTYPEHEATEXCHANGERS,
      USERDEFINED,
      NOTDEFINED
   };

   const char * IfcAirToAirHeatRecoveryTypeEnumStringMap[] = {
      "FIXEDPLATECOUNTERFLOWEXCHANGER",
      "FIXEDPLATECROSSFLOWEXCHANGER",
      "FIXEDPLATEPARALLELFLOWEXCHANGER",
      "ROTARYWHEEL",
      "RUNAROUNDCOILLOOP",
      "HEATPIPE",
      "TWINTOWERENTHALPYRECOVERYLOOPS",
      "THERMOSIPHONSEALEDTUBEHEATEXCHANGERS",
      "THERMOSIPHONCOILTYPEHEATEXCHANGERS",
      "USERDEFINED",
      "NOTDEFINED"
   };

   enum struct IfcAlarmTypeEnum {
      BELL,
      BREAKGLASSBUTTON,
      LIGHT,
      MANUALPULLBOX,
      SIREN,
      WHISTLE,
      USERDEFINED,
      NOTDEFINED
   };

   const char * IfcAlarmTypeEnumStringMap[] = {
      "BELL",
      "BREAKGLASSBUTTON",
      "LIGHT",
      "MANUALPULLBOX",
      "SIREN",
      "WHISTLE",
      "USERDEFINED",
      "NOTDEFINED"
   };

   enum struct IfcAnalysisModelTypeEnum {
      IN_PLANE_LOADING_2D,
      OUT_PLANE_LOADING_2D,
      LOADING_3D,
      USERDEFINED,
      NOTDEFINED
   };

   const char * IfcAnalysisModelTypeEnumStringMap[] = {
      "IN_PLANE_LOADING_2D",
      "OUT_PLANE_LOADING_2D",
      "LOADING_3D",
      "USERDEFINED",
      "NOTDEFINED"
   };

   enum struct IfcAnalysisTheoryTypeEnum {
      FIRST_ORDER_THEORY,
      SECOND_ORDER_THEORY,
      THIRD_ORDER_THEORY,
      FULL_NONLINEAR_THEORY,
      USERDEFINED,
      NOTDEFINED
   };

   const char * IfcAnalysisTheoryTypeEnumStringMap[] = {
      "FIRST_ORDER_THEORY",
      "SECOND_ORDER_THEORY",
      "THIRD_ORDER_THEORY",
      "FULL_NONLINEAR_THEORY",
      "USERDEFINED",
      "NOTDEFINED"
   };

   enum struct IfcArithmeticOperatorEnum {
      ADD,
      DIVIDE,
      MULTIPLY,
      SUBTRACT
   };

   const char * IfcArithmeticOperatorEnumStringMap[] = {
      "ADD",
      "DIVIDE",
      "MULTIPLY",
      "SUBTRACT"
   };

   enum struct IfcAssemblyPlaceEnum {
      SITE,
      FACTORY,
      NOTDEFINED
   };

   const char * IfcAssemblyPlaceEnumStringMap[] = {
      "SITE",
      "FACTORY",
      "NOTDEFINED"
   };

   enum struct IfcAudioVisualApplianceTypeEnum {
      AMPLIFIER,
      CAMERA,
      DISPLAY,
      MICROPHONE,
      PLAYER,
      PROJECTOR,
      RECEIVER,
      SPEAKER,
      SWITCHER,
      TELEPHONE,
      TUNER,
      USERDEFINED,
      NOTDEFINED
   };

   const char * IfcAudioVisualApplianceTypeEnumStringMap[] = {
      "AMPLIFIER",
      "CAMERA",
      "DISPLAY",
      "MICROPHONE",
      "PLAYER",
      "PROJECTOR",
      "RECEIVER",
      "SPEAKER",
      "SWITCHER",
      "TELEPHONE",
      "TUNER",
      "USERDEFINED",
      "NOTDEFINED"
   };

   enum struct IfcBSplineCurveForm {
      POLYLINE_FORM,
      CIRCULAR_ARC,
      ELLIPTIC_ARC,
      PARABOLIC_ARC,
      HYPERBOLIC_ARC,
      UNSPECIFIED
   };

   const char * IfcBSplineCurveFormStringMap[] = {
      "POLYLINE_FORM",
      "CIRCULAR_ARC",
      "ELLIPTIC_ARC",
      "PARABOLIC_ARC",
      "HYPERBOLIC_ARC",
      "UNSPECIFIED"
   };

   enum struct IfcBSplineSurfaceForm {
      PLANE_SURF,
      CYLINDRICAL_SURF,
      CONICAL_SURF,
      SPHERICAL_SURF,
      TOROIDAL_SURF,
      SURF_OF_REVOLUTION,
      RULED_SURF,
      GENERALISED_CONE,
      QUADRIC_SURF,
      SURF_OF_LINEAR_EXTRUSION,
      UNSPECIFIED
   };

   const char * IfcBSplineSurfaceFormStringMap[] = {
      "PLANE_SURF",
      "CYLINDRICAL_SURF",
      "CONICAL_SURF",
      "SPHERICAL_SURF",
      "TOROIDAL_SURF",
      "SURF_OF_REVOLUTION",
      "RULED_SURF",
      "GENERALISED_CONE",
      "QUADRIC_SURF",
      "SURF_OF_LINEAR_EXTRUSION",
      "UNSPECIFIED"
   };

   enum struct IfcBeamTypeEnum {
      BEAM,
      JOIST,
      HOLLOWCORE,
      LINTEL,
      SPANDREL,
      T_BEAM,
      USERDEFINED,
      NOTDEFINED
   };

   const char * IfcBeamTypeEnumStringMap[] = {
      "BEAM",
      "JOIST",
      "HOLLOWCORE",
      "LINTEL",
      "SPANDREL",
      "T_BEAM",
      "USERDEFINED",
      "NOTDEFINED"
   };

   enum struct IfcBenchmarkEnum {
      GREATERTHAN,
      GREATERTHANOREQUALTO,
      LESSTHAN,
      LESSTHANOREQUALTO,
      EQUALTO,
      NOTEQUALTO,
      INCLUDES,
      NOTINCLUDES,
      INCLUDEDIN,
      NOTINCLUDEDIN
   };

   const char * IfcBenchmarkEnumStringMap[] = {
      "GREATERTHAN",
      "GREATERTHANOREQUALTO",
      "LESSTHAN",
      "LESSTHANOREQUALTO",
      "EQUALTO",
      "NOTEQUALTO",
      "INCLUDES",
      "NOTINCLUDES",
      "INCLUDEDIN",
      "NOTINCLUDEDIN"
   };

   enum struct IfcBoilerTypeEnum {
      WATER,
      STEAM,
      USERDEFINED,
      NOTDEFINED
   };

   const char * IfcBoilerTypeEnumStringMap[] = {
      "WATER",
      "STEAM",
      "USERDEFINED",
      "NOTDEFINED"
   };

   enum struct IfcBooleanOperator {
      UNION,
      INTERSECTION,
      DIFFERENCE
   };

   const char * IfcBooleanOperatorStringMap[] = {
      "UNION",
      "INTERSECTION",
      "DIFFERENCE"
   };

   enum struct IfcBuildingElementPartTypeEnum {
      INSULATION,
      PRECASTPANEL,
      USERDEFINED,
      NOTDEFINED
   };

   const char * IfcBuildingElementPartTypeEnumStringMap[] = {
      "INSULATION",
      "PRECASTPANEL",
      "USERDEFINED",
      "NOTDEFINED"
   };

   enum struct IfcBuildingElementProxyTypeEnum {
      COMPLEX,
      ELEMENT,
      PARTIAL,
      PROVISIONFORVOID,
      PROVISIONFORSPACE,
      USERDEFINED,
      NOTDEFINED
   };

   const char * IfcBuildingElementProxyTypeEnumStringMap[] = {
      "COMPLEX",
      "ELEMENT",
      "PARTIAL",
      "PROVISIONFORVOID",
      "PROVISIONFORSPACE",
      "USERDEFINED",
      "NOTDEFINED"
   };

   enum struct IfcBuildingSystemTypeEnum {
      FENESTRATION,
      FOUNDATION,
      LOADBEARING,
      OUTERSHELL,
      SHADING,
      TRANSPORT,
      USERDEFINED,
      NOTDEFINED
   };

   const char * IfcBuildingSystemTypeEnumStringMap[] = {
      "FENESTRATION",
      "FOUNDATION",
      "LOADBEARING",
      "OUTERSHELL",
      "SHADING",
      "TRANSPORT",
      "USERDEFINED",
      "NOTDEFINED"
   };

   enum struct IfcBurnerTypeEnum {
      USERDEFINED,
      NOTDEFINED
   };

   const char * IfcBurnerTypeEnumStringMap[] = {
      "USERDEFINED",
      "NOTDEFINED"
   };

   enum struct IfcCableCarrierFittingTypeEnum {
      BEND,
      CROSS,
      REDUCER,
      TEE,
      USERDEFINED,
      NOTDEFINED
   };

   const char * IfcCableCarrierFittingTypeEnumStringMap[] = {
      "BEND",
      "CROSS",
      "REDUCER",
      "TEE",
      "USERDEFINED",
      "NOTDEFINED"
   };

   enum struct IfcCableCarrierSegmentTypeEnum {
      CABLELADDERSEGMENT,
      CABLETRAYSEGMENT,
      CABLETRUNKINGSEGMENT,
      CONDUITSEGMENT,
      USERDEFINED,
      NOTDEFINED
   };

   const char * IfcCableCarrierSegmentTypeEnumStringMap[] = {
      "CABLELADDERSEGMENT",
      "CABLETRAYSEGMENT",
      "CABLETRUNKINGSEGMENT",
      "CONDUITSEGMENT",
      "USERDEFINED",
      "NOTDEFINED"
   };

   enum struct IfcCableFittingTypeEnum {
      CONNECTOR,
      ENTRY,
      EXIT,
      JUNCTION,
      TRANSITION,
      USERDEFINED,
      NOTDEFINED
   };

   const char * IfcCableFittingTypeEnumStringMap[] = {
      "CONNECTOR",
      "ENTRY",
      "EXIT",
      "JUNCTION",
      "TRANSITION",
      "USERDEFINED",
      "NOTDEFINED"
   };

   enum struct IfcCableSegmentTypeEnum {
      BUSBARSEGMENT,
      CABLESEGMENT,
      CONDUCTORSEGMENT,
      CORESEGMENT,
      USERDEFINED,
      NOTDEFINED
   };

   const char * IfcCableSegmentTypeEnumStringMap[] = {
      "BUSBARSEGMENT",
      "CABLESEGMENT",
      "CONDUCTORSEGMENT",
      "CORESEGMENT",
      "USERDEFINED",
      "NOTDEFINED"
   };

   enum struct IfcChangeActionEnum {
      NOCHANGE,
      MODIFIED,
      ADDED,
      DELETED,
      NOTDEFINED
   };

   const char * IfcChangeActionEnumStringMap[] = {
      "NOCHANGE",
      "MODIFIED",
      "ADDED",
      "DELETED",
      "NOTDEFINED"
   };

   enum struct IfcChillerTypeEnum {
      AIRCOOLED,
      WATERCOOLED,
      HEATRECOVERY,
      USERDEFINED,
      NOTDEFINED
   };

   const char * IfcChillerTypeEnumStringMap[] = {
      "AIRCOOLED",
      "WATERCOOLED",
      "HEATRECOVERY",
      "USERDEFINED",
      "NOTDEFINED"
   };

   enum struct IfcChimneyTypeEnum {
      USERDEFINED,
      NOTDEFINED
   };

   const char * IfcChimneyTypeEnumStringMap[] = {
      "USERDEFINED",
      "NOTDEFINED"
   };

   enum struct IfcCoilTypeEnum {
      DXCOOLINGCOIL,
      ELECTRICHEATINGCOIL,
      GASHEATINGCOIL,
      HYDRONICCOIL,
      STEAMHEATINGCOIL,
      WATERCOOLINGCOIL,
      WATERHEATINGCOIL,
      USERDEFINED,
      NOTDEFINED
   };

   const char * IfcCoilTypeEnumStringMap[] = {
      "DXCOOLINGCOIL",
      "ELECTRICHEATINGCOIL",
      "GASHEATINGCOIL",
      "HYDRONICCOIL",
      "STEAMHEATINGCOIL",
      "WATERCOOLINGCOIL",
      "WATERHEATINGCOIL",
      "USERDEFINED",
      "NOTDEFINED"
   };

   enum struct IfcColumnTypeEnum {
      COLUMN,
      PILASTER,
      USERDEFINED,
      NOTDEFINED
   };

   const char * IfcColumnTypeEnumStringMap[] = {
      "COLUMN",
      "PILASTER",
      "USERDEFINED",
      "NOTDEFINED"
   };

   enum struct IfcCommunicationsApplianceTypeEnum {
      ANTENNA,
      COMPUTER,
      FAX,
      GATEWAY,
      MODEM,
      NETWORKAPPLIANCE,
      NETWORKBRIDGE,
      NETWORKHUB,
      PRINTER,
      REPEATER,
      ROUTER,
      SCANNER,
      USERDEFINED,
      NOTDEFINED
   };

   const char * IfcCommunicationsApplianceTypeEnumStringMap[] = {
      "ANTENNA",
      "COMPUTER",
      "FAX",
      "GATEWAY",
      "MODEM",
      "NETWORKAPPLIANCE",
      "NETWORKBRIDGE",
      "NETWORKHUB",
      "PRINTER",
      "REPEATER",
      "ROUTER",
      "SCANNER",
      "USERDEFINED",
      "NOTDEFINED"
   };

   enum struct IfcComplexPropertyTemplateTypeEnum {
      P_COMPLEX,
      Q_COMPLEX
   };

   const char * IfcComplexPropertyTemplateTypeEnumStringMap[] = {
      "P_COMPLEX",
      "Q_COMPLEX"
   };

   enum struct IfcCompressorTypeEnum {
      DYNAMIC,
      RECIPROCATING,
      ROTARY,
      SCROLL,
      TROCHOIDAL,
      SINGLESTAGE,
      BOOSTER,
      OPENTYPE,
      HERMETIC,
      SEMIHERMETIC,
      WELDEDSHELLHERMETIC,
      ROLLINGPISTON,
      ROTARYVANE,
      SINGLESCREW,
      TWINSCREW,
      USERDEFINED,
      NOTDEFINED
   };

   const char * IfcCompressorTypeEnumStringMap[] = {
      "DYNAMIC",
      "RECIPROCATING",
      "ROTARY",
      "SCROLL",
      "TROCHOIDAL",
      "SINGLESTAGE",
      "BOOSTER",
      "OPENTYPE",
      "HERMETIC",
      "SEMIHERMETIC",
      "WELDEDSHELLHERMETIC",
      "ROLLINGPISTON",
      "ROTARYVANE",
      "SINGLESCREW",
      "TWINSCREW",
      "USERDEFINED",
      "NOTDEFINED"
   };

   enum struct IfcCondenserTypeEnum {
      AIRCOOLED,
      EVAPORATIVECOOLED,
      WATERCOOLED,
      WATERCOOLEDBRAZEDPLATE,
      WATERCOOLEDSHELLCOIL,
      WATERCOOLEDSHELLTUBE,
      WATERCOOLEDTUBEINTUBE,
      USERDEFINED,
      NOTDEFINED
   };

   const char * IfcCondenserTypeEnumStringMap[] = {
      "AIRCOOLED",
      "EVAPORATIVECOOLED",
      "WATERCOOLED",
      "WATERCOOLEDBRAZEDPLATE",
      "WATERCOOLEDSHELLCOIL",
      "WATERCOOLEDSHELLTUBE",
      "WATERCOOLEDTUBEINTUBE",
      "USERDEFINED",
      "NOTDEFINED"
   };

   enum struct IfcConnectionTypeEnum {
      ATPATH,
      ATSTART,
      ATEND,
      NOTDEFINED
   };

   const char * IfcConnectionTypeEnumStringMap[] = {
      "ATPATH",
      "ATSTART",
      "ATEND",
      "NOTDEFINED"
   };

   enum struct IfcConstraintEnum {
      HARD,
      SOFT,
      ADVISORY,
      USERDEFINED,
      NOTDEFINED
   };

   const char * IfcConstraintEnumStringMap[] = {
      "HARD",
      "SOFT",
      "ADVISORY",
      "USERDEFINED",
      "NOTDEFINED"
   };

   enum struct IfcConstructionEquipmentResourceTypeEnum {
      DEMOLISHING,
      EARTHMOVING,
      ERECTING,
      HEATING,
      LIGHTING,
      PAVING,
      PUMPING,
      TRANSPORTING,
      USERDEFINED,
      NOTDEFINED
   };

   const char * IfcConstructionEquipmentResourceTypeEnumStringMap[] = {
      "DEMOLISHING",
      "EARTHMOVING",
      "ERECTING",
      "HEATING",
      "LIGHTING",
      "PAVING",
      "PUMPING",
      "TRANSPORTING",
      "USERDEFINED",
      "NOTDEFINED"
   };

   enum struct IfcConstructionMaterialResourceTypeEnum {
      AGGREGATES,
      CONCRETE,
      DRYWALL,
      FUEL,
      GYPSUM,
      MASONRY,
      METAL,
      PLASTIC,
      WOOD,
      NOTDEFINED,
      USERDEFINED
   };

   const char * IfcConstructionMaterialResourceTypeEnumStringMap[] = {
      "AGGREGATES",
      "CONCRETE",
      "DRYWALL",
      "FUEL",
      "GYPSUM",
      "MASONRY",
      "METAL",
      "PLASTIC",
      "WOOD",
      "NOTDEFINED",
      "USERDEFINED"
   };

   enum struct IfcConstructionProductResourceTypeEnum {
      ASSEMBLY,
      FORMWORK,
      USERDEFINED,
      NOTDEFINED
   };

   const char * IfcConstructionProductResourceTypeEnumStringMap[] = {
      "ASSEMBLY",
      "FORMWORK",
      "USERDEFINED",
      "NOTDEFINED"
   };

   enum struct IfcControllerTypeEnum {
      FLOATING,
      PROGRAMMABLE,
      PROPORTIONAL,
      MULTIPOSITION,
      TWOPOSITION,
      USERDEFINED,
      NOTDEFINED
   };

   const char * IfcControllerTypeEnumStringMap[] = {
      "FLOATING",
      "PROGRAMMABLE",
      "PROPORTIONAL",
      "MULTIPOSITION",
      "TWOPOSITION",
      "USERDEFINED",
      "NOTDEFINED"
   };

   enum struct IfcCooledBeamTypeEnum {
      ACTIVE,
      PASSIVE,
      USERDEFINED,
      NOTDEFINED
   };

   const char * IfcCooledBeamTypeEnumStringMap[] = {
      "ACTIVE",
      "PASSIVE",
      "USERDEFINED",
      "NOTDEFINED"
   };

   enum struct IfcCoolingTowerTypeEnum {
      NATURALDRAFT,
      MECHANICALINDUCEDDRAFT,
      MECHANICALFORCEDDRAFT,
      USERDEFINED,
      NOTDEFINED
   };

   const char * IfcCoolingTowerTypeEnumStringMap[] = {
      "NATURALDRAFT",
      "MECHANICALINDUCEDDRAFT",
      "MECHANICALFORCEDDRAFT",
      "USERDEFINED",
      "NOTDEFINED"
   };

   enum struct IfcCostItemTypeEnum {
      USERDEFINED,
      NOTDEFINED
   };

   const char * IfcCostItemTypeEnumStringMap[] = {
      "USERDEFINED",
      "NOTDEFINED"
   };

   enum struct IfcCostScheduleTypeEnum {
      BUDGET,
      COSTPLAN,
      ESTIMATE,
      TENDER,
      PRICEDBILLOFQUANTITIES,
      UNPRICEDBILLOFQUANTITIES,
      SCHEDULEOFRATES,
      USERDEFINED,
      NOTDEFINED
   };

   const char * IfcCostScheduleTypeEnumStringMap[] = {
      "BUDGET",
      "COSTPLAN",
      "ESTIMATE",
      "TENDER",
      "PRICEDBILLOFQUANTITIES",
      "UNPRICEDBILLOFQUANTITIES",
      "SCHEDULEOFRATES",
      "USERDEFINED",
      "NOTDEFINED"
   };

   enum struct IfcCoveringTypeEnum {
      CEILING,
      FLOORING,
      CLADDING,
      ROOFING,
      MOLDING,
      SKIRTINGBOARD,
      INSULATION,
      MEMBRANE,
      SLEEVING,
      WRAPPING,
      USERDEFINED,
      NOTDEFINED
   };

   const char * IfcCoveringTypeEnumStringMap[] = {
      "CEILING",
      "FLOORING",
      "CLADDING",
      "ROOFING",
      "MOLDING",
      "SKIRTINGBOARD",
      "INSULATION",
      "MEMBRANE",
      "SLEEVING",
      "WRAPPING",
      "USERDEFINED",
      "NOTDEFINED"
   };

   enum struct IfcCrewResourceTypeEnum {
      OFFICE,
      SITE,
      USERDEFINED,
      NOTDEFINED
   };

   const char * IfcCrewResourceTypeEnumStringMap[] = {
      "OFFICE",
      "SITE",
      "USERDEFINED",
      "NOTDEFINED"
   };

   enum struct IfcCurtainWallTypeEnum {
      USERDEFINED,
      NOTDEFINED
   };

   const char * IfcCurtainWallTypeEnumStringMap[] = {
      "USERDEFINED",
      "NOTDEFINED"
   };

   enum struct IfcCurveInterpolationEnum {
      LINEAR,
      LOG_LINEAR,
      LOG_LOG,
      NOTDEFINED
   };

   const char * IfcCurveInterpolationEnumStringMap[] = {
      "LINEAR",
      "LOG_LINEAR",
      "LOG_LOG",
      "NOTDEFINED"
   };

   enum struct IfcDamperTypeEnum {
      BACKDRAFTDAMPER,
      BALANCINGDAMPER,
      BLASTDAMPER,
      CONTROLDAMPER,
      FIREDAMPER,
      FIRESMOKEDAMPER,
      FUMEHOODEXHAUST,
      GRAVITYDAMPER,
      GRAVITYRELIEFDAMPER,
      RELIEFDAMPER,
      SMOKEDAMPER,
      USERDEFINED,
      NOTDEFINED
   };

   const char * IfcDamperTypeEnumStringMap[] = {
      "BACKDRAFTDAMPER",
      "BALANCINGDAMPER",
      "BLASTDAMPER",
      "CONTROLDAMPER",
      "FIREDAMPER",
      "FIRESMOKEDAMPER",
      "FUMEHOODEXHAUST",
      "GRAVITYDAMPER",
      "GRAVITYRELIEFDAMPER",
      "RELIEFDAMPER",
      "SMOKEDAMPER",
      "USERDEFINED",
      "NOTDEFINED"
   };

   enum struct IfcDataOriginEnum {
      MEASURED,
      PREDICTED,
      SIMULATED,
      USERDEFINED,
      NOTDEFINED
   };

   const char * IfcDataOriginEnumStringMap[] = {
      "MEASURED",
      "PREDICTED",
      "SIMULATED",
      "USERDEFINED",
      "NOTDEFINED"
   };

   enum struct IfcDerivedUnitEnum {
      ANGULARVELOCITYUNIT,
      AREADENSITYUNIT,
      COMPOUNDPLANEANGLEUNIT,
      DYNAMICVISCOSITYUNIT,
      HEATFLUXDENSITYUNIT,
      INTEGERCOUNTRATEUNIT,
      ISOTHERMALMOISTURECAPACITYUNIT,
      KINEMATICVISCOSITYUNIT,
      LINEARVELOCITYUNIT,
      MASSDENSITYUNIT,
      MASSFLOWRATEUNIT,
      MOISTUREDIFFUSIVITYUNIT,
      MOLECULARWEIGHTUNIT,
      SPECIFICHEATCAPACITYUNIT,
      THERMALADMITTANCEUNIT,
      THERMALCONDUCTANCEUNIT,
      THERMALRESISTANCEUNIT,
      THERMALTRANSMITTANCEUNIT,
      VAPORPERMEABILITYUNIT,
      VOLUMETRICFLOWRATEUNIT,
      ROTATIONALFREQUENCYUNIT,
      TORQUEUNIT,
      MOMENTOFINERTIAUNIT,
      LINEARMOMENTUNIT,
      LINEARFORCEUNIT,
      PLANARFORCEUNIT,
      MODULUSOFELASTICITYUNIT,
      SHEARMODULUSUNIT,
      LINEARSTIFFNESSUNIT,
      ROTATIONALSTIFFNESSUNIT,
      MODULUSOFSUBGRADEREACTIONUNIT,
      ACCELERATIONUNIT,
      CURVATUREUNIT,
      HEATINGVALUEUNIT,
      IONCONCENTRATIONUNIT,
      LUMINOUSINTENSITYDISTRIBUTIONUNIT,
      MASSPERLENGTHUNIT,
      MODULUSOFLINEARSUBGRADEREACTIONUNIT,
      MODULUSOFROTATIONALSUBGRADEREACTIONUNIT,
      PHUNIT,
      ROTATIONALMASSUNIT,
      SECTIONAREAINTEGRALUNIT,
      SECTIONMODULUSUNIT,
      SOUNDPOWERLEVELUNIT,
      SOUNDPOWERUNIT,
      SOUNDPRESSURELEVELUNIT,
      SOUNDPRESSUREUNIT,
      TEMPERATUREGRADIENTUNIT,
      TEMPERATURERATEOFCHANGEUNIT,
      THERMALEXPANSIONCOEFFICIENTUNIT,
      WARPINGCONSTANTUNIT,
      WARPINGMOMENTUNIT,
      USERDEFINED
   };

   const char * IfcDerivedUnitEnumStringMap[] = {
      "ANGULARVELOCITYUNIT",
      "AREADENSITYUNIT",
      "COMPOUNDPLANEANGLEUNIT",
      "DYNAMICVISCOSITYUNIT",
      "HEATFLUXDENSITYUNIT",
      "INTEGERCOUNTRATEUNIT",
      "ISOTHERMALMOISTURECAPACITYUNIT",
      "KINEMATICVISCOSITYUNIT",
      "LINEARVELOCITYUNIT",
      "MASSDENSITYUNIT",
      "MASSFLOWRATEUNIT",
      "MOISTUREDIFFUSIVITYUNIT",
      "MOLECULARWEIGHTUNIT",
      "SPECIFICHEATCAPACITYUNIT",
      "THERMALADMITTANCEUNIT",
      "THERMALCONDUCTANCEUNIT",
      "THERMALRESISTANCEUNIT",
      "THERMALTRANSMITTANCEUNIT",
      "VAPORPERMEABILITYUNIT",
      "VOLUMETRICFLOWRATEUNIT",
      "ROTATIONALFREQUENCYUNIT",
      "TORQUEUNIT",
      "MOMENTOFINERTIAUNIT",
      "LINEARMOMENTUNIT",
      "LINEARFORCEUNIT",
      "PLANARFORCEUNIT",
      "MODULUSOFELASTICITYUNIT",
      "SHEARMODULUSUNIT",
      "LINEARSTIFFNESSUNIT",
      "ROTATIONALSTIFFNESSUNIT",
      "MODULUSOFSUBGRADEREACTIONUNIT",
      "ACCELERATIONUNIT",
      "CURVATUREUNIT",
      "HEATINGVALUEUNIT",
      "IONCONCENTRATIONUNIT",
      "LUMINOUSINTENSITYDISTRIBUTIONUNIT",
      "MASSPERLENGTHUNIT",
      "MODULUSOFLINEARSUBGRADEREACTIONUNIT",
      "MODULUSOFROTATIONALSUBGRADEREACTIONUNIT",
      "PHUNIT",
      "ROTATIONALMASSUNIT",
      "SECTIONAREAINTEGRALUNIT",
      "SECTIONMODULUSUNIT",
      "SOUNDPOWERLEVELUNIT",
      "SOUNDPOWERUNIT",
      "SOUNDPRESSURELEVELUNIT",
      "SOUNDPRESSUREUNIT",
      "TEMPERATUREGRADIENTUNIT",
      "TEMPERATURERATEOFCHANGEUNIT",
      "THERMALEXPANSIONCOEFFICIENTUNIT",
      "WARPINGCONSTANTUNIT",
      "WARPINGMOMENTUNIT",
      "USERDEFINED"
   };

   enum struct IfcDirectionSenseEnum {
      POSITIVE,
      NEGATIVE
   };

   const char * IfcDirectionSenseEnumStringMap[] = {
      "POSITIVE",
      "NEGATIVE"
   };

   enum struct IfcDiscreteAccessoryTypeEnum {
      ANCHORPLATE,
      BRACKET,
      SHOE,
      USERDEFINED,
      NOTDEFINED
   };

   const char * IfcDiscreteAccessoryTypeEnumStringMap[] = {
      "ANCHORPLATE",
      "BRACKET",
      "SHOE",
      "USERDEFINED",
      "NOTDEFINED"
   };

   enum struct IfcDistributionChamberElementTypeEnum {
      FORMEDDUCT,
      INSPECTIONCHAMBER,
      INSPECTIONPIT,
      MANHOLE,
      METERCHAMBER,
      SUMP,
      TRENCH,
      VALVECHAMBER,
      USERDEFINED,
      NOTDEFINED
   };

   const char * IfcDistributionChamberElementTypeEnumStringMap[] = {
      "FORMEDDUCT",
      "INSPECTIONCHAMBER",
      "INSPECTIONPIT",
      "MANHOLE",
      "METERCHAMBER",
      "SUMP",
      "TRENCH",
      "VALVECHAMBER",
      "USERDEFINED",
      "NOTDEFINED"
   };

   enum struct IfcDistributionPortTypeEnum {
      CABLE,
      CABLECARRIER,
      DUCT,
      PIPE,
      USERDEFINED,
      NOTDEFINED
   };

   const char * IfcDistributionPortTypeEnumStringMap[] = {
      "CABLE",
      "CABLECARRIER",
      "DUCT",
      "PIPE",
      "USERDEFINED",
      "NOTDEFINED"
   };

   enum struct IfcDistributionSystemEnum {
      AIRCONDITIONING,
      AUDIOVISUAL,
      CHEMICAL,
      CHILLEDWATER,
      COMMUNICATION,
      COMPRESSEDAIR,
      CONDENSERWATER,
      CONTROL,
      CONVEYING,
      DATA,
      DISPOSAL,
      DOMESTICCOLDWATER,
      DOMESTICHOTWATER,
      DRAINAGE,
      EARTHING,
      ELECTRICAL,
      ELECTROACOUSTIC,
      EXHAUST,
      FIREPROTECTION,
      FUEL,
      GAS,
      HAZARDOUS,
      HEATING,
      LIGHTING,
      LIGHTNINGPROTECTION,
      MUNICIPALSOLIDWASTE,
      OIL,
      OPERATIONAL,
      POWERGENERATION,
      RAINWATER,
      REFRIGERATION,
      SECURITY,
      SEWAGE,
      SIGNAL,
      STORMWATER,
      TELEPHONE,
      TV,
      VACUUM,
      VENT,
      VENTILATION,
      WASTEWATER,
      WATERSUPPLY,
      USERDEFINED,
      NOTDEFINED
   };

   const char * IfcDistributionSystemEnumStringMap[] = {
      "AIRCONDITIONING",
      "AUDIOVISUAL",
      "CHEMICAL",
      "CHILLEDWATER",
      "COMMUNICATION",
      "COMPRESSEDAIR",
      "CONDENSERWATER",
      "CONTROL",
      "CONVEYING",
      "DATA",
      "DISPOSAL",
      "DOMESTICCOLDWATER",
      "DOMESTICHOTWATER",
      "DRAINAGE",
      "EARTHING",
      "ELECTRICAL",
      "ELECTROACOUSTIC",
      "EXHAUST",
      "FIREPROTECTION",
      "FUEL",
      "GAS",
      "HAZARDOUS",
      "HEATING",
      "LIGHTING",
      "LIGHTNINGPROTECTION",
      "MUNICIPALSOLIDWASTE",
      "OIL",
      "OPERATIONAL",
      "POWERGENERATION",
      "RAINWATER",
      "REFRIGERATION",
      "SECURITY",
      "SEWAGE",
      "SIGNAL",
      "STORMWATER",
      "TELEPHONE",
      "TV",
      "VACUUM",
      "VENT",
      "VENTILATION",
      "WASTEWATER",
      "WATERSUPPLY",
      "USERDEFINED",
      "NOTDEFINED"
   };

   enum struct IfcDocumentConfidentialityEnum {
      PUBLIC,
      RESTRICTED,
      CONFIDENTIAL,
      PERSONAL,
      USERDEFINED,
      NOTDEFINED
   };

   const char * IfcDocumentConfidentialityEnumStringMap[] = {
      "PUBLIC",
      "RESTRICTED",
      "CONFIDENTIAL",
      "PERSONAL",
      "USERDEFINED",
      "NOTDEFINED"
   };

   enum struct IfcDocumentStatusEnum {
      DRAFT,
      FINALDRAFT,
      FINAL,
      REVISION,
      NOTDEFINED
   };

   const char * IfcDocumentStatusEnumStringMap[] = {
      "DRAFT",
      "FINALDRAFT",
      "FINAL",
      "REVISION",
      "NOTDEFINED"
   };

   enum struct IfcDoorPanelOperationEnum {
      SWINGING,
      DOUBLE_ACTING,
      SLIDING,
      FOLDING,
      REVOLVING,
      ROLLINGUP,
      FIXEDPANEL,
      USERDEFINED,
      NOTDEFINED
   };

   const char * IfcDoorPanelOperationEnumStringMap[] = {
      "SWINGING",
      "DOUBLE_ACTING",
      "SLIDING",
      "FOLDING",
      "REVOLVING",
      "ROLLINGUP",
      "FIXEDPANEL",
      "USERDEFINED",
      "NOTDEFINED"
   };

   enum struct IfcDoorPanelPositionEnum {
      LEFT,
      MIDDLE,
      RIGHT,
      NOTDEFINED
   };

   const char * IfcDoorPanelPositionEnumStringMap[] = {
      "LEFT",
      "MIDDLE",
      "RIGHT",
      "NOTDEFINED"
   };

   enum struct IfcDoorStyleConstructionEnum {
      ALUMINIUM,
      HIGH_GRADE_STEEL,
      STEEL,
      WOOD,
      ALUMINIUM_WOOD,
      ALUMINIUM_PLASTIC,
      PLASTIC,
      USERDEFINED,
      NOTDEFINED
   };

   const char * IfcDoorStyleConstructionEnumStringMap[] = {
      "ALUMINIUM",
      "HIGH_GRADE_STEEL",
      "STEEL",
      "WOOD",
      "ALUMINIUM_WOOD",
      "ALUMINIUM_PLASTIC",
      "PLASTIC",
      "USERDEFINED",
      "NOTDEFINED"
   };

   enum struct IfcDoorStyleOperationEnum {
      SINGLE_SWING_LEFT,
      SINGLE_SWING_RIGHT,
      DOUBLE_DOOR_SINGLE_SWING,
      DOUBLE_DOOR_SINGLE_SWING_OPPOSITE_LEFT,
      DOUBLE_DOOR_SINGLE_SWING_OPPOSITE_RIGHT,
      DOUBLE_SWING_LEFT,
      DOUBLE_SWING_RIGHT,
      DOUBLE_DOOR_DOUBLE_SWING,
      SLIDING_TO_LEFT,
      SLIDING_TO_RIGHT,
      DOUBLE_DOOR_SLIDING,
      FOLDING_TO_LEFT,
      FOLDING_TO_RIGHT,
      DOUBLE_DOOR_FOLDING,
      REVOLVING,
      ROLLINGUP,
      USERDEFINED,
      NOTDEFINED
   };

   const char * IfcDoorStyleOperationEnumStringMap[] = {
      "SINGLE_SWING_LEFT",
      "SINGLE_SWING_RIGHT",
      "DOUBLE_DOOR_SINGLE_SWING",
      "DOUBLE_DOOR_SINGLE_SWING_OPPOSITE_LEFT",
      "DOUBLE_DOOR_SINGLE_SWING_OPPOSITE_RIGHT",
      "DOUBLE_SWING_LEFT",
      "DOUBLE_SWING_RIGHT",
      "DOUBLE_DOOR_DOUBLE_SWING",
      "SLIDING_TO_LEFT",
      "SLIDING_TO_RIGHT",
      "DOUBLE_DOOR_SLIDING",
      "FOLDING_TO_LEFT",
      "FOLDING_TO_RIGHT",
      "DOUBLE_DOOR_FOLDING",
      "REVOLVING",
      "ROLLINGUP",
      "USERDEFINED",
      "NOTDEFINED"
   };

   enum struct IfcDoorTypeEnum {
      DOOR,
      GATE,
      TRAPDOOR,
      USERDEFINED,
      NOTDEFINED
   };

   const char * IfcDoorTypeEnumStringMap[] = {
      "DOOR",
      "GATE",
      "TRAPDOOR",
      "USERDEFINED",
      "NOTDEFINED"
   };

   enum struct IfcDoorTypeOperationEnum {
      SINGLE_SWING_LEFT,
      SINGLE_SWING_RIGHT,
      DOUBLE_DOOR_SINGLE_SWING,
      DOUBLE_DOOR_SINGLE_SWING_OPPOSITE_LEFT,
      DOUBLE_DOOR_SINGLE_SWING_OPPOSITE_RIGHT,
      DOUBLE_SWING_LEFT,
      DOUBLE_SWING_RIGHT,
      DOUBLE_DOOR_DOUBLE_SWING,
      SLIDING_TO_LEFT,
      SLIDING_TO_RIGHT,
      DOUBLE_DOOR_SLIDING,
      FOLDING_TO_LEFT,
      FOLDING_TO_RIGHT,
      DOUBLE_DOOR_FOLDING,
      REVOLVING,
      ROLLINGUP,
      SWING_FIXED_LEFT,
      SWING_FIXED_RIGHT,
      USERDEFINED,
      NOTDEFINED
   };

   const char * IfcDoorTypeOperationEnumStringMap[] = {
      "SINGLE_SWING_LEFT",
      "SINGLE_SWING_RIGHT",
      "DOUBLE_DOOR_SINGLE_SWING",
      "DOUBLE_DOOR_SINGLE_SWING_OPPOSITE_LEFT",
      "DOUBLE_DOOR_SINGLE_SWING_OPPOSITE_RIGHT",
      "DOUBLE_SWING_LEFT",
      "DOUBLE_SWING_RIGHT",
      "DOUBLE_DOOR_DOUBLE_SWING",
      "SLIDING_TO_LEFT",
      "SLIDING_TO_RIGHT",
      "DOUBLE_DOOR_SLIDING",
      "FOLDING_TO_LEFT",
      "FOLDING_TO_RIGHT",
      "DOUBLE_DOOR_FOLDING",
      "REVOLVING",
      "ROLLINGUP",
      "SWING_FIXED_LEFT",
      "SWING_FIXED_RIGHT",
      "USERDEFINED",
      "NOTDEFINED"
   };

   enum struct IfcDuctFittingTypeEnum {
      BEND,
      CONNECTOR,
      ENTRY,
      EXIT,
      JUNCTION,
      OBSTRUCTION,
      TRANSITION,
      USERDEFINED,
      NOTDEFINED
   };

   const char * IfcDuctFittingTypeEnumStringMap[] = {
      "BEND",
      "CONNECTOR",
      "ENTRY",
      "EXIT",
      "JUNCTION",
      "OBSTRUCTION",
      "TRANSITION",
      "USERDEFINED",
      "NOTDEFINED"
   };

   enum struct IfcDuctSegmentTypeEnum {
      RIGIDSEGMENT,
      FLEXIBLESEGMENT,
      USERDEFINED,
      NOTDEFINED
   };

   const char * IfcDuctSegmentTypeEnumStringMap[] = {
      "RIGIDSEGMENT",
      "FLEXIBLESEGMENT",
      "USERDEFINED",
      "NOTDEFINED"
   };

   enum struct IfcDuctSilencerTypeEnum {
      FLATOVAL,
      RECTANGULAR,
      ROUND,
      USERDEFINED,
      NOTDEFINED
   };

   const char * IfcDuctSilencerTypeEnumStringMap[] = {
      "FLATOVAL",
      "RECTANGULAR",
      "ROUND",
      "USERDEFINED",
      "NOTDEFINED"
   };

   enum struct IfcElectricApplianceTypeEnum {
      DISHWASHER,
      ELECTRICCOOKER,
      FREESTANDINGELECTRICHEATER,
      FREESTANDINGFAN,
      FREESTANDINGWATERHEATER,
      FREESTANDINGWATERCOOLER,
      FREEZER,
      FRIDGE_FREEZER,
      HANDDRYER,
      KITCHENMACHINE,
      MICROWAVE,
      PHOTOCOPIER,
      REFRIGERATOR,
      TUMBLEDRYER,
      VENDINGMACHINE,
      WASHINGMACHINE,
      USERDEFINED,
      NOTDEFINED
   };

   const char * IfcElectricApplianceTypeEnumStringMap[] = {
      "DISHWASHER",
      "ELECTRICCOOKER",
      "FREESTANDINGELECTRICHEATER",
      "FREESTANDINGFAN",
      "FREESTANDINGWATERHEATER",
      "FREESTANDINGWATERCOOLER",
      "FREEZER",
      "FRIDGE_FREEZER",
      "HANDDRYER",
      "KITCHENMACHINE",
      "MICROWAVE",
      "PHOTOCOPIER",
      "REFRIGERATOR",
      "TUMBLEDRYER",
      "VENDINGMACHINE",
      "WASHINGMACHINE",
      "USERDEFINED",
      "NOTDEFINED"
   };

   enum struct IfcElectricDistributionBoardTypeEnum {
      CONSUMERUNIT,
      DISTRIBUTIONBOARD,
      MOTORCONTROLCENTRE,
      SWITCHBOARD,
      USERDEFINED,
      NOTDEFINED
   };

   const char * IfcElectricDistributionBoardTypeEnumStringMap[] = {
      "CONSUMERUNIT",
      "DISTRIBUTIONBOARD",
      "MOTORCONTROLCENTRE",
      "SWITCHBOARD",
      "USERDEFINED",
      "NOTDEFINED"
   };

   enum struct IfcElectricFlowStorageDeviceTypeEnum {
      BATTERY,
      CAPACITORBANK,
      HARMONICFILTER,
      INDUCTORBANK,
      UPS,
      USERDEFINED,
      NOTDEFINED
   };

   const char * IfcElectricFlowStorageDeviceTypeEnumStringMap[] = {
      "BATTERY",
      "CAPACITORBANK",
      "HARMONICFILTER",
      "INDUCTORBANK",
      "UPS",
      "USERDEFINED",
      "NOTDEFINED"
   };

   enum struct IfcElectricGeneratorTypeEnum {
      CHP,
      ENGINEGENERATOR,
      STANDALONE,
      USERDEFINED,
      NOTDEFINED
   };

   const char * IfcElectricGeneratorTypeEnumStringMap[] = {
      "CHP",
      "ENGINEGENERATOR",
      "STANDALONE",
      "USERDEFINED",
      "NOTDEFINED"
   };

   enum struct IfcElectricMotorTypeEnum {
      DC,
      INDUCTION,
      POLYPHASE,
      RELUCTANCESYNCHRONOUS,
      SYNCHRONOUS,
      USERDEFINED,
      NOTDEFINED
   };

   const char * IfcElectricMotorTypeEnumStringMap[] = {
      "DC",
      "INDUCTION",
      "POLYPHASE",
      "RELUCTANCESYNCHRONOUS",
      "SYNCHRONOUS",
      "USERDEFINED",
      "NOTDEFINED"
   };

   enum struct IfcElectricTimeControlTypeEnum {
      TIMECLOCK,
      TIMEDELAY,
      RELAY,
      USERDEFINED,
      NOTDEFINED
   };

   const char * IfcElectricTimeControlTypeEnumStringMap[] = {
      "TIMECLOCK",
      "TIMEDELAY",
      "RELAY",
      "USERDEFINED",
      "NOTDEFINED"
   };

   enum struct IfcElementAssemblyTypeEnum {
      ACCESSORY_ASSEMBLY,
      ARCH,
      BEAM_GRID,
      BRACED_FRAME,
      GIRDER,
      REINFORCEMENT_UNIT,
      RIGID_FRAME,
      SLAB_FIELD,
      TRUSS,
      USERDEFINED,
      NOTDEFINED
   };

   const char * IfcElementAssemblyTypeEnumStringMap[] = {
      "ACCESSORY_ASSEMBLY",
      "ARCH",
      "BEAM_GRID",
      "BRACED_FRAME",
      "GIRDER",
      "REINFORCEMENT_UNIT",
      "RIGID_FRAME",
      "SLAB_FIELD",
      "TRUSS",
      "USERDEFINED",
      "NOTDEFINED"
   };

   enum struct IfcElementCompositionEnum {
      COMPLEX,
      ELEMENT,
      PARTIAL
   };

   const char * IfcElementCompositionEnumStringMap[] = {
      "COMPLEX",
      "ELEMENT",
      "PARTIAL"
   };

   enum struct IfcEngineTypeEnum {
      EXTERNALCOMBUSTION,
      INTERNALCOMBUSTION,
      USERDEFINED,
      NOTDEFINED
   };

   const char * IfcEngineTypeEnumStringMap[] = {
      "EXTERNALCOMBUSTION",
      "INTERNALCOMBUSTION",
      "USERDEFINED",
      "NOTDEFINED"
   };

   enum struct IfcEvaporativeCoolerTypeEnum {
      DIRECTEVAPORATIVERANDOMMEDIAAIRCOOLER,
      DIRECTEVAPORATIVERIGIDMEDIAAIRCOOLER,
      DIRECTEVAPORATIVESLINGERSPACKAGEDAIRCOOLER,
      DIRECTEVAPORATIVEPACKAGEDROTARYAIRCOOLER,
      DIRECTEVAPORATIVEAIRWASHER,
      INDIRECTEVAPORATIVEPACKAGEAIRCOOLER,
      INDIRECTEVAPORATIVEWETCOIL,
      INDIRECTEVAPORATIVECOOLINGTOWERORCOILCOOLER,
      INDIRECTDIRECTCOMBINATION,
      USERDEFINED,
      NOTDEFINED
   };

   const char * IfcEvaporativeCoolerTypeEnumStringMap[] = {
      "DIRECTEVAPORATIVERANDOMMEDIAAIRCOOLER",
      "DIRECTEVAPORATIVERIGIDMEDIAAIRCOOLER",
      "DIRECTEVAPORATIVESLINGERSPACKAGEDAIRCOOLER",
      "DIRECTEVAPORATIVEPACKAGEDROTARYAIRCOOLER",
      "DIRECTEVAPORATIVEAIRWASHER",
      "INDIRECTEVAPORATIVEPACKAGEAIRCOOLER",
      "INDIRECTEVAPORATIVEWETCOIL",
      "INDIRECTEVAPORATIVECOOLINGTOWERORCOILCOOLER",
      "INDIRECTDIRECTCOMBINATION",
      "USERDEFINED",
      "NOTDEFINED"
   };

   enum struct IfcEvaporatorTypeEnum {
      DIRECTEXPANSION,
      DIRECTEXPANSIONSHELLANDTUBE,
      DIRECTEXPANSIONTUBEINTUBE,
      DIRECTEXPANSIONBRAZEDPLATE,
      FLOODEDSHELLANDTUBE,
      SHELLANDCOIL,
      USERDEFINED,
      NOTDEFINED
   };

   const char * IfcEvaporatorTypeEnumStringMap[] = {
      "DIRECTEXPANSION",
      "DIRECTEXPANSIONSHELLANDTUBE",
      "DIRECTEXPANSIONTUBEINTUBE",
      "DIRECTEXPANSIONBRAZEDPLATE",
      "FLOODEDSHELLANDTUBE",
      "SHELLANDCOIL",
      "USERDEFINED",
      "NOTDEFINED"
   };

   enum struct IfcEventTriggerTypeEnum {
      EVENTRULE,
      EVENTMESSAGE,
      EVENTTIME,
      EVENTCOMPLEX,
      USERDEFINED,
      NOTDEFINED
   };

   const char * IfcEventTriggerTypeEnumStringMap[] = {
      "EVENTRULE",
      "EVENTMESSAGE",
      "EVENTTIME",
      "EVENTCOMPLEX",
      "USERDEFINED",
      "NOTDEFINED"
   };

   enum struct IfcEventTypeEnum {
      STARTEVENT,
      ENDEVENT,
      INTERMEDIATEEVENT,
      USERDEFINED,
      NOTDEFINED
   };

   const char * IfcEventTypeEnumStringMap[] = {
      "STARTEVENT",
      "ENDEVENT",
      "INTERMEDIATEEVENT",
      "USERDEFINED",
      "NOTDEFINED"
   };

   enum struct IfcExternalSpatialElementTypeEnum {
      EXTERNAL,
      EXTERNAL_EARTH,
      EXTERNAL_WATER,
      EXTERNAL_FIRE,
      USERDEFINED,
      NOTDEFINED
   };

   const char * IfcExternalSpatialElementTypeEnumStringMap[] = {
      "EXTERNAL",
      "EXTERNAL_EARTH",
      "EXTERNAL_WATER",
      "EXTERNAL_FIRE",
      "USERDEFINED",
      "NOTDEFINED"
   };

   enum struct IfcFanTypeEnum {
      CENTRIFUGALFORWARDCURVED,
      CENTRIFUGALRADIAL,
      CENTRIFUGALBACKWARDINCLINEDCURVED,
      CENTRIFUGALAIRFOIL,
      TUBEAXIAL,
      VANEAXIAL,
      PROPELLORAXIAL,
      USERDEFINED,
      NOTDEFINED
   };

   const char * IfcFanTypeEnumStringMap[] = {
      "CENTRIFUGALFORWARDCURVED",
      "CENTRIFUGALRADIAL",
      "CENTRIFUGALBACKWARDINCLINEDCURVED",
      "CENTRIFUGALAIRFOIL",
      "TUBEAXIAL",
      "VANEAXIAL",
      "PROPELLORAXIAL",
      "USERDEFINED",
      "NOTDEFINED"
   };

   enum struct IfcFastenerTypeEnum {
      GLUE,
      MORTAR,
      WELD,
      USERDEFINED,
      NOTDEFINED
   };

   const char * IfcFastenerTypeEnumStringMap[] = {
      "GLUE",
      "MORTAR",
      "WELD",
      "USERDEFINED",
      "NOTDEFINED"
   };

   enum struct IfcFilterTypeEnum {
      AIRPARTICLEFILTER,
      COMPRESSEDAIRFILTER,
      ODORFILTER,
      OILFILTER,
      STRAINER,
      WATERFILTER,
      USERDEFINED,
      NOTDEFINED
   };

   const char * IfcFilterTypeEnumStringMap[] = {
      "AIRPARTICLEFILTER",
      "COMPRESSEDAIRFILTER",
      "ODORFILTER",
      "OILFILTER",
      "STRAINER",
      "WATERFILTER",
      "USERDEFINED",
      "NOTDEFINED"
   };

   enum struct IfcFireSuppressionTerminalTypeEnum {
      BREECHINGINLET,
      FIREHYDRANT,
      HOSEREEL,
      SPRINKLER,
      SPRINKLERDEFLECTOR,
      USERDEFINED,
      NOTDEFINED
   };

   const char * IfcFireSuppressionTerminalTypeEnumStringMap[] = {
      "BREECHINGINLET",
      "FIREHYDRANT",
      "HOSEREEL",
      "SPRINKLER",
      "SPRINKLERDEFLECTOR",
      "USERDEFINED",
      "NOTDEFINED"
   };

   enum struct IfcFlowDirectionEnum {
      SOURCE,
      SINK,
      SOURCEANDSINK,
      NOTDEFINED
   };

   const char * IfcFlowDirectionEnumStringMap[] = {
      "SOURCE",
      "SINK",
      "SOURCEANDSINK",
      "NOTDEFINED"
   };

   enum struct IfcFlowInstrumentTypeEnum {
      PRESSUREGAUGE,
      THERMOMETER,
      AMMETER,
      FREQUENCYMETER,
      POWERFACTORMETER,
      PHASEANGLEMETER,
      VOLTMETER_PEAK,
      VOLTMETER_RMS,
      USERDEFINED,
      NOTDEFINED
   };

   const char * IfcFlowInstrumentTypeEnumStringMap[] = {
      "PRESSUREGAUGE",
      "THERMOMETER",
      "AMMETER",
      "FREQUENCYMETER",
      "POWERFACTORMETER",
      "PHASEANGLEMETER",
      "VOLTMETER_PEAK",
      "VOLTMETER_RMS",
      "USERDEFINED",
      "NOTDEFINED"
   };

   enum struct IfcFlowMeterTypeEnum {
      ENERGYMETER,
      GASMETER,
      OILMETER,
      WATERMETER,
      USERDEFINED,
      NOTDEFINED
   };

   const char * IfcFlowMeterTypeEnumStringMap[] = {
      "ENERGYMETER",
      "GASMETER",
      "OILMETER",
      "WATERMETER",
      "USERDEFINED",
      "NOTDEFINED"
   };

   enum struct IfcFootingTypeEnum {
      CAISSON_FOUNDATION,
      FOOTING_BEAM,
      PAD_FOOTING,
      PILE_CAP,
      STRIP_FOOTING,
      USERDEFINED,
      NOTDEFINED
   };

   const char * IfcFootingTypeEnumStringMap[] = {
      "CAISSON_FOUNDATION",
      "FOOTING_BEAM",
      "PAD_FOOTING",
      "PILE_CAP",
      "STRIP_FOOTING",
      "USERDEFINED",
      "NOTDEFINED"
   };

   enum struct IfcFurnitureTypeEnum {
      CHAIR,
      TABLE,
      DESK,
      BED,
      FILECABINET,
      SHELF,
      SOFA,
      USERDEFINED,
      NOTDEFINED
   };

   const char * IfcFurnitureTypeEnumStringMap[] = {
      "CHAIR",
      "TABLE",
      "DESK",
      "BED",
      "FILECABINET",
      "SHELF",
      "SOFA",
      "USERDEFINED",
      "NOTDEFINED"
   };

   enum struct IfcGeographicElementTypeEnum {
      TERRAIN,
      USERDEFINED,
      NOTDEFINED
   };

   const char * IfcGeographicElementTypeEnumStringMap[] = {
      "TERRAIN",
      "USERDEFINED",
      "NOTDEFINED"
   };

   enum struct IfcGeometricProjectionEnum {
      GRAPH_VIEW,
      SKETCH_VIEW,
      MODEL_VIEW,
      PLAN_VIEW,
      REFLECTED_PLAN_VIEW,
      SECTION_VIEW,
      ELEVATION_VIEW,
      USERDEFINED,
      NOTDEFINED
   };

   const char * IfcGeometricProjectionEnumStringMap[] = {
      "GRAPH_VIEW",
      "SKETCH_VIEW",
      "MODEL_VIEW",
      "PLAN_VIEW",
      "REFLECTED_PLAN_VIEW",
      "SECTION_VIEW",
      "ELEVATION_VIEW",
      "USERDEFINED",
      "NOTDEFINED"
   };

   enum struct IfcGlobalOrLocalEnum {
      GLOBAL_COORDS,
      LOCAL_COORDS
   };

   const char * IfcGlobalOrLocalEnumStringMap[] = {
      "GLOBAL_COORDS",
      "LOCAL_COORDS"
   };

   enum struct IfcGridTypeEnum {
      RECTANGULAR,
      RADIAL,
      TRIANGULAR,
      IRREGULAR,
      USERDEFINED,
      NOTDEFINED
   };

   const char * IfcGridTypeEnumStringMap[] = {
      "RECTANGULAR",
      "RADIAL",
      "TRIANGULAR",
      "IRREGULAR",
      "USERDEFINED",
      "NOTDEFINED"
   };

   enum struct IfcHeatExchangerTypeEnum {
      PLATE,
      SHELLANDTUBE,
      USERDEFINED,
      NOTDEFINED
   };

   const char * IfcHeatExchangerTypeEnumStringMap[] = {
      "PLATE",
      "SHELLANDTUBE",
      "USERDEFINED",
      "NOTDEFINED"
   };

   enum struct IfcHumidifierTypeEnum {
      STEAMINJECTION,
      ADIABATICAIRWASHER,
      ADIABATICPAN,
      ADIABATICWETTEDELEMENT,
      ADIABATICATOMIZING,
      ADIABATICULTRASONIC,
      ADIABATICRIGIDMEDIA,
      ADIABATICCOMPRESSEDAIRNOZZLE,
      ASSISTEDELECTRIC,
      ASSISTEDNATURALGAS,
      ASSISTEDPROPANE,
      ASSISTEDBUTANE,
      ASSISTEDSTEAM,
      USERDEFINED,
      NOTDEFINED
   };

   const char * IfcHumidifierTypeEnumStringMap[] = {
      "STEAMINJECTION",
      "ADIABATICAIRWASHER",
      "ADIABATICPAN",
      "ADIABATICWETTEDELEMENT",
      "ADIABATICATOMIZING",
      "ADIABATICULTRASONIC",
      "ADIABATICRIGIDMEDIA",
      "ADIABATICCOMPRESSEDAIRNOZZLE",
      "ASSISTEDELECTRIC",
      "ASSISTEDNATURALGAS",
      "ASSISTEDPROPANE",
      "ASSISTEDBUTANE",
      "ASSISTEDSTEAM",
      "USERDEFINED",
      "NOTDEFINED"
   };

   enum struct IfcInterceptorTypeEnum {
      CYCLONIC,
      GREASE,
      OIL,
      PETROL,
      USERDEFINED,
      NOTDEFINED
   };

   const char * IfcInterceptorTypeEnumStringMap[] = {
      "CYCLONIC",
      "GREASE",
      "OIL",
      "PETROL",
      "USERDEFINED",
      "NOTDEFINED"
   };

   enum struct IfcInternalOrExternalEnum {
      INTERNAL,
      EXTERNAL,
      EXTERNAL_EARTH,
      EXTERNAL_WATER,
      EXTERNAL_FIRE,
      NOTDEFINED
   };

   const char * IfcInternalOrExternalEnumStringMap[] = {
      "INTERNAL",
      "EXTERNAL",
      "EXTERNAL_EARTH",
      "EXTERNAL_WATER",
      "EXTERNAL_FIRE",
      "NOTDEFINED"
   };

   enum struct IfcInventoryTypeEnum {
      ASSETINVENTORY,
      SPACEINVENTORY,
      FURNITUREINVENTORY,
      USERDEFINED,
      NOTDEFINED
   };

   const char * IfcInventoryTypeEnumStringMap[] = {
      "ASSETINVENTORY",
      "SPACEINVENTORY",
      "FURNITUREINVENTORY",
      "USERDEFINED",
      "NOTDEFINED"
   };

   enum struct IfcJunctionBoxTypeEnum {
      DATA,
      POWER,
      USERDEFINED,
      NOTDEFINED
   };

   const char * IfcJunctionBoxTypeEnumStringMap[] = {
      "DATA",
      "POWER",
      "USERDEFINED",
      "NOTDEFINED"
   };

   enum struct IfcKnotType {
      UNIFORM_KNOTS,
      QUASI_UNIFORM_KNOTS,
      PIECEWISE_BEZIER_KNOTS,
      UNSPECIFIED
   };

   const char * IfcKnotTypeStringMap[] = {
      "UNIFORM_KNOTS",
      "QUASI_UNIFORM_KNOTS",
      "PIECEWISE_BEZIER_KNOTS",
      "UNSPECIFIED"
   };

   enum struct IfcLaborResourceTypeEnum {
      ADMINISTRATION,
      CARPENTRY,
      CLEANING,
      CONCRETE,
      DRYWALL,
      ELECTRIC,
      FINISHING,
      FLOORING,
      GENERAL,
      HVAC,
      LANDSCAPING,
      MASONRY,
      PAINTING,
      PAVING,
      PLUMBING,
      ROOFING,
      SITEGRADING,
      STEELWORK,
      SURVEYING,
      USERDEFINED,
      NOTDEFINED
   };

   const char * IfcLaborResourceTypeEnumStringMap[] = {
      "ADMINISTRATION",
      "CARPENTRY",
      "CLEANING",
      "CONCRETE",
      "DRYWALL",
      "ELECTRIC",
      "FINISHING",
      "FLOORING",
      "GENERAL",
      "HVAC",
      "LANDSCAPING",
      "MASONRY",
      "PAINTING",
      "PAVING",
      "PLUMBING",
      "ROOFING",
      "SITEGRADING",
      "STEELWORK",
      "SURVEYING",
      "USERDEFINED",
      "NOTDEFINED"
   };

   enum struct IfcLampTypeEnum {
      COMPACTFLUORESCENT,
      FLUORESCENT,
      HALOGEN,
      HIGHPRESSUREMERCURY,
      HIGHPRESSURESODIUM,
      LED,
      METALHALIDE,
      OLED,
      TUNGSTENFILAMENT,
      USERDEFINED,
      NOTDEFINED
   };

   const char * IfcLampTypeEnumStringMap[] = {
      "COMPACTFLUORESCENT",
      "FLUORESCENT",
      "HALOGEN",
      "HIGHPRESSUREMERCURY",
      "HIGHPRESSURESODIUM",
      "LED",
      "METALHALIDE",
      "OLED",
      "TUNGSTENFILAMENT",
      "USERDEFINED",
      "NOTDEFINED"
   };

   enum struct IfcLayerSetDirectionEnum {
      AXIS1,
      AXIS2,
      AXIS3
   };

   const char * IfcLayerSetDirectionEnumStringMap[] = {
      "AXIS1",
      "AXIS2",
      "AXIS3"
   };

   enum struct IfcLightDistributionCurveEnum {
      TYPE_A,
      TYPE_B,
      TYPE_C,
      NOTDEFINED
   };

   const char * IfcLightDistributionCurveEnumStringMap[] = {
      "TYPE_A",
      "TYPE_B",
      "TYPE_C",
      "NOTDEFINED"
   };

   enum struct IfcLightEmissionSourceEnum {
      COMPACTFLUORESCENT,
      FLUORESCENT,
      HIGHPRESSUREMERCURY,
      HIGHPRESSURESODIUM,
      LIGHTEMITTINGDIODE,
      LOWPRESSURESODIUM,
      LOWVOLTAGEHALOGEN,
      MAINVOLTAGEHALOGEN,
      METALHALIDE,
      TUNGSTENFILAMENT,
      NOTDEFINED
   };

   const char * IfcLightEmissionSourceEnumStringMap[] = {
      "COMPACTFLUORESCENT",
      "FLUORESCENT",
      "HIGHPRESSUREMERCURY",
      "HIGHPRESSURESODIUM",
      "LIGHTEMITTINGDIODE",
      "LOWPRESSURESODIUM",
      "LOWVOLTAGEHALOGEN",
      "MAINVOLTAGEHALOGEN",
      "METALHALIDE",
      "TUNGSTENFILAMENT",
      "NOTDEFINED"
   };

   enum struct IfcLightFixtureTypeEnum {
      POINTSOURCE,
      DIRECTIONSOURCE,
      SECURITYLIGHTING,
      USERDEFINED,
      NOTDEFINED
   };

   const char * IfcLightFixtureTypeEnumStringMap[] = {
      "POINTSOURCE",
      "DIRECTIONSOURCE",
      "SECURITYLIGHTING",
      "USERDEFINED",
      "NOTDEFINED"
   };

   enum struct IfcLoadGroupTypeEnum {
      LOAD_GROUP,
      LOAD_CASE,
      LOAD_COMBINATION,
      USERDEFINED,
      NOTDEFINED
   };

   const char * IfcLoadGroupTypeEnumStringMap[] = {
      "LOAD_GROUP",
      "LOAD_CASE",
      "LOAD_COMBINATION",
      "USERDEFINED",
      "NOTDEFINED"
   };

   enum struct IfcLogicalOperatorEnum {
      LOGICALAND,
      LOGICALOR,
      LOGICALXOR,
      LOGICALNOTAND,
      LOGICALNOTOR
   };

   const char * IfcLogicalOperatorEnumStringMap[] = {
      "LOGICALAND",
      "LOGICALOR",
      "LOGICALXOR",
      "LOGICALNOTAND",
      "LOGICALNOTOR"
   };

   enum struct IfcMechanicalFastenerTypeEnum {
      ANCHORBOLT,
      BOLT,
      DOWEL,
      NAIL,
      NAILPLATE,
      RIVET,
      SCREW,
      SHEARCONNECTOR,
      STAPLE,
      STUDSHEARCONNECTOR,
      USERDEFINED,
      NOTDEFINED
   };

   const char * IfcMechanicalFastenerTypeEnumStringMap[] = {
      "ANCHORBOLT",
      "BOLT",
      "DOWEL",
      "NAIL",
      "NAILPLATE",
      "RIVET",
      "SCREW",
      "SHEARCONNECTOR",
      "STAPLE",
      "STUDSHEARCONNECTOR",
      "USERDEFINED",
      "NOTDEFINED"
   };

   enum struct IfcMedicalDeviceTypeEnum {
      AIRSTATION,
      FEEDAIRUNIT,
      OXYGENGENERATOR,
      OXYGENPLANT,
      VACUUMSTATION,
      USERDEFINED,
      NOTDEFINED
   };

   const char * IfcMedicalDeviceTypeEnumStringMap[] = {
      "AIRSTATION",
      "FEEDAIRUNIT",
      "OXYGENGENERATOR",
      "OXYGENPLANT",
      "VACUUMSTATION",
      "USERDEFINED",
      "NOTDEFINED"
   };

   enum struct IfcMemberTypeEnum {
      BRACE,
      CHORD,
      COLLAR,
      MEMBER,
      MULLION,
      PLATE,
      POST,
      PURLIN,
      RAFTER,
      STRINGER,
      STRUT,
      STUD,
      USERDEFINED,
      NOTDEFINED
   };

   const char * IfcMemberTypeEnumStringMap[] = {
      "BRACE",
      "CHORD",
      "COLLAR",
      "MEMBER",
      "MULLION",
      "PLATE",
      "POST",
      "PURLIN",
      "RAFTER",
      "STRINGER",
      "STRUT",
      "STUD",
      "USERDEFINED",
      "NOTDEFINED"
   };

   enum struct IfcMotorConnectionTypeEnum {
      BELTDRIVE,
      COUPLING,
      DIRECTDRIVE,
      USERDEFINED,
      NOTDEFINED
   };

   const char * IfcMotorConnectionTypeEnumStringMap[] = {
      "BELTDRIVE",
      "COUPLING",
      "DIRECTDRIVE",
      "USERDEFINED",
      "NOTDEFINED"
   };

   enum struct IfcNullStyle {
      NULLTYPE
   };

   const char * IfcNullStyleStringMap[] = {
      "NULLTYPE"
   };

   enum struct IfcObjectTypeEnum {
      PRODUCT,
      PROCESS,
      CONTROL,
      RESOURCE,
      ACTOR,
      GROUP,
      PROJECT,
      NOTDEFINED
   };

   const char * IfcObjectTypeEnumStringMap[] = {
      "PRODUCT",
      "PROCESS",
      "CONTROL",
      "RESOURCE",
      "ACTOR",
      "GROUP",
      "PROJECT",
      "NOTDEFINED"
   };

   enum struct IfcObjectiveEnum {
      CODECOMPLIANCE,
      CODEWAIVER,
      DESIGNINTENT,
      EXTERNAL,
      HEALTHANDSAFETY,
      MERGECONFLICT,
      MODELVIEW,
      PARAMETER,
      REQUIREMENT,
      SPECIFICATION,
      TRIGGERCONDITION,
      USERDEFINED,
      NOTDEFINED
   };

   const char * IfcObjectiveEnumStringMap[] = {
      "CODECOMPLIANCE",
      "CODEWAIVER",
      "DESIGNINTENT",
      "EXTERNAL",
      "HEALTHANDSAFETY",
      "MERGECONFLICT",
      "MODELVIEW",
      "PARAMETER",
      "REQUIREMENT",
      "SPECIFICATION",
      "TRIGGERCONDITION",
      "USERDEFINED",
      "NOTDEFINED"
   };

   enum struct IfcOccupantTypeEnum {
      ASSIGNEE,
      ASSIGNOR,
      LESSEE,
      LESSOR,
      LETTINGAGENT,
      OWNER,
      TENANT,
      USERDEFINED,
      NOTDEFINED
   };

   const char * IfcOccupantTypeEnumStringMap[] = {
      "ASSIGNEE",
      "ASSIGNOR",
      "LESSEE",
      "LESSOR",
      "LETTINGAGENT",
      "OWNER",
      "TENANT",
      "USERDEFINED",
      "NOTDEFINED"
   };

   enum struct IfcOpeningElementTypeEnum {
      OPENING,
      RECESS,
      USERDEFINED,
      NOTDEFINED
   };

   const char * IfcOpeningElementTypeEnumStringMap[] = {
      "OPENING",
      "RECESS",
      "USERDEFINED",
      "NOTDEFINED"
   };

   enum struct IfcOutletTypeEnum {
      AUDIOVISUALOUTLET,
      COMMUNICATIONSOUTLET,
      POWEROUTLET,
      DATAOUTLET,
      TELEPHONEOUTLET,
      USERDEFINED,
      NOTDEFINED
   };

   const char * IfcOutletTypeEnumStringMap[] = {
      "AUDIOVISUALOUTLET",
      "COMMUNICATIONSOUTLET",
      "POWEROUTLET",
      "DATAOUTLET",
      "TELEPHONEOUTLET",
      "USERDEFINED",
      "NOTDEFINED"
   };

   enum struct IfcPerformanceHistoryTypeEnum {
      USERDEFINED,
      NOTDEFINED
   };

   const char * IfcPerformanceHistoryTypeEnumStringMap[] = {
      "USERDEFINED",
      "NOTDEFINED"
   };

   enum struct IfcPermeableCoveringOperationEnum {
      GRILL,
      LOUVER,
      SCREEN,
      USERDEFINED,
      NOTDEFINED
   };

   const char * IfcPermeableCoveringOperationEnumStringMap[] = {
      "GRILL",
      "LOUVER",
      "SCREEN",
      "USERDEFINED",
      "NOTDEFINED"
   };

   enum struct IfcPermitTypeEnum {
      ACCESS,
      BUILDING,
      WORK,
      USERDEFINED,
      NOTDEFINED
   };

   const char * IfcPermitTypeEnumStringMap[] = {
      "ACCESS",
      "BUILDING",
      "WORK",
      "USERDEFINED",
      "NOTDEFINED"
   };

   enum struct IfcPhysicalOrVirtualEnum {
      PHYSICAL,
      VIRTUAL,
      NOTDEFINED
   };

   const char * IfcPhysicalOrVirtualEnumStringMap[] = {
      "PHYSICAL",
      "VIRTUAL",
      "NOTDEFINED"
   };

   enum struct IfcPileConstructionEnum {
      CAST_IN_PLACE,
      COMPOSITE,
      PRECAST_CONCRETE,
      PREFAB_STEEL,
      USERDEFINED,
      NOTDEFINED
   };

   const char * IfcPileConstructionEnumStringMap[] = {
      "CAST_IN_PLACE",
      "COMPOSITE",
      "PRECAST_CONCRETE",
      "PREFAB_STEEL",
      "USERDEFINED",
      "NOTDEFINED"
   };

   enum struct IfcPileTypeEnum {
      BORED,
      DRIVEN,
      JETGROUTING,
      COHESION,
      FRICTION,
      SUPPORT,
      USERDEFINED,
      NOTDEFINED
   };

   const char * IfcPileTypeEnumStringMap[] = {
      "BORED",
      "DRIVEN",
      "JETGROUTING",
      "COHESION",
      "FRICTION",
      "SUPPORT",
      "USERDEFINED",
      "NOTDEFINED"
   };

   enum struct IfcPipeFittingTypeEnum {
      BEND,
      CONNECTOR,
      ENTRY,
      EXIT,
      JUNCTION,
      OBSTRUCTION,
      TRANSITION,
      USERDEFINED,
      NOTDEFINED
   };

   const char * IfcPipeFittingTypeEnumStringMap[] = {
      "BEND",
      "CONNECTOR",
      "ENTRY",
      "EXIT",
      "JUNCTION",
      "OBSTRUCTION",
      "TRANSITION",
      "USERDEFINED",
      "NOTDEFINED"
   };

   enum struct IfcPipeSegmentTypeEnum {
      CULVERT,
      FLEXIBLESEGMENT,
      RIGIDSEGMENT,
      GUTTER,
      SPOOL,
      USERDEFINED,
      NOTDEFINED
   };

   const char * IfcPipeSegmentTypeEnumStringMap[] = {
      "CULVERT",
      "FLEXIBLESEGMENT",
      "RIGIDSEGMENT",
      "GUTTER",
      "SPOOL",
      "USERDEFINED",
      "NOTDEFINED"
   };

   enum struct IfcPlateTypeEnum {
      CURTAIN_PANEL,
      SHEET,
      USERDEFINED,
      NOTDEFINED
   };

   const char * IfcPlateTypeEnumStringMap[] = {
      "CURTAIN_PANEL",
      "SHEET",
      "USERDEFINED",
      "NOTDEFINED"
   };

   enum struct IfcPreferredSurfaceCurveRepresentation {
      CURVE3D,
      PCURVE_S1,
      PCURVE_S2
   };

   const char * IfcPreferredSurfaceCurveRepresentationStringMap[] = {
      "CURVE3D",
      "PCURVE_S1",
      "PCURVE_S2"
   };

   enum struct IfcProcedureTypeEnum {
      ADVICE_CAUTION,
      ADVICE_NOTE,
      ADVICE_WARNING,
      CALIBRATION,
      DIAGNOSTIC,
      SHUTDOWN,
      STARTUP,
      USERDEFINED,
      NOTDEFINED
   };

   const char * IfcProcedureTypeEnumStringMap[] = {
      "ADVICE_CAUTION",
      "ADVICE_NOTE",
      "ADVICE_WARNING",
      "CALIBRATION",
      "DIAGNOSTIC",
      "SHUTDOWN",
      "STARTUP",
      "USERDEFINED",
      "NOTDEFINED"
   };

   enum struct IfcProfileTypeEnum {
      CURVE,
      AREA
   };

   const char * IfcProfileTypeEnumStringMap[] = {
      "CURVE",
      "AREA"
   };

   enum struct IfcProjectOrderTypeEnum {
      CHANGEORDER,
      MAINTENANCEWORKORDER,
      MOVEORDER,
      PURCHASEORDER,
      WORKORDER,
      USERDEFINED,
      NOTDEFINED
   };

   const char * IfcProjectOrderTypeEnumStringMap[] = {
      "CHANGEORDER",
      "MAINTENANCEWORKORDER",
      "MOVEORDER",
      "PURCHASEORDER",
      "WORKORDER",
      "USERDEFINED",
      "NOTDEFINED"
   };

   enum struct IfcProjectedOrTrueLengthEnum {
      PROJECTED_LENGTH,
      TRUE_LENGTH
   };

   const char * IfcProjectedOrTrueLengthEnumStringMap[] = {
      "PROJECTED_LENGTH",
      "TRUE_LENGTH"
   };

   enum struct IfcProjectionElementTypeEnum {
      USERDEFINED,
      NOTDEFINED
   };

   const char * IfcProjectionElementTypeEnumStringMap[] = {
      "USERDEFINED",
      "NOTDEFINED"
   };

   enum struct IfcPropertySetTemplateTypeEnum {
      PSET_TYPEDRIVENONLY,
      PSET_TYPEDRIVENOVERRIDE,
      PSET_OCCURRENCEDRIVEN,
      PSET_PERFORMANCEDRIVEN,
      QTO_TYPEDRIVENONLY,
      QTO_TYPEDRIVENOVERRIDE,
      QTO_OCCURRENCEDRIVEN,
      NOTDEFINED
   };

   const char * IfcPropertySetTemplateTypeEnumStringMap[] = {
      "PSET_TYPEDRIVENONLY",
      "PSET_TYPEDRIVENOVERRIDE",
      "PSET_OCCURRENCEDRIVEN",
      "PSET_PERFORMANCEDRIVEN",
      "QTO_TYPEDRIVENONLY",
      "QTO_TYPEDRIVENOVERRIDE",
      "QTO_OCCURRENCEDRIVEN",
      "NOTDEFINED"
   };

   enum struct IfcProtectiveDeviceTrippingUnitTypeEnum {
      ELECTRONIC,
      ELECTROMAGNETIC,
      RESIDUALCURRENT,
      THERMAL,
      USERDEFINED,
      NOTDEFINED
   };

   const char * IfcProtectiveDeviceTrippingUnitTypeEnumStringMap[] = {
      "ELECTRONIC",
      "ELECTROMAGNETIC",
      "RESIDUALCURRENT",
      "THERMAL",
      "USERDEFINED",
      "NOTDEFINED"
   };

   enum struct IfcProtectiveDeviceTypeEnum {
      CIRCUITBREAKER,
      EARTHLEAKAGECIRCUITBREAKER,
      EARTHINGSWITCH,
      FUSEDISCONNECTOR,
      RESIDUALCURRENTCIRCUITBREAKER,
      RESIDUALCURRENTSWITCH,
      VARISTOR,
      USERDEFINED,
      NOTDEFINED
   };

   const char * IfcProtectiveDeviceTypeEnumStringMap[] = {
      "CIRCUITBREAKER",
      "EARTHLEAKAGECIRCUITBREAKER",
      "EARTHINGSWITCH",
      "FUSEDISCONNECTOR",
      "RESIDUALCURRENTCIRCUITBREAKER",
      "RESIDUALCURRENTSWITCH",
      "VARISTOR",
      "USERDEFINED",
      "NOTDEFINED"
   };

   enum struct IfcPumpTypeEnum {
      CIRCULATOR,
      ENDSUCTION,
      SPLITCASE,
      SUBMERSIBLEPUMP,
      SUMPPUMP,
      VERTICALINLINE,
      VERTICALTURBINE,
      USERDEFINED,
      NOTDEFINED
   };

   const char * IfcPumpTypeEnumStringMap[] = {
      "CIRCULATOR",
      "ENDSUCTION",
      "SPLITCASE",
      "SUBMERSIBLEPUMP",
      "SUMPPUMP",
      "VERTICALINLINE",
      "VERTICALTURBINE",
      "USERDEFINED",
      "NOTDEFINED"
   };

   enum struct IfcRailingTypeEnum {
      HANDRAIL,
      GUARDRAIL,
      BALUSTRADE,
      USERDEFINED,
      NOTDEFINED
   };

   const char * IfcRailingTypeEnumStringMap[] = {
      "HANDRAIL",
      "GUARDRAIL",
      "BALUSTRADE",
      "USERDEFINED",
      "NOTDEFINED"
   };

   enum struct IfcRampFlightTypeEnum {
      STRAIGHT,
      SPIRAL,
      USERDEFINED,
      NOTDEFINED
   };

   const char * IfcRampFlightTypeEnumStringMap[] = {
      "STRAIGHT",
      "SPIRAL",
      "USERDEFINED",
      "NOTDEFINED"
   };

   enum struct IfcRampTypeEnum {
      STRAIGHT_RUN_RAMP,
      TWO_STRAIGHT_RUN_RAMP,
      QUARTER_TURN_RAMP,
      TWO_QUARTER_TURN_RAMP,
      HALF_TURN_RAMP,
      SPIRAL_RAMP,
      USERDEFINED,
      NOTDEFINED
   };

   const char * IfcRampTypeEnumStringMap[] = {
      "STRAIGHT_RUN_RAMP",
      "TWO_STRAIGHT_RUN_RAMP",
      "QUARTER_TURN_RAMP",
      "TWO_QUARTER_TURN_RAMP",
      "HALF_TURN_RAMP",
      "SPIRAL_RAMP",
      "USERDEFINED",
      "NOTDEFINED"
   };

   enum struct IfcRecurrenceTypeEnum {
      DAILY,
      WEEKLY,
      MONTHLY_BY_DAY_OF_MONTH,
      MONTHLY_BY_POSITION,
      BY_DAY_COUNT,
      BY_WEEKDAY_COUNT,
      YEARLY_BY_DAY_OF_MONTH,
      YEARLY_BY_POSITION
   };

   const char * IfcRecurrenceTypeEnumStringMap[] = {
      "DAILY",
      "WEEKLY",
      "MONTHLY_BY_DAY_OF_MONTH",
      "MONTHLY_BY_POSITION",
      "BY_DAY_COUNT",
      "BY_WEEKDAY_COUNT",
      "YEARLY_BY_DAY_OF_MONTH",
      "YEARLY_BY_POSITION"
   };

   enum struct IfcReflectanceMethodEnum {
      BLINN,
      FLAT,
      GLASS,
      MATT,
      METAL,
      MIRROR,
      PHONG,
      PLASTIC,
      STRAUSS,
      NOTDEFINED
   };

   const char * IfcReflectanceMethodEnumStringMap[] = {
      "BLINN",
      "FLAT",
      "GLASS",
      "MATT",
      "METAL",
      "MIRROR",
      "PHONG",
      "PLASTIC",
      "STRAUSS",
      "NOTDEFINED"
   };

   enum struct IfcReinforcingBarRoleEnum {
      MAIN,
      SHEAR,
      LIGATURE,
      STUD,
      PUNCHING,
      EDGE,
      RING,
      ANCHORING,
      USERDEFINED,
      NOTDEFINED
   };

   const char * IfcReinforcingBarRoleEnumStringMap[] = {
      "MAIN",
      "SHEAR",
      "LIGATURE",
      "STUD",
      "PUNCHING",
      "EDGE",
      "RING",
      "ANCHORING",
      "USERDEFINED",
      "NOTDEFINED"
   };

   enum struct IfcReinforcingBarSurfaceEnum {
      PLAIN,
      TEXTURED
   };

   const char * IfcReinforcingBarSurfaceEnumStringMap[] = {
      "PLAIN",
      "TEXTURED"
   };

   enum struct IfcReinforcingBarTypeEnum {
      ANCHORING,
      EDGE,
      LIGATURE,
      MAIN,
      PUNCHING,
      RING,
      SHEAR,
      STUD,
      USERDEFINED,
      NOTDEFINED
   };

   const char * IfcReinforcingBarTypeEnumStringMap[] = {
      "ANCHORING",
      "EDGE",
      "LIGATURE",
      "MAIN",
      "PUNCHING",
      "RING",
      "SHEAR",
      "STUD",
      "USERDEFINED",
      "NOTDEFINED"
   };

   enum struct IfcReinforcingMeshTypeEnum {
      USERDEFINED,
      NOTDEFINED
   };

   const char * IfcReinforcingMeshTypeEnumStringMap[] = {
      "USERDEFINED",
      "NOTDEFINED"
   };

   enum struct IfcRoleEnum {
      SUPPLIER,
      MANUFACTURER,
      CONTRACTOR,
      SUBCONTRACTOR,
      ARCHITECT,
      STRUCTURALENGINEER,
      COSTENGINEER,
      CLIENT,
      BUILDINGOWNER,
      BUILDINGOPERATOR,
      MECHANICALENGINEER,
      ELECTRICALENGINEER,
      PROJECTMANAGER,
      FACILITIESMANAGER,
      CIVILENGINEER,
      COMMISSIONINGENGINEER,
      ENGINEER,
      OWNER,
      CONSULTANT,
      CONSTRUCTIONMANAGER,
      FIELDCONSTRUCTIONMANAGER,
      RESELLER,
      USERDEFINED
   };

   const char * IfcRoleEnumStringMap[] = {
      "SUPPLIER",
      "MANUFACTURER",
      "CONTRACTOR",
      "SUBCONTRACTOR",
      "ARCHITECT",
      "STRUCTURALENGINEER",
      "COSTENGINEER",
      "CLIENT",
      "BUILDINGOWNER",
      "BUILDINGOPERATOR",
      "MECHANICALENGINEER",
      "ELECTRICALENGINEER",
      "PROJECTMANAGER",
      "FACILITIESMANAGER",
      "CIVILENGINEER",
      "COMMISSIONINGENGINEER",
      "ENGINEER",
      "OWNER",
      "CONSULTANT",
      "CONSTRUCTIONMANAGER",
      "FIELDCONSTRUCTIONMANAGER",
      "RESELLER",
      "USERDEFINED"
   };

   enum struct IfcRoofTypeEnum {
      FLAT_ROOF,
      SHED_ROOF,
      GABLE_ROOF,
      HIP_ROOF,
      HIPPED_GABLE_ROOF,
      GAMBREL_ROOF,
      MANSARD_ROOF,
      BARREL_ROOF,
      RAINBOW_ROOF,
      BUTTERFLY_ROOF,
      PAVILION_ROOF,
      DOME_ROOF,
      FREEFORM,
      USERDEFINED,
      NOTDEFINED
   };

   const char * IfcRoofTypeEnumStringMap[] = {
      "FLAT_ROOF",
      "SHED_ROOF",
      "GABLE_ROOF",
      "HIP_ROOF",
      "HIPPED_GABLE_ROOF",
      "GAMBREL_ROOF",
      "MANSARD_ROOF",
      "BARREL_ROOF",
      "RAINBOW_ROOF",
      "BUTTERFLY_ROOF",
      "PAVILION_ROOF",
      "DOME_ROOF",
      "FREEFORM",
      "USERDEFINED",
      "NOTDEFINED"
   };

   enum struct IfcSIPrefix {
      EXA,
      PETA,
      TERA,
      GIGA,
      MEGA,
      KILO,
      HECTO,
      DECA,
      DECI,
      CENTI,
      MILLI,
      MICRO,
      NANO,
      PICO,
      FEMTO,
      ATTO
   };

   const char * IfcSIPrefixStringMap[] = {
      "EXA",
      "PETA",
      "TERA",
      "GIGA",
      "MEGA",
      "KILO",
      "HECTO",
      "DECA",
      "DECI",
      "CENTI",
      "MILLI",
      "MICRO",
      "NANO",
      "PICO",
      "FEMTO",
      "ATTO"
   };

   enum struct IfcSIUnitName {
      AMPERE,
      BECQUEREL,
      CANDELA,
      COULOMB,
      CUBIC_METRE,
      DEGREE_CELSIUS,
      FARAD,
      GRAM,
      GRAY,
      HENRY,
      HERTZ,
      JOULE,
      KELVIN,
      LUMEN,
      LUX,
      METRE,
      MOLE,
      NEWTON,
      OHM,
      PASCAL,
      RADIAN,
      SECOND,
      SIEMENS,
      SIEVERT,
      SQUARE_METRE,
      STERADIAN,
      TESLA,
      VOLT,
      WATT,
      WEBER
   };

   const char * IfcSIUnitNameStringMap[] = {
      "AMPERE",
      "BECQUEREL",
      "CANDELA",
      "COULOMB",
      "CUBIC_METRE",
      "DEGREE_CELSIUS",
      "FARAD",
      "GRAM",
      "GRAY",
      "HENRY",
      "HERTZ",
      "JOULE",
      "KELVIN",
      "LUMEN",
      "LUX",
      "METRE",
      "MOLE",
      "NEWTON",
      "OHM",
      "PASCAL",
      "RADIAN",
      "SECOND",
      "SIEMENS",
      "SIEVERT",
      "SQUARE_METRE",
      "STERADIAN",
      "TESLA",
      "VOLT",
      "WATT",
      "WEBER"
   };

   enum struct IfcSanitaryTerminalTypeEnum {
      BATH,
      BIDET,
      CISTERN,
      SHOWER,
      SINK,
      SANITARYFOUNTAIN,
      TOILETPAN,
      URINAL,
      WASHHANDBASIN,
      WCSEAT,
      USERDEFINED,
      NOTDEFINED
   };

   const char * IfcSanitaryTerminalTypeEnumStringMap[] = {
      "BATH",
      "BIDET",
      "CISTERN",
      "SHOWER",
      "SINK",
      "SANITARYFOUNTAIN",
      "TOILETPAN",
      "URINAL",
      "WASHHANDBASIN",
      "WCSEAT",
      "USERDEFINED",
      "NOTDEFINED"
   };

   enum struct IfcSectionTypeEnum {
      UNIFORM,
      TAPERED
   };

   const char * IfcSectionTypeEnumStringMap[] = {
      "UNIFORM",
      "TAPERED"
   };

   enum struct IfcSensorTypeEnum {
      COSENSOR,
      CO2SENSOR,
      CONDUCTANCESENSOR,
      CONTACTSENSOR,
      FIRESENSOR,
      FLOWSENSOR,
      FROSTSENSOR,
      GASSENSOR,
      HEATSENSOR,
      HUMIDITYSENSOR,
      IDENTIFIERSENSOR,
      IONCONCENTRATIONSENSOR,
      LEVELSENSOR,
      LIGHTSENSOR,
      MOISTURESENSOR,
      MOVEMENTSENSOR,
      PHSENSOR,
      PRESSURESENSOR,
      RADIATIONSENSOR,
      RADIOACTIVITYSENSOR,
      SMOKESENSOR,
      SOUNDSENSOR,
      TEMPERATURESENSOR,
      WINDSENSOR,
      USERDEFINED,
      NOTDEFINED
   };

   const char * IfcSensorTypeEnumStringMap[] = {
      "COSENSOR",
      "CO2SENSOR",
      "CONDUCTANCESENSOR",
      "CONTACTSENSOR",
      "FIRESENSOR",
      "FLOWSENSOR",
      "FROSTSENSOR",
      "GASSENSOR",
      "HEATSENSOR",
      "HUMIDITYSENSOR",
      "IDENTIFIERSENSOR",
      "IONCONCENTRATIONSENSOR",
      "LEVELSENSOR",
      "LIGHTSENSOR",
      "MOISTURESENSOR",
      "MOVEMENTSENSOR",
      "PHSENSOR",
      "PRESSURESENSOR",
      "RADIATIONSENSOR",
      "RADIOACTIVITYSENSOR",
      "SMOKESENSOR",
      "SOUNDSENSOR",
      "TEMPERATURESENSOR",
      "WINDSENSOR",
      "USERDEFINED",
      "NOTDEFINED"
   };

   enum struct IfcSequenceEnum {
      START_START,
      START_FINISH,
      FINISH_START,
      FINISH_FINISH,
      USERDEFINED,
      NOTDEFINED
   };

   const char * IfcSequenceEnumStringMap[] = {
      "START_START",
      "START_FINISH",
      "FINISH_START",
      "FINISH_FINISH",
      "USERDEFINED",
      "NOTDEFINED"
   };

   enum struct IfcShadingDeviceTypeEnum {
      JALOUSIE,
      SHUTTER,
      AWNING,
      USERDEFINED,
      NOTDEFINED
   };

   const char * IfcShadingDeviceTypeEnumStringMap[] = {
      "JALOUSIE",
      "SHUTTER",
      "AWNING",
      "USERDEFINED",
      "NOTDEFINED"
   };

   enum struct IfcSimplePropertyTemplateTypeEnum {
      P_SINGLEVALUE,
      P_ENUMERATEDVALUE,
      P_BOUNDEDVALUE,
      P_LISTVALUE,
      P_TABLEVALUE,
      P_REFERENCEVALUE,
      Q_LENGTH,
      Q_AREA,
      Q_VOLUME,
      Q_COUNT,
      Q_WEIGHT,
      Q_TIME
   };

   const char * IfcSimplePropertyTemplateTypeEnumStringMap[] = {
      "P_SINGLEVALUE",
      "P_ENUMERATEDVALUE",
      "P_BOUNDEDVALUE",
      "P_LISTVALUE",
      "P_TABLEVALUE",
      "P_REFERENCEVALUE",
      "Q_LENGTH",
      "Q_AREA",
      "Q_VOLUME",
      "Q_COUNT",
      "Q_WEIGHT",
      "Q_TIME"
   };

   enum struct IfcSlabTypeEnum {
      FLOOR,
      ROOF,
      LANDING,
      BASESLAB,
      USERDEFINED,
      NOTDEFINED
   };

   const char * IfcSlabTypeEnumStringMap[] = {
      "FLOOR",
      "ROOF",
      "LANDING",
      "BASESLAB",
      "USERDEFINED",
      "NOTDEFINED"
   };

   enum struct IfcSolarDeviceTypeEnum {
      SOLARCOLLECTOR,
      SOLARPANEL,
      USERDEFINED,
      NOTDEFINED
   };

   const char * IfcSolarDeviceTypeEnumStringMap[] = {
      "SOLARCOLLECTOR",
      "SOLARPANEL",
      "USERDEFINED",
      "NOTDEFINED"
   };

   enum struct IfcSpaceHeaterTypeEnum {
      CONVECTOR,
      RADIATOR,
      USERDEFINED,
      NOTDEFINED
   };

   const char * IfcSpaceHeaterTypeEnumStringMap[] = {
      "CONVECTOR",
      "RADIATOR",
      "USERDEFINED",
      "NOTDEFINED"
   };

   enum struct IfcSpaceTypeEnum {
      SPACE,
      PARKING,
      GFA,
      INTERNAL,
      EXTERNAL,
      USERDEFINED,
      NOTDEFINED
   };

   const char * IfcSpaceTypeEnumStringMap[] = {
      "SPACE",
      "PARKING",
      "GFA",
      "INTERNAL",
      "EXTERNAL",
      "USERDEFINED",
      "NOTDEFINED"
   };

   enum struct IfcSpatialZoneTypeEnum {
      CONSTRUCTION,
      FIRESAFETY,
      LIGHTING,
      OCCUPANCY,
      SECURITY,
      THERMAL,
      TRANSPORT,
      VENTILATION,
      USERDEFINED,
      NOTDEFINED
   };

   const char * IfcSpatialZoneTypeEnumStringMap[] = {
      "CONSTRUCTION",
      "FIRESAFETY",
      "LIGHTING",
      "OCCUPANCY",
      "SECURITY",
      "THERMAL",
      "TRANSPORT",
      "VENTILATION",
      "USERDEFINED",
      "NOTDEFINED"
   };

   enum struct IfcStackTerminalTypeEnum {
      BIRDCAGE,
      COWL,
      RAINWATERHOPPER,
      USERDEFINED,
      NOTDEFINED
   };

   const char * IfcStackTerminalTypeEnumStringMap[] = {
      "BIRDCAGE",
      "COWL",
      "RAINWATERHOPPER",
      "USERDEFINED",
      "NOTDEFINED"
   };

   enum struct IfcStairFlightTypeEnum {
      STRAIGHT,
      WINDER,
      SPIRAL,
      CURVED,
      FREEFORM,
      USERDEFINED,
      NOTDEFINED
   };

   const char * IfcStairFlightTypeEnumStringMap[] = {
      "STRAIGHT",
      "WINDER",
      "SPIRAL",
      "CURVED",
      "FREEFORM",
      "USERDEFINED",
      "NOTDEFINED"
   };

   enum struct IfcStairTypeEnum {
      STRAIGHT_RUN_STAIR,
      TWO_STRAIGHT_RUN_STAIR,
      QUARTER_WINDING_STAIR,
      QUARTER_TURN_STAIR,
      HALF_WINDING_STAIR,
      HALF_TURN_STAIR,
      TWO_QUARTER_WINDING_STAIR,
      TWO_QUARTER_TURN_STAIR,
      THREE_QUARTER_WINDING_STAIR,
      THREE_QUARTER_TURN_STAIR,
      SPIRAL_STAIR,
      DOUBLE_RETURN_STAIR,
      CURVED_RUN_STAIR,
      TWO_CURVED_RUN_STAIR,
      USERDEFINED,
      NOTDEFINED
   };

   const char * IfcStairTypeEnumStringMap[] = {
      "STRAIGHT_RUN_STAIR",
      "TWO_STRAIGHT_RUN_STAIR",
      "QUARTER_WINDING_STAIR",
      "QUARTER_TURN_STAIR",
      "HALF_WINDING_STAIR",
      "HALF_TURN_STAIR",
      "TWO_QUARTER_WINDING_STAIR",
      "TWO_QUARTER_TURN_STAIR",
      "THREE_QUARTER_WINDING_STAIR",
      "THREE_QUARTER_TURN_STAIR",
      "SPIRAL_STAIR",
      "DOUBLE_RETURN_STAIR",
      "CURVED_RUN_STAIR",
      "TWO_CURVED_RUN_STAIR",
      "USERDEFINED",
      "NOTDEFINED"
   };

   enum struct IfcStateEnum {
      READWRITE,
      READONLY,
      LOCKED,
      READWRITELOCKED,
      READONLYLOCKED
   };

   const char * IfcStateEnumStringMap[] = {
      "READWRITE",
      "READONLY",
      "LOCKED",
      "READWRITELOCKED",
      "READONLYLOCKED"
   };

   enum struct IfcStructuralCurveActivityTypeEnum {
      CONST,
      LINEAR,
      POLYGONAL,
      EQUIDISTANT,
      SINUS,
      PARABOLA,
      DISCRETE,
      USERDEFINED,
      NOTDEFINED
   };

   const char * IfcStructuralCurveActivityTypeEnumStringMap[] = {
      "CONST",
      "LINEAR",
      "POLYGONAL",
      "EQUIDISTANT",
      "SINUS",
      "PARABOLA",
      "DISCRETE",
      "USERDEFINED",
      "NOTDEFINED"
   };

   enum struct IfcStructuralCurveMemberTypeEnum {
      RIGID_JOINED_MEMBER,
      PIN_JOINED_MEMBER,
      CABLE,
      TENSION_MEMBER,
      COMPRESSION_MEMBER,
      USERDEFINED,
      NOTDEFINED
   };

   const char * IfcStructuralCurveMemberTypeEnumStringMap[] = {
      "RIGID_JOINED_MEMBER",
      "PIN_JOINED_MEMBER",
      "CABLE",
      "TENSION_MEMBER",
      "COMPRESSION_MEMBER",
      "USERDEFINED",
      "NOTDEFINED"
   };

   enum struct IfcStructuralSurfaceActivityTypeEnum {
      CONST,
      BILINEAR,
      DISCRETE,
      ISOCONTOUR,
      USERDEFINED,
      NOTDEFINED
   };

   const char * IfcStructuralSurfaceActivityTypeEnumStringMap[] = {
      "CONST",
      "BILINEAR",
      "DISCRETE",
      "ISOCONTOUR",
      "USERDEFINED",
      "NOTDEFINED"
   };

   enum struct IfcStructuralSurfaceMemberTypeEnum {
      BENDING_ELEMENT,
      MEMBRANE_ELEMENT,
      SHELL,
      USERDEFINED,
      NOTDEFINED
   };

   const char * IfcStructuralSurfaceMemberTypeEnumStringMap[] = {
      "BENDING_ELEMENT",
      "MEMBRANE_ELEMENT",
      "SHELL",
      "USERDEFINED",
      "NOTDEFINED"
   };

   enum struct IfcSubContractResourceTypeEnum {
      PURCHASE,
      WORK,
      USERDEFINED,
      NOTDEFINED
   };

   const char * IfcSubContractResourceTypeEnumStringMap[] = {
      "PURCHASE",
      "WORK",
      "USERDEFINED",
      "NOTDEFINED"
   };

   enum struct IfcSurfaceFeatureTypeEnum {
      MARK,
      TAG,
      TREATMENT,
      USERDEFINED,
      NOTDEFINED
   };

   const char * IfcSurfaceFeatureTypeEnumStringMap[] = {
      "MARK",
      "TAG",
      "TREATMENT",
      "USERDEFINED",
      "NOTDEFINED"
   };

   enum struct IfcSurfaceSide {
      POSITIVE,
      NEGATIVE,
      BOTH
   };

   const char * IfcSurfaceSideStringMap[] = {
      "POSITIVE",
      "NEGATIVE",
      "BOTH"
   };

   enum struct IfcSwitchingDeviceTypeEnum {
      CONTACTOR,
      DIMMERSWITCH,
      EMERGENCYSTOP,
      KEYPAD,
      MOMENTARYSWITCH,
      SELECTORSWITCH,
      STARTER,
      SWITCHDISCONNECTOR,
      TOGGLESWITCH,
      USERDEFINED,
      NOTDEFINED
   };

   const char * IfcSwitchingDeviceTypeEnumStringMap[] = {
      "CONTACTOR",
      "DIMMERSWITCH",
      "EMERGENCYSTOP",
      "KEYPAD",
      "MOMENTARYSWITCH",
      "SELECTORSWITCH",
      "STARTER",
      "SWITCHDISCONNECTOR",
      "TOGGLESWITCH",
      "USERDEFINED",
      "NOTDEFINED"
   };

   enum struct IfcSystemFurnitureElementTypeEnum {
      PANEL,
      WORKSURFACE,
      USERDEFINED,
      NOTDEFINED
   };

   const char * IfcSystemFurnitureElementTypeEnumStringMap[] = {
      "PANEL",
      "WORKSURFACE",
      "USERDEFINED",
      "NOTDEFINED"
   };

   enum struct IfcTankTypeEnum {
      BASIN,
      BREAKPRESSURE,
      EXPANSION,
      FEEDANDEXPANSION,
      PRESSUREVESSEL,
      STORAGE,
      VESSEL,
      USERDEFINED,
      NOTDEFINED
   };

   const char * IfcTankTypeEnumStringMap[] = {
      "BASIN",
      "BREAKPRESSURE",
      "EXPANSION",
      "FEEDANDEXPANSION",
      "PRESSUREVESSEL",
      "STORAGE",
      "VESSEL",
      "USERDEFINED",
      "NOTDEFINED"
   };

   enum struct IfcTaskDurationEnum {
      ELAPSEDTIME,
      WORKTIME,
      NOTDEFINED
   };

   const char * IfcTaskDurationEnumStringMap[] = {
      "ELAPSEDTIME",
      "WORKTIME",
      "NOTDEFINED"
   };

   enum struct IfcTaskTypeEnum {
      ATTENDANCE,
      CONSTRUCTION,
      DEMOLITION,
      DISMANTLE,
      DISPOSAL,
      INSTALLATION,
      LOGISTIC,
      MAINTENANCE,
      MOVE,
      OPERATION,
      REMOVAL,
      RENOVATION,
      USERDEFINED,
      NOTDEFINED
   };

   const char * IfcTaskTypeEnumStringMap[] = {
      "ATTENDANCE",
      "CONSTRUCTION",
      "DEMOLITION",
      "DISMANTLE",
      "DISPOSAL",
      "INSTALLATION",
      "LOGISTIC",
      "MAINTENANCE",
      "MOVE",
      "OPERATION",
      "REMOVAL",
      "RENOVATION",
      "USERDEFINED",
      "NOTDEFINED"
   };

   enum struct IfcTendonAnchorTypeEnum {
      COUPLER,
      FIXED_END,
      TENSIONING_END,
      USERDEFINED,
      NOTDEFINED
   };

   const char * IfcTendonAnchorTypeEnumStringMap[] = {
      "COUPLER",
      "FIXED_END",
      "TENSIONING_END",
      "USERDEFINED",
      "NOTDEFINED"
   };

   enum struct IfcTendonTypeEnum {
      BAR,
      COATED,
      STRAND,
      WIRE,
      USERDEFINED,
      NOTDEFINED
   };

   const char * IfcTendonTypeEnumStringMap[] = {
      "BAR",
      "COATED",
      "STRAND",
      "WIRE",
      "USERDEFINED",
      "NOTDEFINED"
   };

   enum struct IfcTextPath {
      LEFT,
      RIGHT,
      UP,
      DOWN
   };

   const char * IfcTextPathStringMap[] = {
      "LEFT",
      "RIGHT",
      "UP",
      "DOWN"
   };

   enum struct IfcTimeSeriesDataTypeEnum {
      CONTINUOUS,
      DISCRETE,
      DISCRETEBINARY,
      PIECEWISEBINARY,
      PIECEWISECONSTANT,
      PIECEWISECONTINUOUS,
      NOTDEFINED
   };

   const char * IfcTimeSeriesDataTypeEnumStringMap[] = {
      "CONTINUOUS",
      "DISCRETE",
      "DISCRETEBINARY",
      "PIECEWISEBINARY",
      "PIECEWISECONSTANT",
      "PIECEWISECONTINUOUS",
      "NOTDEFINED"
   };

   enum struct IfcTransformerTypeEnum {
      CURRENT,
      FREQUENCY,
      INVERTER,
      RECTIFIER,
      VOLTAGE,
      USERDEFINED,
      NOTDEFINED
   };

   const char * IfcTransformerTypeEnumStringMap[] = {
      "CURRENT",
      "FREQUENCY",
      "INVERTER",
      "RECTIFIER",
      "VOLTAGE",
      "USERDEFINED",
      "NOTDEFINED"
   };

   enum struct IfcTransitionCode {
      DISCONTINUOUS,
      CONTINUOUS,
      CONTSAMEGRADIENT,
      CONTSAMEGRADIENTSAMECURVATURE
   };

   const char * IfcTransitionCodeStringMap[] = {
      "DISCONTINUOUS",
      "CONTINUOUS",
      "CONTSAMEGRADIENT",
      "CONTSAMEGRADIENTSAMECURVATURE"
   };

   enum struct IfcTransportElementTypeEnum {
      ELEVATOR,
      ESCALATOR,
      MOVINGWALKWAY,
      CRANEWAY,
      LIFTINGGEAR,
      USERDEFINED,
      NOTDEFINED
   };

   const char * IfcTransportElementTypeEnumStringMap[] = {
      "ELEVATOR",
      "ESCALATOR",
      "MOVINGWALKWAY",
      "CRANEWAY",
      "LIFTINGGEAR",
      "USERDEFINED",
      "NOTDEFINED"
   };

   enum struct IfcTrimmingPreference {
      CARTESIAN,
      PARAMETER,
      UNSPECIFIED
   };

   const char * IfcTrimmingPreferenceStringMap[] = {
      "CARTESIAN",
      "PARAMETER",
      "UNSPECIFIED"
   };

   enum struct IfcTubeBundleTypeEnum {
      FINNED,
      USERDEFINED,
      NOTDEFINED
   };

   const char * IfcTubeBundleTypeEnumStringMap[] = {
      "FINNED",
      "USERDEFINED",
      "NOTDEFINED"
   };

   enum struct IfcUnitEnum {
      ABSORBEDDOSEUNIT,
      AMOUNTOFSUBSTANCEUNIT,
      AREAUNIT,
      DOSEEQUIVALENTUNIT,
      ELECTRICCAPACITANCEUNIT,
      ELECTRICCHARGEUNIT,
      ELECTRICCONDUCTANCEUNIT,
      ELECTRICCURRENTUNIT,
      ELECTRICRESISTANCEUNIT,
      ELECTRICVOLTAGEUNIT,
      ENERGYUNIT,
      FORCEUNIT,
      FREQUENCYUNIT,
      ILLUMINANCEUNIT,
      INDUCTANCEUNIT,
      LENGTHUNIT,
      LUMINOUSFLUXUNIT,
      LUMINOUSINTENSITYUNIT,
      MAGNETICFLUXDENSITYUNIT,
      MAGNETICFLUXUNIT,
      MASSUNIT,
      PLANEANGLEUNIT,
      POWERUNIT,
      PRESSUREUNIT,
      RADIOACTIVITYUNIT,
      SOLIDANGLEUNIT,
      THERMODYNAMICTEMPERATUREUNIT,
      TIMEUNIT,
      VOLUMEUNIT,
      USERDEFINED
   };

   const char * IfcUnitEnumStringMap[] = {
      "ABSORBEDDOSEUNIT",
      "AMOUNTOFSUBSTANCEUNIT",
      "AREAUNIT",
      "DOSEEQUIVALENTUNIT",
      "ELECTRICCAPACITANCEUNIT",
      "ELECTRICCHARGEUNIT",
      "ELECTRICCONDUCTANCEUNIT",
      "ELECTRICCURRENTUNIT",
      "ELECTRICRESISTANCEUNIT",
      "ELECTRICVOLTAGEUNIT",
      "ENERGYUNIT",
      "FORCEUNIT",
      "FREQUENCYUNIT",
      "ILLUMINANCEUNIT",
      "INDUCTANCEUNIT",
      "LENGTHUNIT",
      "LUMINOUSFLUXUNIT",
      "LUMINOUSINTENSITYUNIT",
      "MAGNETICFLUXDENSITYUNIT",
      "MAGNETICFLUXUNIT",
      "MASSUNIT",
      "PLANEANGLEUNIT",
      "POWERUNIT",
      "PRESSUREUNIT",
      "RADIOACTIVITYUNIT",
      "SOLIDANGLEUNIT",
      "THERMODYNAMICTEMPERATUREUNIT",
      "TIMEUNIT",
      "VOLUMEUNIT",
      "USERDEFINED"
   };

   enum struct IfcUnitaryControlElementTypeEnum {
      ALARMPANEL,
      CONTROLPANEL,
      GASDETECTIONPANEL,
      INDICATORPANEL,
      MIMICPANEL,
      HUMIDISTAT,
      THERMOSTAT,
      WEATHERSTATION,
      USERDEFINED,
      NOTDEFINED
   };

   const char * IfcUnitaryControlElementTypeEnumStringMap[] = {
      "ALARMPANEL",
      "CONTROLPANEL",
      "GASDETECTIONPANEL",
      "INDICATORPANEL",
      "MIMICPANEL",
      "HUMIDISTAT",
      "THERMOSTAT",
      "WEATHERSTATION",
      "USERDEFINED",
      "NOTDEFINED"
   };

   enum struct IfcUnitaryEquipmentTypeEnum {
      AIRHANDLER,
      AIRCONDITIONINGUNIT,
      DEHUMIDIFIER,
      SPLITSYSTEM,
      ROOFTOPUNIT,
      USERDEFINED,
      NOTDEFINED
   };

   const char * IfcUnitaryEquipmentTypeEnumStringMap[] = {
      "AIRHANDLER",
      "AIRCONDITIONINGUNIT",
      "DEHUMIDIFIER",
      "SPLITSYSTEM",
      "ROOFTOPUNIT",
      "USERDEFINED",
      "NOTDEFINED"
   };

   enum struct IfcValveTypeEnum {
      AIRRELEASE,
      ANTIVACUUM,
      CHANGEOVER,
      CHECK,
      COMMISSIONING,
      DIVERTING,
      DRAWOFFCOCK,
      DOUBLECHECK,
      DOUBLEREGULATING,
      FAUCET,
      FLUSHING,
      GASCOCK,
      GASTAP,
      ISOLATING,
      MIXING,
      PRESSUREREDUCING,
      PRESSURERELIEF,
      REGULATING,
      SAFETYCUTOFF,
      STEAMTRAP,
      STOPCOCK,
      USERDEFINED,
      NOTDEFINED
   };

   const char * IfcValveTypeEnumStringMap[] = {
      "AIRRELEASE",
      "ANTIVACUUM",
      "CHANGEOVER",
      "CHECK",
      "COMMISSIONING",
      "DIVERTING",
      "DRAWOFFCOCK",
      "DOUBLECHECK",
      "DOUBLEREGULATING",
      "FAUCET",
      "FLUSHING",
      "GASCOCK",
      "GASTAP",
      "ISOLATING",
      "MIXING",
      "PRESSUREREDUCING",
      "PRESSURERELIEF",
      "REGULATING",
      "SAFETYCUTOFF",
      "STEAMTRAP",
      "STOPCOCK",
      "USERDEFINED",
      "NOTDEFINED"
   };

   enum struct IfcVibrationIsolatorTypeEnum {
      COMPRESSION,
      SPRING,
      USERDEFINED,
      NOTDEFINED
   };

   const char * IfcVibrationIsolatorTypeEnumStringMap[] = {
      "COMPRESSION",
      "SPRING",
      "USERDEFINED",
      "NOTDEFINED"
   };

   enum struct IfcVoidingFeatureTypeEnum {
      CUTOUT,
      NOTCH,
      HOLE,
      MITER,
      CHAMFER,
      EDGE,
      USERDEFINED,
      NOTDEFINED
   };

   const char * IfcVoidingFeatureTypeEnumStringMap[] = {
      "CUTOUT",
      "NOTCH",
      "HOLE",
      "MITER",
      "CHAMFER",
      "EDGE",
      "USERDEFINED",
      "NOTDEFINED"
   };

   enum struct IfcWallTypeEnum {
      MOVABLE,
      PARAPET,
      PARTITIONING,
      PLUMBINGWALL,
      SHEAR,
      SOLIDWALL,
      STANDARD,
      POLYGONAL,
      ELEMENTEDWALL,
      USERDEFINED,
      NOTDEFINED
   };

   const char * IfcWallTypeEnumStringMap[] = {
      "MOVABLE",
      "PARAPET",
      "PARTITIONING",
      "PLUMBINGWALL",
      "SHEAR",
      "SOLIDWALL",
      "STANDARD",
      "POLYGONAL",
      "ELEMENTEDWALL",
      "USERDEFINED",
      "NOTDEFINED"
   };

   enum struct IfcWasteTerminalTypeEnum {
      FLOORTRAP,
      FLOORWASTE,
      GULLYSUMP,
      GULLYTRAP,
      ROOFDRAIN,
      WASTEDISPOSALUNIT,
      WASTETRAP,
      USERDEFINED,
      NOTDEFINED
   };

   const char * IfcWasteTerminalTypeEnumStringMap[] = {
      "FLOORTRAP",
      "FLOORWASTE",
      "GULLYSUMP",
      "GULLYTRAP",
      "ROOFDRAIN",
      "WASTEDISPOSALUNIT",
      "WASTETRAP",
      "USERDEFINED",
      "NOTDEFINED"
   };

   enum struct IfcWindowPanelOperationEnum {
      SIDEHUNGRIGHTHAND,
      SIDEHUNGLEFTHAND,
      TILTANDTURNRIGHTHAND,
      TILTANDTURNLEFTHAND,
      TOPHUNG,
      BOTTOMHUNG,
      PIVOTHORIZONTAL,
      PIVOTVERTICAL,
      SLIDINGHORIZONTAL,
      SLIDINGVERTICAL,
      REMOVABLECASEMENT,
      FIXEDCASEMENT,
      OTHEROPERATION,
      NOTDEFINED
   };

   const char * IfcWindowPanelOperationEnumStringMap[] = {
      "SIDEHUNGRIGHTHAND",
      "SIDEHUNGLEFTHAND",
      "TILTANDTURNRIGHTHAND",
      "TILTANDTURNLEFTHAND",
      "TOPHUNG",
      "BOTTOMHUNG",
      "PIVOTHORIZONTAL",
      "PIVOTVERTICAL",
      "SLIDINGHORIZONTAL",
      "SLIDINGVERTICAL",
      "REMOVABLECASEMENT",
      "FIXEDCASEMENT",
      "OTHEROPERATION",
      "NOTDEFINED"
   };

   enum struct IfcWindowPanelPositionEnum {
      LEFT,
      MIDDLE,
      RIGHT,
      BOTTOM,
      TOP,
      NOTDEFINED
   };

   const char * IfcWindowPanelPositionEnumStringMap[] = {
      "LEFT",
      "MIDDLE",
      "RIGHT",
      "BOTTOM",
      "TOP",
      "NOTDEFINED"
   };

   enum struct IfcWindowStyleConstructionEnum {
      ALUMINIUM,
      HIGH_GRADE_STEEL,
      STEEL,
      WOOD,
      ALUMINIUM_WOOD,
      PLASTIC,
      OTHER_CONSTRUCTION,
      NOTDEFINED
   };

   const char * IfcWindowStyleConstructionEnumStringMap[] = {
      "ALUMINIUM",
      "HIGH_GRADE_STEEL",
      "STEEL",
      "WOOD",
      "ALUMINIUM_WOOD",
      "PLASTIC",
      "OTHER_CONSTRUCTION",
      "NOTDEFINED"
   };

   enum struct IfcWindowStyleOperationEnum {
      SINGLE_PANEL,
      DOUBLE_PANEL_VERTICAL,
      DOUBLE_PANEL_HORIZONTAL,
      TRIPLE_PANEL_VERTICAL,
      TRIPLE_PANEL_BOTTOM,
      TRIPLE_PANEL_TOP,
      TRIPLE_PANEL_LEFT,
      TRIPLE_PANEL_RIGHT,
      TRIPLE_PANEL_HORIZONTAL,
      USERDEFINED,
      NOTDEFINED
   };

   const char * IfcWindowStyleOperationEnumStringMap[] = {
      "SINGLE_PANEL",
      "DOUBLE_PANEL_VERTICAL",
      "DOUBLE_PANEL_HORIZONTAL",
      "TRIPLE_PANEL_VERTICAL",
      "TRIPLE_PANEL_BOTTOM",
      "TRIPLE_PANEL_TOP",
      "TRIPLE_PANEL_LEFT",
      "TRIPLE_PANEL_RIGHT",
      "TRIPLE_PANEL_HORIZONTAL",
      "USERDEFINED",
      "NOTDEFINED"
   };

   enum struct IfcWindowTypeEnum {
      WINDOW,
      SKYLIGHT,
      LIGHTDOME,
      USERDEFINED,
      NOTDEFINED
   };

   const char * IfcWindowTypeEnumStringMap[] = {
      "WINDOW",
      "SKYLIGHT",
      "LIGHTDOME",
      "USERDEFINED",
      "NOTDEFINED"
   };

   enum struct IfcWindowTypePartitioningEnum {
      SINGLE_PANEL,
      DOUBLE_PANEL_VERTICAL,
      DOUBLE_PANEL_HORIZONTAL,
      TRIPLE_PANEL_VERTICAL,
      TRIPLE_PANEL_BOTTOM,
      TRIPLE_PANEL_TOP,
      TRIPLE_PANEL_LEFT,
      TRIPLE_PANEL_RIGHT,
      TRIPLE_PANEL_HORIZONTAL,
      USERDEFINED,
      NOTDEFINED
   };

   const char * IfcWindowTypePartitioningEnumStringMap[] = {
      "SINGLE_PANEL",
      "DOUBLE_PANEL_VERTICAL",
      "DOUBLE_PANEL_HORIZONTAL",
      "TRIPLE_PANEL_VERTICAL",
      "TRIPLE_PANEL_BOTTOM",
      "TRIPLE_PANEL_TOP",
      "TRIPLE_PANEL_LEFT",
      "TRIPLE_PANEL_RIGHT",
      "TRIPLE_PANEL_HORIZONTAL",
      "USERDEFINED",
      "NOTDEFINED"
   };

   enum struct IfcWorkCalendarTypeEnum {
      FIRSTSHIFT,
      SECONDSHIFT,
      THIRDSHIFT,
      USERDEFINED,
      NOTDEFINED
   };

   const char * IfcWorkCalendarTypeEnumStringMap[] = {
      "FIRSTSHIFT",
      "SECONDSHIFT",
      "THIRDSHIFT",
      "USERDEFINED",
      "NOTDEFINED"
   };

   enum struct IfcWorkPlanTypeEnum {
      ACTUAL,
      BASELINE,
      PLANNED,
      USERDEFINED,
      NOTDEFINED
   };

   const char * IfcWorkPlanTypeEnumStringMap[] = {
      "ACTUAL",
      "BASELINE",
      "PLANNED",
      "USERDEFINED",
      "NOTDEFINED"
   };

   enum struct IfcWorkScheduleTypeEnum {
      ACTUAL,
      BASELINE,
      PLANNED,
      USERDEFINED,
      NOTDEFINED
   };

   const char * IfcWorkScheduleTypeEnumStringMap[] = {
      "ACTUAL",
      "BASELINE",
      "PLANNED",
      "USERDEFINED",
      "NOTDEFINED"
   };
}
