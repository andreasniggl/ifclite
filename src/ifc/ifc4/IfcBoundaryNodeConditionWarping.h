// Automatically generated by ifclite express parser from ifc4 express file - do not modify

#pragma once

#include "IfcTypeDefinitions.h"
#include "IfcBoundaryNodeCondition.h"
#include "IfcWarpingStiffnessSelect.h"

namespace ifc4
{
   class IfcBoundaryNodeConditionWarping : public IfcBoundaryNodeCondition
   {
   public:
      virtual ~IfcBoundaryNodeConditionWarping(){}

      explicit IfcBoundaryNodeConditionWarping() = default;

      virtual std::string className() const { return "IfcBoundaryNodeConditionWarping"; }

      boost::optional<IfcWarpingStiffnessSelect> WarpingStiffness; // optional parameter

   protected:
      virtual void serialize(ifc::StepWriter& w) const
      {
         w.beginEntity(this);
         w.writeAttributeValue(Name);
         w.writeAttributeSelect<IfcTranslationalStiffnessSelectWriterVisitor>(TranslationalStiffnessX);
         w.writeAttributeSelect<IfcTranslationalStiffnessSelectWriterVisitor>(TranslationalStiffnessY);
         w.writeAttributeSelect<IfcTranslationalStiffnessSelectWriterVisitor>(TranslationalStiffnessZ);
         w.writeAttributeSelect<IfcRotationalStiffnessSelectWriterVisitor>(RotationalStiffnessX);
         w.writeAttributeSelect<IfcRotationalStiffnessSelectWriterVisitor>(RotationalStiffnessY);
         w.writeAttributeSelect<IfcRotationalStiffnessSelectWriterVisitor>(RotationalStiffnessZ);
         w.writeAttributeSelect<IfcWarpingStiffnessSelectWriterVisitor>(WarpingStiffness);
         w.endEntity();
      }

   };

} // namespace ifc4

