// Automatically generated by ifclite express parser from ifc4 express file - do not modify

#pragma once

#include "IfcTypeDefinitions.h"
#include "IfcMaterialLayer.h"

namespace ifc4
{
   class IfcMaterialLayerWithOffsets : public IfcMaterialLayer
   {
   public:
      virtual ~IfcMaterialLayerWithOffsets(){}

      explicit IfcMaterialLayerWithOffsets() = default;

      explicit IfcMaterialLayerWithOffsets(const IfcNonNegativeLengthMeasure& _LayerThickness, const IfcLayerSetDirectionEnum& _OffsetDirection, const std::vector<IfcLengthMeasure>& _OffsetValues)
         : IfcMaterialLayer(_LayerThickness), OffsetDirection(_OffsetDirection), OffsetValues(_OffsetValues) {}

      virtual std::string className() const { return "IfcMaterialLayerWithOffsets"; }

      boost::optional<IfcLayerSetDirectionEnum> OffsetDirection; // required parameter
      std::vector<IfcLengthMeasure> OffsetValues; // required parameter

   protected:
      virtual void serialize(ifc::StepWriter& w) const
      {
         w.beginEntity(this);
         w.writeAttributeInstance(Material);
         w.writeAttributeValue(LayerThickness);
         w.writeAttributeValue(IsVentilated);
         w.writeAttributeValue(Name);
         w.writeAttributeValue(Description);
         w.writeAttributeValue(Category);
         w.writeAttributeValue(Priority);
         w.writeAttributeValue(IfcLayerSetDirectionEnumStringMap, OffsetDirection);
         w.writeAttributeValue(OffsetValues);
         w.endEntity();
      }

   };

} // namespace ifc4

