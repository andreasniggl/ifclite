// Automatically generated by ifclite express parser from ifc4 express file - do not modify

#pragma once

#include "IfcTypeDefinitions.h"
#include "IfcReinforcingElementType.h"
#include "IfcBendingParameterSelect.h"

namespace ifc4
{
   class IfcReinforcingMeshType : public IfcReinforcingElementType
   {
   public:
      virtual ~IfcReinforcingMeshType(){}

      explicit IfcReinforcingMeshType() = default;

      explicit IfcReinforcingMeshType(const IfcGloballyUniqueId& _GlobalId, const IfcReinforcingMeshTypeEnum& _PredefinedType)
         : IfcReinforcingElementType(_GlobalId), PredefinedType(_PredefinedType) {}

      virtual std::string className() const { return "IfcReinforcingMeshType"; }

      boost::optional<IfcReinforcingMeshTypeEnum> PredefinedType; // required parameter
      boost::optional<IfcPositiveLengthMeasure> MeshLength; // optional parameter
      boost::optional<IfcPositiveLengthMeasure> MeshWidth; // optional parameter
      boost::optional<IfcPositiveLengthMeasure> LongitudinalBarNominalDiameter; // optional parameter
      boost::optional<IfcPositiveLengthMeasure> TransverseBarNominalDiameter; // optional parameter
      boost::optional<IfcAreaMeasure> LongitudinalBarCrossSectionArea; // optional parameter
      boost::optional<IfcAreaMeasure> TransverseBarCrossSectionArea; // optional parameter
      boost::optional<IfcPositiveLengthMeasure> LongitudinalBarSpacing; // optional parameter
      boost::optional<IfcPositiveLengthMeasure> TransverseBarSpacing; // optional parameter
      boost::optional<IfcLabel> BendingShapeCode; // optional parameter
      std::vector< boost::optional<IfcBendingParameterSelect> > BendingParameters; // optional parameter

   protected:
      virtual void serialize(ifc::StepWriter& w) const
      {
         w.beginEntity(this);
         w.writeAttributeValue(GlobalId);
         w.writeAttributeInstance(OwnerHistory);
         w.writeAttributeValue(Name);
         w.writeAttributeValue(Description);
         w.writeAttributeValue(ApplicableOccurrence);
         w.writeAttributeInstance(HasPropertySets);
         w.writeAttributeInstance(RepresentationMaps);
         w.writeAttributeValue(Tag);
         w.writeAttributeValue(ElementType);
         w.writeAttributeValue(IfcReinforcingMeshTypeEnumStringMap, PredefinedType);
         w.writeAttributeValue(MeshLength);
         w.writeAttributeValue(MeshWidth);
         w.writeAttributeValue(LongitudinalBarNominalDiameter);
         w.writeAttributeValue(TransverseBarNominalDiameter);
         w.writeAttributeValue(LongitudinalBarCrossSectionArea);
         w.writeAttributeValue(TransverseBarCrossSectionArea);
         w.writeAttributeValue(LongitudinalBarSpacing);
         w.writeAttributeValue(TransverseBarSpacing);
         w.writeAttributeValue(BendingShapeCode);
         w.writeAttributeSelect<IfcBendingParameterSelectWriterVisitor>(BendingParameters);
         w.endEntity();
      }

   };

} // namespace ifc4

