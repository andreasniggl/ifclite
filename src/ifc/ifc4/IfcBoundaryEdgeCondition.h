// Automatically generated by ifclite express parser from ifc4 express file - do not modify

#pragma once

#include "IfcTypeDefinitions.h"
#include "IfcBoundaryCondition.h"
#include "IfcModulusOfTranslationalSubgradeReactionSelect.h"
#include "IfcModulusOfTranslationalSubgradeReactionSelect.h"
#include "IfcModulusOfTranslationalSubgradeReactionSelect.h"
#include "IfcModulusOfRotationalSubgradeReactionSelect.h"
#include "IfcModulusOfRotationalSubgradeReactionSelect.h"
#include "IfcModulusOfRotationalSubgradeReactionSelect.h"

namespace ifc4
{
   class IfcBoundaryEdgeCondition : public IfcBoundaryCondition
   {
   public:
      virtual ~IfcBoundaryEdgeCondition(){}

      explicit IfcBoundaryEdgeCondition() = default;

      virtual std::string className() const { return "IfcBoundaryEdgeCondition"; }

      boost::optional<IfcModulusOfTranslationalSubgradeReactionSelect> TranslationalStiffnessByLengthX; // optional parameter
      boost::optional<IfcModulusOfTranslationalSubgradeReactionSelect> TranslationalStiffnessByLengthY; // optional parameter
      boost::optional<IfcModulusOfTranslationalSubgradeReactionSelect> TranslationalStiffnessByLengthZ; // optional parameter
      boost::optional<IfcModulusOfRotationalSubgradeReactionSelect> RotationalStiffnessByLengthX; // optional parameter
      boost::optional<IfcModulusOfRotationalSubgradeReactionSelect> RotationalStiffnessByLengthY; // optional parameter
      boost::optional<IfcModulusOfRotationalSubgradeReactionSelect> RotationalStiffnessByLengthZ; // optional parameter

   protected:
      virtual void serialize(ifc::StepWriter& w) const
      {
         w.beginEntity(this);
         w.writeAttributeValue(Name);
         w.writeAttributeSelect<IfcModulusOfTranslationalSubgradeReactionSelectWriterVisitor>(TranslationalStiffnessByLengthX);
         w.writeAttributeSelect<IfcModulusOfTranslationalSubgradeReactionSelectWriterVisitor>(TranslationalStiffnessByLengthY);
         w.writeAttributeSelect<IfcModulusOfTranslationalSubgradeReactionSelectWriterVisitor>(TranslationalStiffnessByLengthZ);
         w.writeAttributeSelect<IfcModulusOfRotationalSubgradeReactionSelectWriterVisitor>(RotationalStiffnessByLengthX);
         w.writeAttributeSelect<IfcModulusOfRotationalSubgradeReactionSelectWriterVisitor>(RotationalStiffnessByLengthY);
         w.writeAttributeSelect<IfcModulusOfRotationalSubgradeReactionSelectWriterVisitor>(RotationalStiffnessByLengthZ);
         w.endEntity();
      }

   };

} // namespace ifc4

