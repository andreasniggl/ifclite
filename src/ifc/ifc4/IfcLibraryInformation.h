// Automatically generated by ifclite express parser from ifc4 express file - do not modify

#pragma once

#include "IfcTypeDefinitions.h"
#include "IfcExternalInformation.h"
#include "IfcActorSelect.h"

namespace ifc4
{
   class IfcLibraryInformation : public IfcExternalInformation
   {
   public:
      virtual ~IfcLibraryInformation(){}

      explicit IfcLibraryInformation() = default;

      explicit IfcLibraryInformation(const IfcLabel& _Name)
         : IfcExternalInformation(), Name(_Name) {}

      virtual std::string className() const { return "IfcLibraryInformation"; }

      boost::optional<IfcLabel> Name; // required parameter
      boost::optional<IfcLabel> Version; // optional parameter
      boost::optional<IfcActorSelect> Publisher; // optional parameter
      boost::optional<IfcDateTime> VersionDate; // optional parameter
      boost::optional<IfcURIReference> Location; // optional parameter
      boost::optional<IfcText> Description; // optional parameter

   protected:
      virtual void serialize(ifc::StepWriter& w) const
      {
         w.beginEntity(this);
         w.writeAttributeValue(Name);
         w.writeAttributeValue(Version);
         w.writeAttributeSelect<IfcActorSelectWriterVisitor>(Publisher);
         w.writeAttributeValue(VersionDate);
         w.writeAttributeValue(Location);
         w.writeAttributeValue(Description);
         w.endEntity();
      }

   };

} // namespace ifc4

