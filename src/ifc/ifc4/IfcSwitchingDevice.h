// Automatically generated by ifclite express parser from ifc4 express file - do not modify

#pragma once

#include "IfcTypeDefinitions.h"
#include "IfcFlowController.h"

namespace ifc4
{
   class IfcSwitchingDevice : public IfcFlowController
   {
   public:
      virtual ~IfcSwitchingDevice(){}

      explicit IfcSwitchingDevice() = default;

      explicit IfcSwitchingDevice(const IfcGloballyUniqueId& _GlobalId)
         : IfcFlowController(_GlobalId) {}

      virtual std::string className() const { return "IfcSwitchingDevice"; }

      boost::optional<IfcSwitchingDeviceTypeEnum> PredefinedType; // optional parameter

   protected:
      virtual void serialize(ifc::StepWriter& w) const
      {
         w.beginEntity(this);
         w.writeAttributeValue(GlobalId);
         w.writeAttributeInstance(OwnerHistory);
         w.writeAttributeValue(Name);
         w.writeAttributeValue(Description);
         w.writeAttributeValue(ObjectType);
         w.writeAttributeInstance(ObjectPlacement);
         w.writeAttributeInstance(Representation);
         w.writeAttributeValue(Tag);
         w.writeAttributeValue(IfcSwitchingDeviceTypeEnumStringMap, PredefinedType);
         w.endEntity();
      }

   };

} // namespace ifc4

