// Automatically generated by ifclite express parser from ifc4 express file - do not modify

#pragma once

#include "IfcTypeDefinitions.h"
#include "IfcRelConnects.h"
#include "IfcSystem.h"
#include "IfcSpatialElement.h"

namespace ifc4
{
   class IfcRelServicesBuildings : public IfcRelConnects
   {
   public:
      virtual ~IfcRelServicesBuildings(){}

      explicit IfcRelServicesBuildings() = default;

      explicit IfcRelServicesBuildings(const IfcGloballyUniqueId& _GlobalId, IfcSystem* _RelatingSystem, const std::vector<IfcSpatialElement*>& _RelatedBuildings)
         : IfcRelConnects(_GlobalId), RelatingSystem(_RelatingSystem), RelatedBuildings(_RelatedBuildings) {}

      virtual std::string className() const { return "IfcRelServicesBuildings"; }

      IfcSystem* RelatingSystem; // required parameter
      std::vector<IfcSpatialElement*> RelatedBuildings; // required parameter

   protected:
      virtual void serialize(ifc::StepWriter& w) const
      {
         w.beginEntity(this);
         w.writeAttributeValue(GlobalId);
         w.writeAttributeInstance(OwnerHistory);
         w.writeAttributeValue(Name);
         w.writeAttributeValue(Description);
         w.writeAttributeInstance(RelatingSystem);
         w.writeAttributeInstance(RelatedBuildings);
         w.endEntity();
      }

   };

} // namespace ifc4

