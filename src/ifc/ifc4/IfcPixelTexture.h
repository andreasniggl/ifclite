// Automatically generated by ifclite express parser from ifc4 express file - do not modify

#pragma once

#include "IfcTypeDefinitions.h"
#include "IfcSurfaceTexture.h"

namespace ifc4
{
   class IfcPixelTexture : public IfcSurfaceTexture
   {
   public:
      virtual ~IfcPixelTexture(){}

      explicit IfcPixelTexture() = default;

      explicit IfcPixelTexture(const IfcBoolean& _RepeatS, const IfcBoolean& _RepeatT, const IfcInteger& _Width, const IfcInteger& _Height, const IfcInteger& _ColourComponents, const std::vector<IfcBinary>& _Pixel)
         : IfcSurfaceTexture(_RepeatS, _RepeatT), Width(_Width), Height(_Height), ColourComponents(_ColourComponents), Pixel(_Pixel) {}

      virtual std::string className() const { return "IfcPixelTexture"; }

      boost::optional<IfcInteger> Width; // required parameter
      boost::optional<IfcInteger> Height; // required parameter
      boost::optional<IfcInteger> ColourComponents; // required parameter
      std::vector<IfcBinary> Pixel; // required parameter

   protected:
      virtual void serialize(ifc::StepWriter& w) const
      {
         w.beginEntity(this);
         w.writeAttributeValue(RepeatS);
         w.writeAttributeValue(RepeatT);
         w.writeAttributeValue(Mode);
         w.writeAttributeInstance(TextureTransform);
         w.writeAttributeValue(Parameter);
         w.writeAttributeValue(Width);
         w.writeAttributeValue(Height);
         w.writeAttributeValue(ColourComponents);
         w.writeAttributeValue(Pixel);
         w.endEntity();
      }

   };

} // namespace ifc4

