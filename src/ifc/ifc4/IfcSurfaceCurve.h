// Automatically generated by ifclite express parser from ifc4 express file - do not modify

#pragma once

#include "IfcTypeDefinitions.h"
#include "IfcCurve.h"
#include "IfcCurve.h"
#include "IfcPcurve.h"

namespace ifc4
{
   class IfcSurfaceCurve : public IfcCurve
   {
   public:
      virtual ~IfcSurfaceCurve(){}

      explicit IfcSurfaceCurve() = default;

      explicit IfcSurfaceCurve(IfcCurve* _Curve3D, const std::vector<IfcPcurve*>& _AssociatedGeometry, const IfcPreferredSurfaceCurveRepresentation& _MasterRepresentation)
         : IfcCurve(), Curve3D(_Curve3D), AssociatedGeometry(_AssociatedGeometry), MasterRepresentation(_MasterRepresentation) {}

      virtual std::string className() const { return "IfcSurfaceCurve"; }

      IfcCurve* Curve3D; // required parameter
      std::vector<IfcPcurve*> AssociatedGeometry; // required parameter
      boost::optional<IfcPreferredSurfaceCurveRepresentation> MasterRepresentation; // required parameter

   protected:
      virtual void serialize(ifc::StepWriter& w) const
      {
         w.beginEntity(this);
         w.writeAttributeInstance(Curve3D);
         w.writeAttributeInstance(AssociatedGeometry);
         w.writeAttributeValue(IfcPreferredSurfaceCurveRepresentationStringMap, MasterRepresentation);
         w.endEntity();
      }

   };

} // namespace ifc4

