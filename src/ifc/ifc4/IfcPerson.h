// Automatically generated by ifclite express parser from ifc4 express file - do not modify

#pragma once

#include "IfcTypeDefinitions.h"
#include "Entity.h"
#include "IfcActorRole.h"
#include "IfcAddress.h"

namespace ifc4
{
   class IfcPerson : public ifc::Entity
   {
   public:
      virtual ~IfcPerson(){}

      explicit IfcPerson() = default;

      virtual std::string className() const { return "IfcPerson"; }

      boost::optional<IfcIdentifier> Identification; // optional parameter
      boost::optional<IfcLabel> FamilyName; // optional parameter
      boost::optional<IfcLabel> GivenName; // optional parameter
      std::vector<IfcLabel> MiddleNames; // optional parameter
      std::vector<IfcLabel> PrefixTitles; // optional parameter
      std::vector<IfcLabel> SuffixTitles; // optional parameter
      std::vector<IfcActorRole*> Roles; // optional parameter
      std::vector<IfcAddress*> Addresses; // optional parameter

   protected:
      virtual void serialize(ifc::StepWriter& w) const
      {
         w.beginEntity(this);
         w.writeAttributeValue(Identification);
         w.writeAttributeValue(FamilyName);
         w.writeAttributeValue(GivenName);
         w.writeAttributeValue(MiddleNames);
         w.writeAttributeValue(PrefixTitles);
         w.writeAttributeValue(SuffixTitles);
         w.writeAttributeInstance(Roles);
         w.writeAttributeInstance(Addresses);
         w.endEntity();
      }

   };

} // namespace ifc4

