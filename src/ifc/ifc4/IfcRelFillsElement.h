// Automatically generated by ifclite express parser from ifc4 express file - do not modify

#pragma once

#include "IfcTypeDefinitions.h"
#include "IfcRelConnects.h"
#include "IfcOpeningElement.h"
#include "IfcElement.h"

namespace ifc4
{
   class IfcRelFillsElement : public IfcRelConnects
   {
   public:
      virtual ~IfcRelFillsElement(){}

      explicit IfcRelFillsElement() = default;

      explicit IfcRelFillsElement(const IfcGloballyUniqueId& _GlobalId, IfcOpeningElement* _RelatingOpeningElement, IfcElement* _RelatedBuildingElement)
         : IfcRelConnects(_GlobalId), RelatingOpeningElement(_RelatingOpeningElement), RelatedBuildingElement(_RelatedBuildingElement) {}

      virtual std::string className() const { return "IfcRelFillsElement"; }

      IfcOpeningElement* RelatingOpeningElement; // required parameter
      IfcElement* RelatedBuildingElement; // required parameter

   protected:
      virtual void serialize(ifc::StepWriter& w) const
      {
         w.beginEntity(this);
         w.writeAttributeValue(GlobalId);
         w.writeAttributeInstance(OwnerHistory);
         w.writeAttributeValue(Name);
         w.writeAttributeValue(Description);
         w.writeAttributeInstance(RelatingOpeningElement);
         w.writeAttributeInstance(RelatedBuildingElement);
         w.endEntity();
      }

   };

} // namespace ifc4

