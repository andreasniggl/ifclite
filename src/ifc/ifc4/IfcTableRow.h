// Automatically generated by ifclite express parser from ifc4 express file - do not modify

#pragma once

#include "IfcTypeDefinitions.h"
#include "Entity.h"
#include "IfcValue.h"

namespace ifc4
{
   class IfcTableRow : public ifc::Entity
   {
   public:
      virtual ~IfcTableRow(){}

      explicit IfcTableRow() = default;

      virtual std::string className() const { return "IfcTableRow"; }

      std::vector< boost::optional<IfcValue> > RowCells; // optional parameter
      boost::optional<IfcBoolean> IsHeading; // optional parameter

   protected:
      virtual void serialize(ifc::StepWriter& w) const
      {
         w.beginEntity(this);
         w.writeAttributeSelect<IfcValueWriterVisitor>(RowCells);
         w.writeAttributeValue(IsHeading);
         w.endEntity();
      }

   };

} // namespace ifc4

