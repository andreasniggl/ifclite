// Automatically generated by ifclite express parser from ifc4 express file - do not modify

#pragma once

#include "IfcTypeDefinitions.h"
#include "IfcAppliedValue.h"

namespace ifc4
{
   class IfcCostValue : public IfcAppliedValue
   {
   public:
      virtual ~IfcCostValue(){}

      explicit IfcCostValue() = default;

      virtual std::string className() const { return "IfcCostValue"; }


   protected:
      virtual void serialize(ifc::StepWriter& w) const
      {
         w.beginEntity(this);
         w.writeAttributeValue(Name);
         w.writeAttributeValue(Description);
         w.writeAttributeSelect<IfcAppliedValueSelectWriterVisitor>(AppliedValue);
         w.writeAttributeInstance(UnitBasis);
         w.writeAttributeValue(ApplicableDate);
         w.writeAttributeValue(FixedUntilDate);
         w.writeAttributeValue(Category);
         w.writeAttributeValue(Condition);
         w.writeAttributeValue(IfcArithmeticOperatorEnumStringMap, ArithmeticOperator);
         w.writeAttributeInstance(Components);
         w.endEntity();
      }

   };

} // namespace ifc4

