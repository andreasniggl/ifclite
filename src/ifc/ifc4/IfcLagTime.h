// Automatically generated by ifclite express parser from ifc4 express file - do not modify

#pragma once

#include "IfcTypeDefinitions.h"
#include "IfcSchedulingTime.h"
#include "IfcTimeOrRatioSelect.h"

namespace ifc4
{
   class IfcLagTime : public IfcSchedulingTime
   {
   public:
      virtual ~IfcLagTime(){}

      explicit IfcLagTime() = default;

      explicit IfcLagTime(const IfcTimeOrRatioSelect& _LagValue, const IfcTaskDurationEnum& _DurationType)
         : IfcSchedulingTime(), LagValue(_LagValue), DurationType(_DurationType) {}

      virtual std::string className() const { return "IfcLagTime"; }

      boost::optional<IfcTimeOrRatioSelect> LagValue; // required parameter
      boost::optional<IfcTaskDurationEnum> DurationType; // required parameter

   protected:
      virtual void serialize(ifc::StepWriter& w) const
      {
         w.beginEntity(this);
         w.writeAttributeValue(Name);
         w.writeAttributeValue(IfcDataOriginEnumStringMap, DataOrigin);
         w.writeAttributeValue(UserDefinedDataOrigin);
         w.writeAttributeSelect<IfcTimeOrRatioSelectWriterVisitor>(LagValue);
         w.writeAttributeValue(IfcTaskDurationEnumStringMap, DurationType);
         w.endEntity();
      }

   };

} // namespace ifc4

