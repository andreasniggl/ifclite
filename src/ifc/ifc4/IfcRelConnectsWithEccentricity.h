// Automatically generated by ifclite express parser from ifc4 express file - do not modify

#pragma once

#include "IfcTypeDefinitions.h"
#include "IfcRelConnectsStructuralMember.h"
#include "IfcConnectionGeometry.h"

namespace ifc4
{
   class IfcRelConnectsWithEccentricity : public IfcRelConnectsStructuralMember
   {
   public:
      virtual ~IfcRelConnectsWithEccentricity(){}

      explicit IfcRelConnectsWithEccentricity() = default;

      explicit IfcRelConnectsWithEccentricity(const IfcGloballyUniqueId& _GlobalId, IfcStructuralMember* _RelatingStructuralMember, IfcStructuralConnection* _RelatedStructuralConnection, IfcConnectionGeometry* _ConnectionConstraint)
         : IfcRelConnectsStructuralMember(_GlobalId, _RelatingStructuralMember, _RelatedStructuralConnection), ConnectionConstraint(_ConnectionConstraint) {}

      virtual std::string className() const { return "IfcRelConnectsWithEccentricity"; }

      IfcConnectionGeometry* ConnectionConstraint; // required parameter

   protected:
      virtual void serialize(ifc::StepWriter& w) const
      {
         w.beginEntity(this);
         w.writeAttributeValue(GlobalId);
         w.writeAttributeInstance(OwnerHistory);
         w.writeAttributeValue(Name);
         w.writeAttributeValue(Description);
         w.writeAttributeInstance(RelatingStructuralMember);
         w.writeAttributeInstance(RelatedStructuralConnection);
         w.writeAttributeInstance(AppliedCondition);
         w.writeAttributeInstance(AdditionalConditions);
         w.writeAttributeValue(SupportedLength);
         w.writeAttributeInstance(ConditionCoordinateSystem);
         w.writeAttributeInstance(ConnectionConstraint);
         w.endEntity();
      }

   };

} // namespace ifc4

